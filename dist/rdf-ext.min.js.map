{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/clownface.js","lib/inmemory-store.js","lib/jsonld-parser.js","lib/jsonld-serializer.js","lib/ldp-store.js","lib/microdata-parser.js","lib/ntriples-serializer.js","lib/promise.js","lib/rdfstore-store.js","lib/rdfxml-parser.js","lib/sparql-store.js","lib/turtle-parser.js","lib/turtle-serializer.js","lib/uri-resolver.js","lib/utils-browser.js","node_modules/browserify/lib/_empty.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/events/events.js","node_modules/browserify/node_modules/inherits/inherits_browser.js","node_modules/browserify/node_modules/isarray/index.js","node_modules/browserify/node_modules/path-browserify/index.js","node_modules/browserify/node_modules/process/browser.js","node_modules/browserify/node_modules/readable-stream/duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","node_modules/browserify/node_modules/readable-stream/passthrough.js","node_modules/browserify/node_modules/readable-stream/readable.js","node_modules/browserify/node_modules/readable-stream/transform.js","node_modules/browserify/node_modules/readable-stream/writable.js","node_modules/browserify/node_modules/stream-browserify/index.js","node_modules/browserify/node_modules/string_decoder/index.js","node_modules/browserify/node_modules/util/support/isBufferBrowser.js","node_modules/browserify/node_modules/util/util.js","node_modules/jsonld/browser/ignore.js","node_modules/jsonld/js/jsonld.js","node_modules/jsonld/js/rdfa.js","node_modules/jsonld/node_modules/pkginfo/lib/pkginfo.js","node_modules/n3/N3.js","node_modules/n3/lib/N3Lexer.js","node_modules/n3/lib/N3Parser.js","node_modules/n3/lib/N3Store.js","node_modules/n3/lib/N3StreamParser.js","node_modules/n3/lib/N3StreamWriter.js","node_modules/n3/lib/N3Util.js","node_modules/n3/lib/N3Writer.js","node_modules/rdf-interfaces/rdfi.js","rdf-ext.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","init","rdf","cf","options","convertStringUrls","urlRegEx","Graph","graph","nodes","this","node","value","Array","isArray","map","item","test","createNamedNode","createLiteral","inArray","array","some","otherNode","equals","toArray","match","subject","predicate","object","property","matches","forEach","triple","push","out","literal","toString","InMemoryStore","graphs","iri","callback","undefined","createGraph","toAdd","addAll","limit","add","merge","remove","difference","removeMatches","Object","keys","bind","jsonld","RDFa","JsonLdParser","jsonldExpandFlat","data","base","expand","error","expanded","message","flatten","flattened","process","filter","done","JSON","parse","getLiteral","jNode","type","lang","getNode","nodeCache","createBlankNode","indexOf","pushTriple","createTriple","processSubject","jSubject","types","ns","processPredicate","jObjects","jObject","processObject","processList","jList","rest","entry","jItem","index","jGraph","success","RdfaParser","jsonLdParser","rdfaData","parseHtml","location","href","attach","fromRDF","format","jsonLdData","parseJsonLd","rdfaParser","parseRdfa","JsonLdSerializer","rdfStringNode","serialize","jsonGraph","subjects","subjectIndex","sValue","valueOf","interfaceName","@id","objectValue","language","@language","@value","datatype","@type","p","serializer","serializeJsonLd","LdpStore","self","parsers","defaultParsers","serializers","defaultSerializers","defaultParser","defaultSerializer","request","defaultRequest","buildAccept","accept","mimeType","httpSuccess","statusCode","Accept","headers","content","contentType","forceContentType","useEtag","etag","method","serializeSparqlUpdate","serializeNTriples","nTriples","application/ld+json","application/n-triples","parseTurtle","text/turtle","application/sparql-update","URIResolver","MicrodataProcessor","blankCounter","vocabularies","namespaceURI","isMember","uri","getProperty","name","prototype","constructor","typeNode","integerNode","doubleNode","timeNode","dateTimeNode","durationNode","absoluteURIRE","resolve","trim","str","replace","tokenize","split","reduce","tokens","token","getVocabulary","makeVocab","hash","substring","lastSlash","lastIndexOf","vocabulary","exec","valueMappings","link","getAttribute","media","meta","number","parseInt","parseFloat","time","substr","area","audio","embed","iframe","img","meter","source","track","video","getValue","converter","localName","textContent","nodeType","DOCUMENT_NODE","documentElement","parseURI","createContext","memory","processChildren","current","context","itemProp","itemScope","child","firstChild","nextSibling","ELEMENT_NODE","hasAttribute","generateTriple","vocab","itemType","id","itemId","itemRef","MicrodataParser","processor","parser","parseMicrodata","NTriplesSerializer","funcTemplate","func","PromiseClass","args","arguments","reject","result","ParserPromiseWrapper","SerializerPromiseWrapper","StorePromiseWrapper","store","promise","Parser","Promise","Serializer","Store","RdfstoreStore","clear","insert","insertSuccess","oldGraph","newGraph","addedGraph","RdfLibParser","RDFParser","RDF","RDFS","ELEMENT","ATTRIBUTE","TEXT","CDATA_SECTION","ENTITY_REFERENCE","ENTITY","PROCESSING_INSTRUCTION","COMMENT","DOCUMENT","DOCUMENT_TYPE","DOCUMENT_FRAGMENT","NOTATION","frameFactory","parent","element","NODE","ARC","lastChild","listIndex","rdfid","collection","terminateFrame","close","addSymbol","uriJoin","sym","loadTriple","append","why","isTripleToLoad","addNode","addCollection","addCollectionArc","addBNode","bnodes","bnode","addArc","addLiteral","getAttributeNodeNS","attributeNode","potentialNode","fullName","attributes","prefix","nodeName","reify","document","children","childNodes","cleanParser","root","c","parseDOM","buildFrame","frame","elementURI","el","dig","dom","attrs","nodeValue","removeAttributeNode","parsetype","nv","resource","bnid2","x1","about","bnid","rdftype","x","pframe","candidate","getAttributeNode","removeAttribute","slice","setPrefixForURI","given","baseColon","baseHash","baseScheme","baseSingle","colon","path","alert","RdfXmlParser","toparse","parseXml","domNodesToString","xmlString","parseRdfXml","SparqlStore","endpointUrl","updateUrl","buildMatch","nodeToNT","toNT","graphIri","query","url","encodeURIComponent","resContent","updateRequest","callbackValue","Content-Type","N3","TurtleParser","importPrefixMap","config","documentIRI","blankNodes","n3Triple","n3Prefixes","prefixes","toRdfNode","n3Node","Util","isIRI","isBlank","getLiteralLanguage","getLiteralType","getLiteralValue","NTriplesParser","parseNTriples","TurtleSerializer","usePrefixMap","writer","writerOptions","Writer","createN3Node","nominalValue","addTriple","end","serializeTurtle","SCHEME","parsed","spec","scheme","schemeSpecificPart","charAt","parseGeneric","isGeneric","normalize","segments","splice","authority","fragment","join","lastHash","last","relativeTo","otherURI","relative","j","work","pathStart","questionMark","shift","pop","check","charCodeAt","utils","requestUrl","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","headerLines","getAllResponseHeaders","resHeaders","headerLine","toLowerCase","status","responseText","open","header","setRequestHeader","send","corsProxyRequest","proxyUrl","DOMParser","parseFromString","mixin","Buffer","encoding","byteLength","TypeError","kMaxLength","RangeError","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","poolSize","rootParent","SlowBuffer","buf","hexWrite","string","offset","Number","remaining","strLen","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","start","base64","fromByteArray","utf8Slice","res","tmp","Math","min","decodeUtf8Char","String","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","len","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","codePoint","leadSurrogate","byteArray","hi","lo","toByteArray","src","dst","decodeURIComponent","err","INSPECT_MAX_BYTES","ArrayBuffer","arr","foo","subarray","b","compare","y","isEncoding","concat","list","totalLength","pos","copy","loweredCase","inspect","val","byteOffset","arrayIndexOf","foundIndex","get","console","log","set","v","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","target_start","fill","toArrayBuffer","buffer","BP","_get","toLocaleString","lookup","decode","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","rt","abs","LN2","EventEmitter","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","emit","er","handler","listeners","apply","addListener","listener","newListener","warned","trace","on","once","g","removeListener","fired","position","removeAllListeners","key","listenerCount","emitter","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","normalizeArray","parts","allowAboveRoot","up","unshift","xs","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","cwd","isAbsolute","trailingSlash","paths","from","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","dir","basename","extname","drainQueue","draining","currentQueue","queue","noop","nextTick","fun","setTimeout","title","browser","env","argv","version","versions","off","binding","chdir","umask","Duplex","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","objectKeys","obj","util","inherits","PassThrough","Transform","_transform","chunk","cb","ReadableState","stream","hwm","highWaterMark","defaultHwm","objectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","readableObjectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","Stream","readableAddChunk","state","addToFront","chunkInvalid","isNullOrUndefined","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","isNull","isString","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EE","resume","resumeScheduled","resume_","fromList","stringMode","cpy","endReadable","debuglog","setEncoding","enc","nOrig","doRead","_read","pipe","dest","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","ondata","needDrain","pause","unpipe","doEnd","stdout","stderr","endFn","dests","ev","fn","wrap","paused","events","_fromList","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_flush","ws","_write","writeencoding","WriteReq","WritableState","writableObjectMode","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","prefinish","need","endWritable","cork","uncork","ar","isBoolean","isSymbol","isRegExp","re","objectToString","isDate","isError","isPrimitive","didOnEnd","destroy","_isStdio","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","size","cr","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","RegExp","Date","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","stringify","hasOwnProperty","desc","getOwnPropertyDescriptor","line","numLinesEst","prev","cur","pad","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","objects","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","global","noDeprecation","debugEnviron","debugs","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","date","regexp","origin","_nodejs","_browser","window","$","wrapper","JsonLdProcessor","_expandLanguageMap","languageMap","rval","sort","ki","_isArray","vi","_isString","JsonLdError","_labelBlankNodes","namer","_isList","_isObject","_isBlankNode","getName","_expandValue","activeCtx","activeProperty","expandedProperty","_expandIri","getContextValue","_isKeyword","_graphToRDF","ids","properties","pi","items","RDF_TYPE","ii","_isAbsoluteIri","produceGeneralizedRdf","_listToRDF","_objectToRDF","triples","first","RDF_FIRST","RDF_REST","nil","RDF_NIL","blankNode","_isValue","_isBoolean","XSD_BOOLEAN","_isDouble","XSD_DOUBLE","toExponential","_isNumber","toFixed","XSD_INTEGER","RDF_LANGSTRING","XSD_STRING","_RDFToObject","useNativeTypes","_isNumeric","_compareRDFTriples","t1","t2","attr","_hashQuads","quads","nquads","_toNQuad","sha1","_hashPaths","pathNamer","groupNodes","groupHashes","groups","hashGroup","quad","_getAdjacentBlankNodeName","direction","isNamed","md","update","groupHash","digest","setImmediate","permutate","nextRecursion","recurse","nextPermutation","pathNamerCopy","chosenPath","skipped","chosenNamer","permutator","hasNext","permutation","next","clone","Permutator","_createNodeMap","input","_isUndefined","oi","_isSubject","_isSubjectReference","addValue","propertyIsArray","allowDuplicate","_list","@list","referencedNode","reverseMap","reverseProperty","itemName","_mergeNodeMaps","defaultGraph","graphNames","graphName","nodeMap","@graph","_frame","_validateFrame","flags","_getFrameFlag","explicit","requireAll","_filterSubjects","idx","_addFrameOutput","uniqueEmbeds","_createsCircularReference","subjectStack","_removeEmbed","props","_clone","subframe","_createImplicitFrame","omitDefaultOn","preserve","@preserve","subjectToEmbed","flag","_filterSubject","hasValue","wildcard","matchesSome","hasDefault","embeds","compareValues","useArray","removeValue","removeDependents","_removePreserve","idAlias","_compactIri","container","compactArrays","_compareShortestLeast","_selectTerm","containers","typeOrLanguage","typeOrLanguageValue","prefs","term","mappings","containerMap","ci","typeOrLanguageValueMap","pref","reverse","getInverse","defaultLanguage","commonLanguage","commonType","itemLanguage","suffix","choice","definition","curie","isUsableCurie","_removeBase","_compactValue","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","compacted","_createTermDefinition","localCtx","defined","mapping","_prependBase","rel","transform","protocol","_removeDotSegments","baseSegments","normalizedPath","iriSegments","_getInitialContext","_createInverseContext","terms","_addPreferredTerm","_cloneActiveContext","@base","_isEmptyObject","_validateTypeValue","isValid","_findContextUrls","urls","count","_ctx","_retrieveContextUrls","documentLoader","retrieve","cycles","MAX_CONTEXT_URLS","_cycles","remoteDoc","ex","cause","@context","contextUrl","then","_parseNQuads","plain","wso","eoln","empty","dataset","lines","lineNumber","li","unescaped","unique","ti","_toNQuads","escaped","_parseRdfaApiData","getSubjects","si","getSubjectTriples","predicates","RDF_XML_LITERAL","XMLSerializer","_defineXMLSerializer","Node","serializeToString","TEXT_NODE","RDF_OBJECT","RDF_PLAIN_LITERAL","UniqueNamer","counter","existing","hasAuthority","compact","hasContext","kwgraph","skipExpansion","loadDocument","processContext","Processor","documentUrl","remoteContext","expandContext","keepFreeFloatingNodes","_input","doFrame","remoteFrame","isFrame","expandedFrame","framed","omitDefault","objectify","top","visited","k","isid","sid","of_type","toRDF","useRdfType","rdfParser","_rdfParsers","callbackCalled","createNodeMap","docs","expandComplete","mergeNodes","@default","doc","relabelBlankNodes","_graphs","_nodeMap","promisify","promises","api","op","canDefineProperty","defineProperty","parseLinkHeader","entries","rLinkHeader","params","rParams","DocumentCache","order","cache","expires","ActiveContextCache","key1","key2","level1","documentLoaders","jquery","loader","secure","ajax","accepts","json","dataType","crossDomain","textStatus","jqXHR","getResponseHeader","linkHeader","LINK_HEADER_REL","usePromise","redirects","handleResponse","body","statusText","http","STATUS_CODES","httpStatusCode","maxRedirects","strictSSL","followRedirect","rlink","req","onload","response","useDocumentLoader","callbackArg","hasProperty","isList","getValues","removeProperty","values","v1","v2","registerRDFParser","unregisterRDFParser","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","RDF_LIST","details","captureStackTrace","stack","linked","insideReverse","expandedValue","alias","itemActiveProperty","expandedItem","compactedItem","mapObject","compactedValue","compactedProperty","insideList","expandedActiveProperty","keyword","nextActiveProperty","validCount","@merged","hashBlankNodes","unnamed","hashUnnamed","nameBlankNodes","duplicates","nextUnnamed","named","hashes","nameDuplicates","processGroup","nameGroupMember","group","results","createArray","normalized","ai","graphMap","referencedOnce","objectIsId","usages","graphObject","usage","head","listNodes","nodeKeyCount","subjects_","node_","ctxs","cached","oldName","left","crypto","createHash","MessageDigest","putInt32","getInt32","_sha1","initialized","blockLength","digestLength","messageLength","words","h0","h1","h2","h3","h4","unescape","padBytes","padding","w","regex","full","use","extension","_module","__dirname","factory","define","amd","jsonldjs","RDFaProcessor","targetObject","tripleCount","triplesGraph","typeURI","objectURI","XMLLiteralURI","PlainLiteralURI","langAttributes","contentAttributes","inXHTMLMode","absURIRE","RDFaEnvironment","owner","template","getProjections","projections","_data_","snode","curieParser","pnode","DocumentData","toProjection","Projection","baseURI","dataContext","NCNAME","_baseURI","newBlankNode","nameChar","nameStartChar","parseSafeCURIEOrCURIEOrURI","parseCURIE","parseCURIEOrURI","resolveAndNormalize","parsePredicate","defaultVocabulary","parseTermOrCURIEOrAbsURI","parseTermOrCURIEOrURI","lcvalue","parsePrefixMappings","copyMappings","newMappings","ancestorPath","parentNode","setContext","setXHTMLContext","setHTMLContext","setXMLContext","setInitialContext","getTransferGraph","tsnode","tpnode","newSubject","origins","listMapping","skip","currentObjectResource","typedResource","prefixesCopied","incomplete","listMappingDifferent","vocabAtt","baseSubject","att","prefixAtt","xmlLangAtt","relAtt","revAtt","typeofAtt","propertyAtt","datatypeAtt","contentAtt","aboutAtt","srcAtt","resourceAtt","hrefAtt","inlistAtt","parentObject","forward","childContext","listSubject","previousSibling","voabulary","getProperties","propertyNames","getSubject","uriOrCurie","getAll","projection","uniqueProperties","setMapping","getProjection","getElementsByType","getElementsByProperty","getElementsBySubject","noValue","getElementSubject","hasFeature","implementation","feature","loaded","createElement","setAttribute","appendChild","makeEvent","event","createEvent","initEvent","addEventListener","doneEvent","dispatchEvent","subjectList","fs","pkginfo","pmodule","include","pkg","find","files","readdirSync","readFileSync","package","globalRequire","Lexer","StreamParser","StreamWriter","submodule","N3Lexer","lineMode","_tripleQuotedString","_number","_boolean","_tokenize","_syntaxError","immediately","escapeSequence","escapeReplacements","\\","'","\"","~",".","-","!","&","(",")","*","+",",",";","=","/","?","#","@","%","illegalIriChars","_iri","_unescapedIri","_unescapedString","_singleQuotedString","_langcode","_prefix","_prefixed","_blank","_keyword","_sparqlKeyword","_shortPredicates","_newline","_whitespace","_endOfFile","_tokenizeToEnd","inputFinished","reportSyntaxError","whiteSpaceMatch","_line","firstChar","matchLength","inconclusive","_prevTokenType","_unescape","sequence","unicode4","unicode8","escapedChar","replacement","issue","addChunk","N3Parser","_tripleStack","_graph","_baseIRI","_baseIRIPath","documentPart","_baseIRIRoot","rootIRI","isTurtle","isTriG","isNTriples","isNQuads","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_resolveIRI","_error","_callback","_subject","_lexer","lexer","RDF_PREFIX","absoluteIRI","blankNodePrefix","blankNodeCount","_resetBlankNodeIds","_readInTopContext","_prefixes","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_predicate","_readBlankNodeHead","_readListItem","_readPunctuation","_readBlankNodeTail","_readObject","_object","_readDataTypeOrLang","blank","_getTripleEndReader","_readGraph","_readBlankNodePunctuation","itemHead","prevItemHead","parentTriple","_readQuadPunctuation","_readPrefixIRI","prefixIRI","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","tripleCallback","prefixCallback","_readCallback","N3Store","_size","_entities","_entityCount","_blankNodeIndex","addPrefixes","addTriples","expandPrefixedName",{"end":{"file":"dist/rdf-ext.js","comments_before":[],"nlb":false,"endpos":548052,"endcol":10,"endline":17844,"pos":548048,"col":6,"line":17844,"value":"size","type":"name"},"start":{"file":"dist/rdf-ext.js","comments_before":[],"nlb":false,"endpos":548052,"endcol":10,"endline":17844,"pos":548048,"col":6,"line":17844,"value":"size","type":"name"},"name":"size"},"graphKey","subjectKey","predicateKey","_addToIndex","index0","key0","index1","index2","_removeFromIndex","_findInIndex","name0","name1","name2","entityKeys","value0","entity0","value1","entity1","_countInIndex","graphItem","freeze","entities","addPrefix","removeTriple","removeTriples","findByIRI","countByIRI","suggestedName","N3StreamParser","N3StreamWriter","N3Writer","AddN3Util","toPrototype","N3Util","ApplyToThis","Xsd","XsdString","XsdInteger","XsdDecimal","XsdBoolean","RdfLangString","entity","isLiteral","isPrefixedName","prefixedName","createIRI","modifier","outputStream","_output","_outputStream","_writeTriple","_writeTripleLine","_prefixIRIs","characterReplacer","character","N3LiteralMatcher","escape","escapeAll","\t","\n","\r","\b","\f","_encodeIriOrBlankNode","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","prefixMatch","_prefixRegex","_encodeLiteral","_blockedWrite","prefixIRIs","hasPrefixes","IRIlist","prefixList","singleDone","encodeString","_g1","_g","low","hex","BlankNode","defineProperties","NEXTID","h","NamedNode","Literal","nativ","Boolean","Triple","_spo","actions","run","addArray","every","addAction","TripleAction","action","PrefixMap","shrink","setDefault","override","TermMap","Profile","tp","setDefaultVocabulary","setDefaultPrefix","setTerm","setPrefix","importProfile","profile","RDFEnvironment","rp","owl","rdfs","rdfa","xhv","xml","xsd","dt","integer","decimal","nonPositiveInteger","nonNegativeInteger","negativeInteger","unsignedLong","positiveInteger","unsignedInt","unsignedShort","unsignedByte","dateTime","createAction","createProfile","createTermMap","createPrefixMap","isNode","at","bt","intersection","wrappedCreateGraph","createGraphExt","replaceMerge"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvhzvjdknkvnxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n\nvar init = function (rdf) {\n  var cf = {};\n\n  cf.options = {\n    convertStringUrls: true\n  };\n\n  cf.urlRegEx = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n  cf.Graph = function (graph, nodes) {\n    if (!(this instanceof cf.Graph)) {\n      return new cf.Graph(graph, nodes);\n    }\n\n    var node = function (value) {\n      if (Array.isArray(value)) {\n        return value.map(function (item) {\n          return node(item);\n        });\n      }\n\n      if (typeof value === 'object' && 'interfaceName' in value) {\n        return value;\n      }\n\n      if (typeof value === 'string') {\n        if (cf.options.convertStringUrls && cf.urlRegEx.test(value)) {\n          return rdf.createNamedNode(value);\n        } else {\n          return rdf.createLiteral(value);\n        }\n      } else if (typeof value === 'number') {\n        return rdf.createLiteral(value + '');\n      } else {\n        throw 'unknown type';\n      }\n    };\n\n    var inArray = function (node, array) {\n      return array.some(function (otherNode) {\n        return otherNode.equals(node);\n      });\n    };\n\n    var toArray = function (value) {\n      if (!Array.isArray(value)) {\n        return [value];\n      }\n\n      return value;\n    };\n\n    var match = function (subject, predicate, object, property) {\n      var matches = [];\n\n      graph.forEach(function (triple) {\n        if (subject !== null && !inArray(triple.subject, subject)) {\n          return;\n        }\n\n        if (predicate !== null && !inArray(triple.predicate, predicate)) {\n          return;\n        }\n\n        if (object !== null && !inArray(triple.object, object)) {\n          return;\n        }\n\n        matches.push(triple[property]);\n      });\n\n      return matches;\n    };\n\n    this.node = function (value) {\n      return new cf.Graph(graph, node(toArray(value)));\n    };\n\n    this.in = function (predicate) {\n      return new cf.Graph(graph, match(null, node(toArray(predicate)), nodes, 'subject'));\n    };\n\n    this.out = function (predicate) {\n      return new cf.Graph(graph, match(nodes, node(toArray(predicate)), null, 'object'));\n    };\n\n    this.nodes = function () {\n      return nodes;\n    };\n\n    this.literal = function () {\n      if (nodes == null) {\n        return null;\n      }\n\n      return nodes\n        .map(function (node) {\n          return node.toString();\n        });\n    };\n  };\n\n  rdf.cf = cf;\n};\n\n\nmodule.exports = init;\n","/* global rdf:true */\n'use strict';\n\n\nvar InMemoryStore = function (rdf) {\n  var graphs = {};\n\n  this.graph = function (iri, callback) {\n    var graph = null;\n\n    if (iri === undefined) {\n      graph = rdf.createGraph();\n\n      this.forEach(function (toAdd) {\n        graph.addAll(toAdd);\n      });\n    } else if (iri in graphs) {\n      graph = graphs[iri];\n    }\n\n    callback(graph);\n  };\n\n  this.match = function (iri, subject, predicate, object, callback, limit) {\n    this.graph(iri, function (graph) {\n      if (graph == null) {\n        callback(null);\n      } else {\n        callback(graph.match(subject, predicate, object, limit));\n      }\n    });\n  };\n\n  this.add = function (iri, graph, callback) {\n    graphs[iri] = rdf.createGraph();\n    graphs[iri].addAll(graph);\n\n    callback(graph);\n  };\n\n  this.merge = function (iri, graph, callback) {\n    if (iri in graphs) {\n      graphs[iri].addAll(graph);\n    } else {\n      graphs[iri] = graph;\n    }\n\n    callback(graph);\n  };\n\n  this.remove = function (iri, graph, callback) {\n    if (iri in graphs) {\n      graphs[iri] = rdf.Graph.difference(graphs[iri], graph);\n    }\n\n    callback(true);\n  };\n\n  this.removeMatches = function (iri, subject, predicate, object, callback) {\n    if (iri in graphs) {\n      graphs[iri].removeMatches(subject, predicate, object);\n    }\n\n    callback(true);\n  };\n\n  this.delete = function (iri, callback) {\n    if (iri in graphs) {\n      delete graphs[iri];\n    }\n\n    callback(true);\n  };\n\n  this.forEach = function (callback) {\n    Object.keys(graphs).forEach(function (iri) {\n      callback(graphs[iri], iri);\n    });\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.InMemoryStore = InMemoryStore.bind(null, rdf);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar\n  jsonld = require('jsonld'),\n  RDFa = require('jsonld/js/rdfa');\n\n\nvar JsonLdParser = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var jsonldExpandFlat = function (data, base, callback) {\n    jsonld.expand(data, {'base': base}, function (error, expanded) {\n      if (error != null) {\n        return callback(null, error.message);\n      }\n\n      jsonld.flatten(expanded, {}, function (error, flattened) {\n        if (error != null) {\n          return callback(null, error.message);\n        }\n\n        if (!('@graph' in flattened)) {\n          return callback(null);\n        }\n\n        callback(flattened['@graph']);\n      });\n    });\n  };\n\n  var toArray = function (object) {\n    if (object == null) {\n      return [];\n    }\n\n    if (Array.isArray(object)) {\n      return object;\n    }\n\n    return [object];\n  };\n\n  this.process = function (data, callback, base, filter, done) {\n    if (typeof data === 'string') {\n      data = JSON.parse(data);\n    }\n\n    if (base == null) {\n      base = '';\n    }\n\n    if (filter == null) {\n      filter = function () { return true; };\n    }\n\n    if (done == null) {\n      done = function () {};\n    }\n\n    var getLiteral = function (jNode) {\n      var\n        type = null,\n        lang = null;\n\n      if ('@type' in jNode) {\n        type = getNode(jNode['@type']);\n      }\n\n      if ('@language' in jNode) {\n        lang = jNode['@language'];\n      }\n\n      return rdf.createLiteral(jNode['@value'], lang, type);\n    };\n\n    var nodeCache = {};\n\n    var getNode = function (jNode) {\n      // is there already a node?\n      if (jNode in nodeCache) {\n        return nodeCache[jNode];\n      }\n\n      // is it a blank node?\n      if (jNode == null) {\n        return rdf.createBlankNode();\n      }\n\n      if (jNode.indexOf('_:') === 0) {\n        return nodeCache[jNode] = rdf.createBlankNode();\n      }\n\n      // if not it's a named node\n      return nodeCache[jNode] = rdf.createNamedNode(jNode);\n    };\n\n    var pushTriple = function (subject, predicate, object) {\n      var triple = rdf.createTriple(subject, predicate, object);\n\n      if (filter(triple)) {\n        callback(triple);\n      }\n    };\n\n    var processSubject = function (jSubject) {\n      var\n        subject = jSubject['@id'],\n        types = toArray(jSubject['@type']);\n\n      // add type triples\n      types.forEach(function (type) {\n        pushTriple(\n          getNode(subject),\n          getNode(rdf.ns.type),\n          getNode(type));\n      });\n\n      // other triples\n      for (var predicate in jSubject) {\n        // ignore JSON-LD properties\n        if (predicate.indexOf('@') === 0) {\n          continue;\n        }\n\n        processPredicate(subject, predicate, toArray(jSubject[predicate]));\n      }\n    };\n\n    var processPredicate = function (subject, predicate, jObjects) {\n      jObjects.forEach(function (jObject) {\n        pushTriple(\n          getNode(subject),\n          getNode(predicate),\n          processObject(jObject));\n      });\n    };\n\n    var processObject = function (jObject) {\n      // is it a simple literal?\n      if (typeof jObject === 'string') {\n        return rdf.createLiteral(jObject);\n      }\n\n      // or blank node / named node\n      if ('@id' in jObject) {\n        return getNode(jObject['@id']);\n      }\n\n      if ('@list' in jObject) {\n        return processList(jObject['@list']);\n      }\n\n      // or complex literal\n      return getLiteral(jObject);\n    };\n\n    var processList = function (jList) {\n      var\n        entry = getNode(),\n        subject = entry,\n        rest;\n\n      jList.forEach(function (jItem, index) {\n        if (index !== jList.length-1) {\n          rest = getNode();\n        } else {\n          rest = getNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#nil');\n        }\n\n        pushTriple(\n          subject,\n          getNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#first'),\n          getNode(jItem['@id']));\n\n        pushTriple(\n          subject,\n          getNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'),\n          rest);\n\n        subject = rest;\n      });\n\n      return entry;\n    };\n\n    jsonldExpandFlat(data, base, function (jGraph, error) {\n      if (error != null) {\n        return done(false, error);\n      }\n\n      if (jGraph == null) {\n        return done(true);\n      }\n\n      jGraph.forEach(function (jSubject) {\n        processSubject(jSubject);\n      });\n\n      done(true);\n    });\n\n    return true;\n  };\n\n  this.parse = function (data, callback, base, filter, graph) {\n    if (graph == null) {\n      graph = rdf.createGraph();\n    }\n\n    return this.process(\n      data,\n      function (triple) { graph.add(triple); },\n      base,\n      filter,\n      function (success, error) { callback(success ? graph : null, error); });\n  };\n};\n\n\nvar RdfaParser = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var jsonLdParser = new JsonLdParser(rdf);\n\n  this.parse = function (rdfaData, callback, base, filter, graph) {\n    if (typeof rdfaData === 'string') {\n      try {\n        rdfaData = rdf.parseHtml(rdfaData);\n      } catch (error) {\n        callback(null, error);\n\n        return false;\n      }\n    }\n\n    if (graph == null) {\n      graph = rdf.createGraph();\n    }\n\n    rdfaData.location = { href: base };\n    RDFa.attach(rdfaData);\n\n    jsonld.fromRDF(rdfaData.data, {format: 'rdfa-api'}, function (error, jsonLdData) {\n      if (error != null) {\n        callback(null, error);\n      } else {\n        jsonLdParser.process(\n          jsonLdData,\n          function (triple) {\n            graph.add(triple);\n          },\n          base,\n          filter,\n          function (success, error) {\n            callback(success ? graph : null, error);\n          });\n      }\n    });\n\n    return true;\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.JsonLdParser = JsonLdParser.bind(null, rdf);\n\n  var jsonLdParser = new JsonLdParser(rdf);\n  rdf.parseJsonLd = jsonLdParser.parse.bind(jsonLdParser);\n\n  rdf.RdfaParser = RdfaParser.bind(null, rdf);\n\n  var rdfaParser = new RdfaParser(rdf);\n  rdf.parseRdfa = rdfaParser.parse.bind(rdfaParser);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar\n  jsonld = require('jsonld');\n\n\nvar JsonLdSerializer = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var rdfStringNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#string');\n\n  this.serialize = function (graph, callback) {\n    if (callback == null) {\n      callback = function () {};\n    }\n\n    var jsonGraph = [];\n    var subjects = {};\n\n    var subjectIndex = function (s) {\n      var sValue = s.valueOf();\n\n      if (typeof subjects[sValue] === 'undefined') {\n        if (s.interfaceName == 'BlankNode') {\n          jsonGraph.push({ '@id': '_:' + sValue });\n        } else {\n          jsonGraph.push({ '@id': sValue });\n        }\n\n        subjects[sValue] = jsonGraph.length - 1;\n      }\n\n      return subjects[sValue];\n    };\n\n    var objectValue = function (o) {\n      if (o.interfaceName == 'NamedNode') {\n        return { '@id': o.valueOf() };\n      } else if (o.interfaceName == 'BlankNode') {\n        return { '@id': '_:' + o.valueOf()};\n      } else {\n        if (o.language != null) {\n          return { '@language': o.language, '@value': o.valueOf() };\n        } else if ('datatype' in o && o.datatype != null && !rdfStringNode.equals(o.datatype)) {\n          return { '@type': o.datatype.valueOf(), '@value': o.valueOf() };\n        } else {\n          return o.valueOf();\n        }\n      }\n    };\n\n    graph.forEach(function (t) {\n      var s = subjectIndex(t.subject);\n      var p = t.predicate.valueOf();\n\n      if (p == 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') {\n        if (typeof jsonGraph[s]['@type'] === 'undefined') {\n          jsonGraph[s]['@type'] = [];\n        }\n\n        jsonGraph[s]['@type'].push(t.object.valueOf());\n      } else {\n        if (typeof jsonGraph[s][p] === 'undefined') {\n          jsonGraph[s][p] = objectValue(t.object);\n        } else {\n          if (!Array.isArray(jsonGraph[s][p])) {\n            jsonGraph[s][p] = [jsonGraph[s][p]];\n          }\n\n          jsonGraph[s][p].push(objectValue(t.object));\n        }\n      }\n    });\n\n    callback(jsonGraph);\n\n    return jsonGraph;\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.JsonLdSerializer = JsonLdSerializer.bind(null, rdf);\n\n  var serializer = new JsonLdSerializer(rdf);\n  rdf.serializeJsonLd = (serializer).serialize.bind(serializer);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar LdpStore = function (rdf, options) {\n  var self = this;\n\n  if (options == null) {\n    options = {};\n  }\n\n  self.parsers = LdpStore.defaultParsers;\n  self.serializers = LdpStore.defaultSerializers;\n  self.defaultParser = 'text/turtle';\n  self.defaultSerializer = 'text/turtle';\n  self.request = rdf.defaultRequest;\n\n  if ('request' in options) {\n    self.request = options.request;\n  }\n\n  if ('parsers' in options) {\n    self.parsers = options.parsers;\n  }\n\n  if ('serializers' in options) {\n    self.serializers = options.serializers;\n  }\n\n  if ('defaultParser' in options) {\n    self.defaultParser = options.defaultParser;\n  }\n\n  if ('defaultSerializer' in options) {\n    self.defaultSerializer = options.defaultSerializer;\n  }\n\n  var buildAccept = function() {\n    var accept = null;\n\n    for (var mimeType in self.parsers) {\n      if (accept == null) {\n        accept = mimeType;\n      } else {\n        accept += ', ' + mimeType;\n      }\n    }\n\n    return accept;\n  };\n\n  var httpSuccess = function (statusCode) {\n    return (statusCode >= 200 && statusCode < 300);\n  };\n\n  self.graph = function (iri, callback, options) {\n    if (options == null) {\n      options = {};\n    }\n\n    self.request('GET', iri, {'Accept': buildAccept()}, null,\n      function (statusCode, headers, content, error) {\n        // error during request\n        if (error != null) {\n          return callback(null, 'request error: ' + error);\n        }\n\n        // http status code != success\n        if (!httpSuccess(statusCode)) {\n          // in case of GET allow statusCode of 0 for browser local load\n          if (statusCode != 0) {\n            return callback(null, 'status code error: ' + statusCode);\n          }\n        }\n\n        // use default parser...\n        var contentType = self.defaultParser;\n\n        // ...if content-type is not given or unknown\n        if ('content-type' in headers && headers['content-type'] in self.parsers) {\n          contentType = headers['content-type'];\n        }\n        \n        // and override if set in options\n        if ('forceContentType' in options && options.forceContentType in self.parsers) {\n          contentType = options.forceContentType;\n        }\n\n        self.parsers[contentType](content, function (graph, error) {\n          if (error != null) {\n            return callback(null, 'parser error: ' + error);\n          }\n\n          // copy etag header to Graph object\n          if ('useEtag' in options && options.useEtag && 'etag' in headers) {\n            graph.etag = headers.etag;\n          }\n\n          callback(graph);\n        }, iri);\n      }\n    );\n  };\n\n  self.match = function (iri, subject, predicate, object, callback, limit) {\n    self.graph(iri, function (graph, error) {\n      if (error != null) {\n        return callback(null, error);\n      }\n\n      callback(graph.match(subject, predicate, object, limit));\n    });\n  };\n\n  self.add = function (iri, graph, callback, options) {\n    var\n      method = 'PUT',\n      contentType = self.defaultSerializer,\n      headers = {};\n\n    if (options == null) {\n      options = {};\n    }\n\n    headers['Content-Type'] = contentType;\n\n    if ('method' in options) {\n      method = options.method;\n    }\n\n    if ('etag' in options) {\n      headers['If-Match'] = options.etag;\n    }\n\n    if ('useEtag' in options && options.useEtag && 'etag' in graph) {\n      headers['If-Match'] = graph.etag;\n    }\n\n    self.serializers[contentType](graph, function (data) {\n      self.request(method, iri, headers, data,\n        function (statusCode, headers, content, error) {\n          callback(graph, error);\n        }\n      );\n    });\n  };\n\n  self.merge = function (iri, graph, callback, options) {\n    var\n      contentType = 'application/sparql-update';\n      headers = {};\n\n    headers['Content-Type'] = contentType;\n\n    if (options == null) {\n      options = {};\n    }\n\n    if ('etag' in options) {\n      headers['If-Match'] = options.etag;\n    }\n\n    if ('useEtag' in options && options.useEtag && 'etag' in graph) {\n      headers['If-Match'] = graph.etag;\n    }\n\n    self.serializers[contentType](graph, function (data) {\n      self.request('PATCH', iri, headers, data,\n        function (statusCode, headers, content, error) {\n          callback(graph, error);\n        }\n      );\n    });\n  };\n\n  self.remove = function (iri, graph, callback) {\n    //TODO: implement me\n  };\n\n  self.removeMatches = function (iri, subject, predicate, object, callback) {\n    //TODO: implement me\n  };\n\n  self.delete = function (iri, callback) {\n    self.request('DELETE', iri, {}, null,\n      function (statusCode, headers, content, error) {\n        // error during request\n        if (error != null) {\n          return callback(false, 'request error: ' + error);\n        }\n\n        // http status code != success\n        if (!httpSuccess(statusCode)) {\n          return callback(false, 'status code error: ' + statusCode);\n        }\n\n        callback(true);\n      }\n    );\n  };\n};\n\n\nLdpStore.serializeSparqlUpdate = function (rdf, graph, callback) {\n  rdf.serializeNTriples(graph, function (nTriples, error) {\n    if (error != null) {\n      return callback(null, error);\n    }\n\n    callback('INSERT DATA { ' + nTriples + ' }');\n  });\n};\n\n\nvar init = function (rdf) {\n  LdpStore.defaultParsers = {\n    'application/ld+json': rdf.parseJsonLd,\n    'application/n-triples': rdf.parseTurtle,\n    'text/turtle': rdf.parseTurtle\n  };\n\n\n  LdpStore.defaultSerializers = {\n    'application/ld+json': rdf.serializeJsonLd,\n    'application/n-triples': rdf.serializeNTriples,\n    'application/sparql-update': LdpStore.serializeSparqlUpdate,\n    'text/turtle': rdf.serializeNTriples\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  init(rdf);\n\n  rdf.LdpStore = LdpStore.bind(null, rdf);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar\n  URIResolver = require('./uri-resolver');\n\n\nvar MicrodataProcessor = function () {\n  this.blankCounter = 0;\n\n  this.vocabularies = [{\n    namespaceURI: 'http://schema.org/',\n    isMember: function (uri) {\n      return uri.indexOf(this.namespaceURI) === 0;\n    },\n    getProperty: function (name) {\n      return this.namespaceURI + name;\n    }\n  }];\n};\n\nMicrodataProcessor.prototype = new URIResolver();\nMicrodataProcessor.prototype.constructor = MicrodataProcessor;\n\nMicrodataProcessor.typeNode = rdf.createNamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\nMicrodataProcessor.integerNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#integer');\nMicrodataProcessor.doubleNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#double');\nMicrodataProcessor.timeNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#time');\nMicrodataProcessor.dateTimeNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#dateTime');\nMicrodataProcessor.durationNode = rdf.createNamedNode('http://www.w3.org/2001/XMLSchema#duration');\n\nMicrodataProcessor.absoluteURIRE = /[\\w\\_\\-]+:\\S+/;\n\nMicrodataProcessor.prototype.resolve = function (uri) {\n  return uri;\n};\n\nMicrodataProcessor.trim = function (str) {\n  if (str == null) {\n    return '';\n  }\n\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n};\n\nMicrodataProcessor.tokenize = function (str) {\n  return MicrodataProcessor\n    .trim(str)\n    .split(/\\s+/)\n    .reduce(function (tokens, token) {\n      if (token) {\n        tokens.push(token);\n      }\n\n      return tokens;\n    }, []);\n};\n\nMicrodataProcessor.prototype.getVocabulary = function (uri) {\n  for (var i=0; i<this.vocabularies.length; i++) {\n    if (this.vocabularies[i].isMember(uri)) {\n      return this.vocabularies[i];\n    }\n  }\n\n  var makeVocab = function(ns) {\n    return {\n      namespaceURI: ns,\n      getProperty: function(name) {\n        return this.namespaceURI + name;\n      }\n    };\n  };\n\n  var hash = uri.indexOf(\"#\");\n\n  if (hash >= 0) {\n    return makeVocab(uri.substring(0,hash+1));\n  }\n\n  var lastSlash = uri.lastIndexOf('/');\n\n  if (lastSlash >= 0) {\n    return makeVocab(uri.substring(0,lastSlash+1));\n  }\n\n  return makeVocab(uri);\n};\n\nMicrodataProcessor.prototype.getProperty = function (value, vocabulary) {\n  if (MicrodataProcessor.absoluteURIRE.exec(value)) {\n    return value;\n  }\n\n  return vocabulary ? vocabulary.getProperty(value) : base.resolve('#' + value);\n};\n\nMicrodataProcessor.valueMappings = {\n  link: function(node,base) {\n    return rdf.createNamedNode(base.resolve(node.getAttribute('href')));\n  },\n  media: function (node, base) {\n    return rdf.createNamedNode(base.resolve(node.getAttribute('src')));\n  },\n  meta: function (node) {\n    var\n      value = node.getAttribute('content'),\n      lang = node.getAttribute('lang');\n\n    return rdf.createLiteral(value, lang ? lang : null);\n  },\n  number: function (node) {\n    var value = node.getAttribute('value');\n\n    if (value === parseInt(value).toString()) {\n      return rdf.createLiteral(value, null, MicrodataProcessor.integerNode);\n    } else if (value === parseFloat(value).toString()) {\n      return rdf.createLiteral(value, null, MicrodataProcessor.doubleNode);\n    } else {\n      return rdf.createLiteral(value);\n    }\n  },\n  object: function (node, base) {\n    return rdf.createNamedNode(base.resolve(node.getAttribute('data')));\n  },\n  time: function(node) {\n    var\n      value = node.getAttribute('datetime'),\n      lang = node.getAttribute('lang');\n\n    //TODO: add http://www.w3.org/2001/XMLSchema#gYearMonth.\n    //TODO: add http://www.w3.org/2001/XMLSchema#gYear.\n    //TODO: use RegExp\n    if (value.length === 9) {\n      return rdf.createLiteral(value, null, MicrodataProcessor.timeNode);\n    } else if (value.length === 20) {\n      return rdf.createLiteral(value, null, MicrodataProcessor.dateTimeNode);\n    } else if (value.substr(0, 1) === 'P') {\n      return rdf.createLiteral(value, null, MicrodataProcessor.durationNode);\n    } else {\n      return rdf.createLiteral(value, lang ? lang : null);\n    }\n  }\n};\n\nMicrodataProcessor.valueMappings.a = MicrodataProcessor.valueMappings.link;\nMicrodataProcessor.valueMappings.area = MicrodataProcessor.valueMappings.a;\nMicrodataProcessor.valueMappings.audio = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.data = MicrodataProcessor.valueMappings.number;\nMicrodataProcessor.valueMappings.embed = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.iframe = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.img = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.meter = MicrodataProcessor.valueMappings.number;\nMicrodataProcessor.valueMappings.source = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.track = MicrodataProcessor.valueMappings.media;\nMicrodataProcessor.valueMappings.video = MicrodataProcessor.valueMappings.media;\n\nMicrodataProcessor.prototype.getValue = function(node, base) {\n  var converter = MicrodataProcessor.valueMappings[node.localName];\n\n  if (converter != null) {\n    return converter(node, base);\n  }\n\n  return rdf.createLiteral(node.textContent);\n};\n\nMicrodataProcessor.prototype.process = function (node, callback, base) {\n  var\n    self = this;\n\n  if (node.nodeType === node.DOCUMENT_NODE) {\n    node = node.documentElement;\n  }\n\n  base = self.parseURI(base);\n\n  var createContext = function (memory, subject, type, vocabulary) {\n    return {\n      memory: memory ? memory : {},\n      subject: subject,\n      type: type,\n      vocabulary: vocabulary\n    };\n  };\n\n  var processChildren = function (current, type) {\n    var\n      context,\n      itemProp,\n      itemScope,\n      predicate,\n      subject,\n      value;\n\n    for (var child = current.item.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType !== child.ELEMENT_NODE) {\n        continue;\n      }\n\n      itemProp = child.getAttribute('itemprop');\n      itemScope = child.hasAttribute('itemscope');\n\n      // spec 6.3.9.1.1\n      context = createContext(current.context.memory, current.context.subject, type, current.context.vocabulary);\n\n      subject = generateTriple({item: child, context: context});\n\n      if (itemProp) {\n        // spec 6.3.9.1\n        MicrodataProcessor.tokenize(itemProp).forEach(function (token) {\n          // spec 6.3.9.1.2\n          //TODO: Let predicate be the result of generate predicate URI using context and name\n          if (MicrodataProcessor.absoluteURIRE.test(token)) {\n            predicate = rdf.createNamedNode(token);\n          } else if (context.vocabulary) {\n            predicate = rdf.createNamedNode(context.vocabulary + token);\n          } else {\n            predicate = rdf.createNamedNode(base.resolve('#' + token));\n          }\n\n          // spec 6.3.9.1.3\n          //TODO: Let value be the property value of element\n          value = self.getValue(child, base);\n\n          // spec 6.3.9.1.4\n          //TODO: If value is an item, then generate the triples for value using context. Replace value by the subject returned from those steps\n          if (itemScope) {\n            value = subject;\n          }\n\n          // spec 6.3.9.1.5\n\n          callback(rdf.createTriple(\n            current.context.subject,\n            predicate,\n            value\n          ));\n\n          // spec 6.3.9.1.6\n          //TODO: If an entry exists in the registry for name in the vocabulary associated with vocab having the key subPropertyOf or equivalentProperty, for each such value equiv, generate the following triple:\n        });\n      }\n    }\n  };\n\n  var processSubject = function (current) {\n    var\n      itemType = current.item.getAttribute('itemtype'),\n      type,\n      vocab;\n\n    // spec 6.3.3\n    MicrodataProcessor.tokenize(itemType).forEach(function (token) {\n      if (!MicrodataProcessor.absoluteURIRE.test(token)) {\n        return;\n      }\n\n      // spec 6.3.4\n      if (!type) {\n        type = token;\n      }\n\n      callback(rdf.createTriple(\n        current.context.subject,\n        MicrodataProcessor.typeNode,\n        rdf.createNamedNode(base.resolve(token))));\n    });\n\n    // spec 6.3.5\n    if (!type) {\n      type = current.context.type;\n    }\n\n    // spec 6.3.6\n    //TODO: If the registry contains a URI prefix that is a character for character match of type up to the length of the URI prefix, set vocab as that URI prefix\n    // spec 6.3.7\n    //TODO: Otherwise, if type is not empty, construct vocab by removing everything following the last SOLIDUS U+002F (\"/\") or NUMBER SIGN U+0023 (\"#\") from the path component of type\n    if (type) {\n      vocab = self.getVocabulary(type); //TODO: return only uri string\n      vocab = vocab ? vocab.namespaceURI : null;\n    }\n\n    // spec 6.3.8\n    //TODO: Update evaluation context setting current vocabulary to vocab\n    if (vocab) {\n      current.context.vocabulary = vocab;\n    }\n\n    // spec 6.3.9\n    processChildren(current, type);\n  };\n\n  var generateTriple = function (current) {\n    var\n      id = current.item.getAttribute('id'),\n      itemId = current.item.getAttribute('itemid'),\n      itemRef = current.item.getAttribute('itemref'),\n      itemScope = current.item.hasAttribute('itemscope');\n\n    // spec 6.3.1\n    if (id in current.context.memory) {\n      current.context.memory[id].forEach(function (context) {\n        processSubject({item: current.item, context: context});\n      });\n    } else {\n      if (itemScope) {\n        if (itemId) {\n          current.context.subject = rdf.createNamedNode(base.resolve(itemId));\n        } else {\n          current.context.subject = rdf.createBlankNode();\n        }\n\n        // spec 6.3.2\n        //TODO: Add a mapping from item to subject in memory\n        MicrodataProcessor.tokenize(itemRef).forEach(function (token) {\n          if (!(token in current.context.memory)) {\n            current.context.memory[token] = [];\n          }\n\n          current.context.memory[token].push(current.context);\n        });\n      }\n\n      processSubject(current);\n    }\n\n    return current.context.subject;\n  };\n\n  generateTriple({item: node, context: createContext(null, null, null, null)});\n};\n\nvar MicrodataParser = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var processor = new MicrodataProcessor();\n\n  this.process = function (data, callback, base, filter, done) {\n    if (base == null) {\n      base = '';\n    }\n\n    if (filter == null) {\n      filter = function () { return true; };\n    }\n\n    if (done == null) {\n      done = function () {};\n    }\n\n    processor.process(rdf.parseHtml(data, base), callback, base);\n\n    done(true);\n\n    return true;\n  };\n\n  this.parse = function (data, callback, base, filter, graph) {\n    if (graph == null) {\n      graph = rdf.createGraph();\n    }\n\n    return this.process(\n      data,\n      function (triple) { graph.add(triple); },\n      base,\n      filter,\n      function (success) { callback(success ? graph : null); });\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.MicrodataParser = MicrodataParser.bind(null, rdf);\n\n  var parser = new MicrodataParser(rdf);\n  rdf.parseMicrodata = parser.parse.bind(parser);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar NTriplesSerializer = function (rdf) {\n  this.serialize = function (graph, callback) {\n    if (callback == null) {\n      callback = function () {};\n    }\n\n    var nTriples = rdf.Graph.toString(graph);\n\n    callback(nTriples);\n\n    return nTriples;\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.NTriplesSerializer = NTriplesSerializer.bind(null, rdf);\n\n  var serializer = new NTriplesSerializer(rdf);\n  rdf.serializeNTriples = serializer.serialize.bind(serializer);\n};\n","/* global rdf:true, Promise:false */\n'use strict';\n\n\nvar funcTemplate = function (func, PromiseClass) {\n  return function () {\n    var args = arguments;\n\n    return new PromiseClass(function (resolve, reject) {\n      var callback = function (result, error) {\n        if (error != null) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      };\n\n      func(args, callback);\n    });\n  };\n};\n\n\nvar ParserPromiseWrapper = function (p, parser) {\n  this.process = funcTemplate(function (args, callback) { parser.process(args[0], args[1], args[2], args[3], callback); }, p);\n  this.parse = funcTemplate(function (args, callback) { parser.parse(args[0], callback, args[1], args[2], args[3]); }, p);\n};\n\n\nvar SerializerPromiseWrapper = function (p, serializer) {\n  this.serialize = funcTemplate(function (args, callback) { serializer.serialize(args[0], callback); }, p);\n};\n\n\nvar StorePromiseWrapper = function (p, store) {\n  this.graph = funcTemplate(function (args, callback) { store.graph(args[0], callback); }, p);\n  this.match = funcTemplate(function (args, callback) { store.match(args[0], args[1], args[2], args[3], callback, args[5]); }, p);\n  this.add = funcTemplate(function (args, callback) { store.add(args[0], args[1], callback); }, p);\n  this.merge = funcTemplate(function (args, callback) { store.merge(args[0], args[1], callback); }, p);\n  this.remove = funcTemplate(function (args, callback) { store.remove(args[0], args[1], callback); }, p);\n  this.removeMatches = funcTemplate(function (args, callback) { store.removeMatches(args[0], args[1], args[2], args[3], callback); }, p);\n  this.delete = funcTemplate(function (args, callback) { store.delete(args[0], callback); }, p);\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.promise = {};\n  rdf.promise.Parser = ParserPromiseWrapper.bind(null, rdf.Promise);\n  rdf.promise.Serializer = SerializerPromiseWrapper.bind(null, rdf.Promise);\n  rdf.promise.Store = StorePromiseWrapper.bind(null, rdf.Promise);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar RdfstoreStore = function (store, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var\n    self = this,\n    rdf = store.rdf;\n\n  self.graph = function (iri, callback) {\n    store.graph(iri, function (success, graph) {\n      if (success) {\n        callback(graph);\n      } else {\n        callback(null);\n      }\n    });\n  };\n\n  self.match = function (iri, subject, predicate, object, callback, limit) {\n    self.graph(iri, function (graph) {\n      if (graph == null) {\n        callback(null);\n      } else {\n        callback(graph.match(subject, predicate, object, limit));\n      }\n    });\n  };\n\n  self.add = function (iri, graph, callback) {\n    store.clear(iri, function () {\n      store.insert(graph, iri, function (insertSuccess) {\n        if (insertSuccess) {\n          callback(graph);\n        } else {\n          callback(null);\n        }\n      });\n    });\n  };\n\n  self.merge = function (iri, graph, callback) {\n    store.insert(graph, iri, function (success) {\n      if (success) {\n        callback(graph);\n      } else {\n        callback(null);\n      }\n    });\n  };\n\n  self.remove = function (iri, graph, callback) {\n    self.graph(iri, function (oldGraph) {\n      var newGraph = rdf.Graph.difference(oldGraph, graph);\n\n      self.add(iri, newGraph, function (addedGraph) {\n        callback(addedGraph != null);\n      });\n    });\n  };\n\n  self.removeMatches = function (iri, subject, predicate, object, callback) {\n    self.graph(iri, function (oldGraph) {\n      var newGraph = oldGraph.removeMatches(subject, predicate, object);\n\n      self.add(iri, newGraph, function (addedGraph) {\n        callback(addedGraph != null);\n      });\n    });\n  };\n\n  self.delete = function (iri, callback) {\n    store.clear(iri, function (success) {\n      if (success) {\n        callback(true);\n      } else {\n        callback(null);\n      }\n    });\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.RdfstoreStore = RdfstoreStore;\n};\n","/**\n * @fileoverview\n *  RDF/XML PARSER\n *\n * Version 0.1\n *  Parser believed to be in full positive RDF/XML parsing compliance\n *  with the possible exception of handling deprecated RDF attributes\n *  appropriately. Parser is believed to comply fully with other W3C\n *  and industry standards where appropriate (DOM, ECMAScript, &c.)\n *\n *  Author: David Sheets <dsheets@mit.edu>\n *\n * W3C� SOFTWARE NOTICE AND LICENSE\n * http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231\n * This work (and included software, documentation such as READMEs, or\n * other related items) is being provided by the copyright holders under\n * the following license. By obtaining, using and/or copying this work,\n * you (the licensee) agree that you have read, understood, and will\n * comply with the following terms and conditions.\n * \n * Permission to copy, modify, and distribute this software and its\n * documentation, with or without modification, for any purpose and\n * without fee or royalty is hereby granted, provided that you include\n * the following on ALL copies of the software and documentation or\n * portions thereof, including modifications:\n * \n * 1. The full text of this NOTICE in a location viewable to users of\n * the redistributed or derivative work.\n * 2. Any pre-existing intellectual property disclaimers, notices, or terms and\n * conditions. If none exist, the W3C Software Short Notice should be\n * included (hypertext is preferred, text is permitted) within the body\n * of any redistributed or derivative code.\n * 3. Notice of any changes or modifications to the files, including the\n * date changes were made. (We recommend you provide URIs to the location\n * from which the code is derived.)\n * \n * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED \"AS IS,\" AND COPYRIGHT\n * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS\n * FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR\n * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\n * TRADEMARKS OR OTHER RIGHTS.\n * \n * COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL\n * OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR\n * DOCUMENTATION.\n * \n * The name and trademarks of copyright holders may NOT be used in\n * advertising or publicity pertaining to the software without specific,\n * written prior permission. Title to copyright in this software and any\n * associated documentation will at all times remain with copyright\n * holders.\n */\n/**\n * @class Class defining an RDFParser resource object tied to an RDFStore\n *  \n * @author David Sheets <dsheets@mit.edu>\n * @version 0.1\n * \n * @constructor\n * @param {RDFStore} store An RDFStore object\n */\n\nvar RdfLibParser = function(store){\n    var RDFParser = {};\n    \n    /** Standard namespaces that we know how to handle @final\n     *  @member RDFParser\n     */\n    RDFParser.ns = {'RDF': \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\", 'RDFS': \"http://www.w3.org/2000/01/rdf-schema#\"};\n    \n    /** DOM Level 2 node type magic numbers @final\n     *  @member RDFParser\n     */\n    RDFParser.nodeType = {'ELEMENT': 1, 'ATTRIBUTE': 2, 'TEXT': 3,\n\t\t\t     'CDATA_SECTION': 4, 'ENTITY_REFERENCE': 5,\n\t\t\t     'ENTITY': 6, 'PROCESSING_INSTRUCTION': 7,\n\t\t\t     'COMMENT': 8, 'DOCUMENT': 9, 'DOCUMENT_TYPE': 10,\n\t\t\t     'DOCUMENT_FRAGMENT': 11, 'NOTATION': 12};\n\n    /**\n     * Frame class for namespace and base URI lookups\n     * Base lookups will always resolve because the parser knows\n     * the default base.\n     *\n     * @private\n     */\n    \n    this.frameFactory = function(parser, parent, element){\n        return {'NODE': 1, 'ARC': 2, 'parent': parent, 'parser': parser, 'store': parser.store, 'element': element, \n           'lastChild': 0, 'base': null, 'lang': null, 'node': null, 'nodeType': null, 'listIndex': 1, 'rdfid': null, 'datatype': null, 'collection': false, /** Terminate the frame and notify the store that we're done */\n           'terminateFrame': function(){\n            if (this.collection){\n                \n                this.node.close();\n            }\n        }\n        , /** Add a symbol of a certain type to the this frame */'addSymbol': function(type, uri){\n            uri = uriJoin(uri, this.base);\n            this.node = this.store.sym(uri);\n            \n            this.nodeType = type;\n        }\n        , /** Load any constructed triples into the store */'loadTriple': function(){\n            if (this.parent.parent.collection){\n                this.parent.parent.node.append(this.node);\n            }\n            else {\n                this.store.add(this.parent.parent.node, this.parent.node, this.node, this.parser.why);\n            }\n            if (this.parent.rdfid != null){\n                  // reify\n                var triple = this.store.sym(uriJoin(\"#\" + this.parent.rdfid, this.base));\n                this.store.add(triple, this.store.sym(RDFParser.ns.RDF + \"type\"), this.store.sym(RDFParser.ns.RDF + \"Statement\"), this.parser.why);\n                this.store.add(triple, this.store.sym(RDFParser.ns.RDF + \"subject\"), this.parent.parent.node, this.parser.why);\n                this.store.add(triple, this.store.sym(RDFParser.ns.RDF + \"predicate\"), this.parent.node, this.parser.why);\n                \n                this.store.add(triple, this.store.sym(RDFParser.ns.RDF + \"object\"), this.node, this.parser.why);\n            }\n        }\n        , /** Check if it's OK to load a triple */'isTripleToLoad': function(){\n            \n            return (this.parent != null && this.parent.parent != null && this.nodeType === this.NODE && this.parent.nodeType === \n               this.ARC && this.parent.parent.nodeType === this.NODE);\n        }\n        , /** Add a symbolic node to this frame */'addNode': function(uri){\n            this.addSymbol(this.NODE, uri);\n            if (this.isTripleToLoad()){\n                \n                this.loadTriple();\n            }\n        }\n        , /** Add a collection node to this frame */'addCollection': function(){\n            this.nodeType = this.NODE;\n            this.node = this.store.collection();\n            this.collection = true;\n            if (this.isTripleToLoad()){\n                \n                this.loadTriple();\n            }\n        }\n        , /** Add a collection arc to this frame */'addCollectionArc': function(){\n            \n            this.nodeType = this.ARC;\n        }\n        , /** Add a bnode to this frame */'addBNode': function(id){\n            if (id != null){\n                if (this.parser.bnodes[id] != null){\n                    this.node = this.parser.bnodes[id];\n                }\n                else {\n                    this.node = this.parser.bnodes[id] = this.store.bnode();\n                }\n            }\n            else {\n                this.node = this.store.bnode();\n            }\n            this.nodeType = this.NODE;\n            if (this.isTripleToLoad()){\n                \n                this.loadTriple();\n            }\n        }\n        , /** Add an arc or property to this frame */'addArc': function(uri){\n            if (uri === RDFParser.ns.RDF + \"li\"){\n                uri = RDFParser.ns.RDF + \"_\" + this.parent.listIndex;\n                this.parent.listIndex++;\n            }\n            \n            this.addSymbol(this.ARC, uri);\n        }\n        , /** Add a literal to this frame */'addLiteral': function(value){\n            if (this.parent.datatype){\n                this.node = this.store.literal(value, \"\", this.store.sym(this.parent.datatype));\n            }\n            else {\n                this.node = this.store.literal(value, this.lang);\n            }\n            this.nodeType = this.NODE;\n            if (this.isTripleToLoad()){\n                this.loadTriple();\n            }\n        }\n        };\n    };\n    \n    //from the OpenLayers source .. needed to get around IE problems.\n    this.getAttributeNodeNS = function(node, uri, name){\n        var attributeNode = null;\n        if (node.getAttributeNodeNS){\n            attributeNode = node.getAttributeNodeNS(uri, name);\n        }\n        else {\n            var attributes = node.attributes;\n            var potentialNode, fullName;\n            for (var i = 0;i < attributes.length; ++ i){\n                potentialNode = attributes[i];\n                if (potentialNode.namespaceURI === uri){\n                    fullName = (potentialNode.prefix) ? (potentialNode.prefix +\":\" + name): name;\n                    if (fullName === potentialNode.nodeName){\n                        attributeNode = potentialNode;\n                        break;\n                    }\n                }\n            }\n        }\n        return attributeNode;\n    };\n    \n    \n    /** Our triple store reference @private */\n    \n    this.store = store;/** Our identified blank nodes @private */\n    this.bnodes = {};/** A context for context-aware stores @private */\n    this.why = null;/** Reification flag */\n    this.reify = false;\n    \n    /**\n     * Build our initial scope frame and parse the DOM into triples\n     * @param {DOMTree} document The DOM to parse\n     * @param {String} base The base URL to use \n     * @param {Object} why The context to which this resource belongs\n     */\n    \n    this.parse = function(document, base, why){\n        var children = document.childNodes;// clean up for the next run\n        this.cleanParser();// figure out the root element\n        var root;\n        if (document.nodeType === RDFParser.nodeType.DOCUMENT){\n            for (var c = 0;c < children.length;c++){\n                if (children[c].nodeType === RDFParser.nodeType.ELEMENT){\n                    root = children[c];\n                    break;\n                }\n            }\n        }\n        else if (document.nodeType === RDFParser.nodeType.ELEMENT){\n            root = document;\n        }\n        else {\n            throw new Error(\"RDFParser: can't find root in \" + base +\". Halting. \");\n            // return false;\n        }\n        this.why = why;// our topmost frame\n        var f = this.frameFactory(this);\n        this.base = base;\n        f.base = base;\n        f.lang = '';\n        this.parseDOM(this.buildFrame(f, root));\n        return true;\n    };\n    \n    this.parseDOM = function(frame){\n         // a DOM utility function used in parsing\n        var rdfid;\n        var elementURI = function(el){\n            var result = \"\";\n            if (el.namespaceURI == null){\n                throw new Error(\"RDF/XML syntax error: No namespace for \" + el.localName + \" in \" + this.base);\n            }\n            if (el.namespaceURI){\n                result = result + el.namespaceURI;\n            }\n            if (el.localName){\n                result = result + el.localName;\n            }\n            else if (el.nodeName){\n                if (el.nodeName.indexOf(\":\") >= 0)result = result + el.nodeName.split(\":\")[1];\n                else result = result + el.nodeName;\n            }\n            return result;\n        }.bind(this);\n        var dig = true;// if we'll dig down in the tree on the next iter\n        while (frame.parent){\n            var dom = frame.element;\n            var attrs = dom.attributes;\n            if (dom.nodeType === RDFParser.nodeType.TEXT || dom.nodeType === RDFParser.nodeType.CDATA_SECTION){\n                //we have a literal\n                if(frame.parent.nodeType == frame.NODE) {\n                    //must have had attributes, store as rdf:value\n                    frame.addArc(RDFParser.ns.RDF + 'value');\n                    frame = this.buildFrame(frame);\n                }\n                frame.addLiteral(dom.nodeValue);\n            }\n            else if (elementURI(dom)!== RDFParser.ns.RDF + \"RDF\"){\n                  // not root\n                if (frame.parent && frame.parent.collection){\n                     // we're a collection element\n                    frame.addCollectionArc();\n                    frame = this.buildFrame(frame, frame.element);\n                    frame.parent.element = null;\n                }\n                if ( ! frame.parent || ! frame.parent.nodeType || frame.parent.nodeType === frame.ARC){\n                     // we need a node\n                    var about = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"about\");\n                    rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"ID\");\n                    if (about && rdfid){\n                        throw new Error(\"RDFParser: \" + dom.nodeName + \" has both rdf:id and rdf:about.\" + \n                           \" Halting. Only one of these\" + \" properties may be specified on a\" + \" node.\");\n                    }\n                    if (!about && rdfid){\n                        frame.addNode(\"#\" + rdfid.nodeValue);\n                        dom.removeAttributeNode(rdfid);\n                    }\n                    else if (about == null && rdfid == null){\n                        var bnid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"nodeID\");\n                        if (bnid){\n                            frame.addBNode(bnid.nodeValue);\n                            dom.removeAttributeNode(bnid);\n                        }\n                        else {\n                            frame.addBNode();\n                        }\n                    }\n                    else {\n                        frame.addNode(about.nodeValue);\n                        dom.removeAttributeNode(about);\n                    }\n                    // Typed nodes\n                    var rdftype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"type\");\n                    if (RDFParser.ns.RDF + \"Description\" !== elementURI(dom)){\n                        rdftype = {'nodeValue': elementURI(dom)};\n                    }\n                    if (rdftype != null){\n                        this.store.add(frame.node, this.store.sym(RDFParser.ns.RDF + \"type\"), this.store.sym(uriJoin(rdftype.nodeValue, \n                           frame.base)), this.why);\n                        if (rdftype.nodeName){\n                            dom.removeAttributeNode(rdftype);\n                        }\n                    }\n                    // Property Attributes\n                    for (var x = attrs.length - 1;x >= 0;x--){\n                        this.store.add(frame.node, this.store.sym(elementURI(attrs[x])), this.store.literal(attrs[x].nodeValue, \n                           frame.lang), this.why);\n                    }\n                }\n                else {\n                      // we should add an arc (or implicit bnode+arc)\n                    frame.addArc(elementURI(dom));// save the arc's rdf:ID if it has one\n                    if (this.reify){\n                        rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"ID\");\n                        if (rdfid){\n                            frame.rdfid = rdfid.nodeValue;\n                            dom.removeAttributeNode(rdfid);\n                        }\n                    }\n                    var parsetype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"parseType\");\n                    var datatype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"datatype\");\n                    if (datatype){\n                        frame.datatype = datatype.nodeValue;\n                        dom.removeAttributeNode(datatype);\n                    }\n                    if (parsetype){\n                        var nv = parsetype.nodeValue;\n                        if (nv === \"Literal\"){\n                            frame.datatype = RDFParser.ns.RDF + \"XMLLiteral\";// (this.buildFrame(frame)).addLiteral(dom)\n                               // should work but doesn't\n                            frame = this.buildFrame(frame);\n                            frame.addLiteral(dom);\n                            dig = false;\n                        }\n                        else if (nv === \"Resource\"){\n                            frame = this.buildFrame(frame, frame.element);\n                            frame.parent.element = null;\n                            frame.addBNode();\n                        }\n                        else if (nv === \"Collection\"){\n                            frame = this.buildFrame(frame, frame.element);\n                            frame.parent.element = null;\n                            frame.addCollection();\n                        }\n                        dom.removeAttributeNode(parsetype);\n                    }\n                    if (attrs.length !== 0){\n                        var resource = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"resource\");\n                        var bnid2 = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, \"nodeID\");\n                        frame = this.buildFrame(frame);\n                        if (resource){\n                            frame.addNode(resource.nodeValue);\n                            dom.removeAttributeNode(resource);\n                        }\n                        else {\n                            if (bnid2){\n                                frame.addBNode(bnid2.nodeValue);\n                                dom.removeAttributeNode(bnid2);\n                            }\n                            else {\n                                frame.addBNode();\n                            }\n                        }\n                        for (var x1 = attrs.length - 1; x1 >= 0; x1--){\n                            var f = this.buildFrame(frame);\n                            f.addArc(elementURI(attrs[x1]));\n                            if (elementURI(attrs[x1])=== RDFParser.ns.RDF + \"type\"){\n                                (this.buildFrame(f)).addNode(attrs[x1].nodeValue);\n                            }\n                            else {\n                                (this.buildFrame(f)).addLiteral(attrs[x1].nodeValue);\n                            }\n                        }\n                    }\n                    else if (dom.childNodes.length === 0){\n                        (this.buildFrame(frame)).addLiteral(\"\");\n                    }\n                }\n            }// rdf:RDF\n               // dig dug\n            dom = frame.element;\n            while (frame.parent){\n                var pframe = frame;\n                while (dom == null){\n                    frame = frame.parent;\n                    dom = frame.element;\n                }\n                var candidate = dom.childNodes && dom.childNodes[frame.lastChild];\n                if (!candidate || ! dig){\n                    frame.terminateFrame();\n                    if ( ! (frame = frame.parent)){\n                        break;\n                    }// done\n                    dom = frame.element;\n                    dig = true;\n                }\n                else if ((candidate.nodeType !== RDFParser.nodeType.ELEMENT &&\n                        candidate.nodeType !== RDFParser.nodeType.TEXT && \n                        candidate.nodeType !== RDFParser.nodeType.CDATA_SECTION) ||\n                    ((candidate.nodeType === RDFParser.nodeType.TEXT ||\n                        candidate.nodeType === RDFParser.nodeType.CDATA_SECTION) && \n                        dom.childNodes.length !== 1)){\n                    frame.lastChild++;\n                }\n                else {\n                      // not a leaf\n                    frame.lastChild++;\n                    frame = this.buildFrame(pframe, dom.childNodes[frame.lastChild - 1]);\n                    break;\n                }\n            }\n        }// while\n    };\n    \n    /**\n     * Cleans out state from a previous parse run\n     * @private\n     */\n    this.cleanParser = function(){\n        this.bnodes = {};\n        this.why = null;\n    };\n    \n    /**\n     * Builds scope frame \n     * @private\n     */\n    this.buildFrame = function(parent, element){\n        var frame = this.frameFactory(this, parent, element);\n        if (parent){\n            frame.base = parent.base;\n            frame.lang = parent.lang;\n        }\n        if (!element || element.nodeType === RDFParser.nodeType.TEXT ||\n                element.nodeType === RDFParser.nodeType.CDATA_SECTION){\n            return frame;\n        }\n        var attrs = element.attributes;\n        var base = element.getAttributeNode(\"xml:base\");\n        if (base != null){\n            frame.base = base.nodeValue;\n            element.removeAttribute(\"xml:base\");\n        }\n        var lang = element.getAttributeNode(\"xml:lang\");\n        if (lang != null){\n            frame.lang = lang.nodeValue;\n            element.removeAttribute(\"xml:lang\");\n        }\n        // remove all extraneous xml and xmlns attributes\n        for (var x = attrs.length - 1;x >= 0;x--){\n            if (attrs[x].nodeName.substr(0, 3) === \"xml\"){\n                if (attrs[x].name.slice(0, 6) === 'xmlns:'){\n                    var uri = attrs[x].nodeValue;// alert('base for namespac attr:'+this.base);\n                    if (this.base) uri = uriJoin(uri, this.base);\n                    this.store.setPrefixForURI(attrs[x].name.slice(6), uri);\n                }\n                //\t\talert('rdfparser: xml atribute: '+attrs[x].name) //@@\n                element.removeAttributeNode(attrs[x]);\n            }\n        }\n        return frame;\n    };\n};\n\n\n// taken from rdflib/uri.coffee\nvar uriJoin = function(given, base) {\n    var baseColon, baseHash, baseScheme, baseSingle, colon, lastSlash, path;\n    baseHash = base.indexOf('#');\n    if (baseHash > 0) {\n      base = base.slice(0, baseHash);\n    }\n    if (given.length === 0) {\n      return base;\n    }\n    if (given.indexOf('#') === 0) {\n      return base + given;\n    }\n    colon = given.indexOf(':');\n    if (colon >= 0) {\n      return given;\n    }\n    baseColon = base.indexOf(':');\n    if (base.length === 0) {\n      return given;\n    }\n    if (baseColon < 0) {\n      alert(\"Invalid base: \" + base + \" in join with given: \" + given);\n      return given;\n    }\n    baseScheme = base.slice(0, +baseColon + 1 || 9e9);\n    if (given.indexOf('//') === 0) {\n      return baseScheme + given;\n    }\n    if (base.indexOf('//', baseColon) === baseColon + 1) {\n      baseSingle = base.indexOf('/', baseColon + 3);\n      if (baseSingle < 0) {\n        if (base.length - baseColon - 3 > 0) {\n          return base + '/' + given;\n        } else {\n          return baseScheme + given;\n        }\n      }\n    } else {\n      baseSingle = base.indexOf('/', baseColon + 1);\n      if (baseSingle < 0) {\n        if (base.length - baseColon - 1 > 0) {\n          return base + '/' + given;\n        } else {\n          return baseScheme + given;\n        }\n      }\n    }\n    if (given.indexOf('/') === 0) {\n      return base.slice(0, baseSingle) + given;\n    }\n    path = base.slice(baseSingle);\n    lastSlash = path.lastIndexOf('/');\n    if (lastSlash < 0) {\n      return baseScheme + given;\n    }\n    if (lastSlash >= 0 && lastSlash < path.length - 1) {\n      path = path.slice(0, +lastSlash + 1 || 9e9);\n    }\n    path += given;\n    while (path.match(/[^\\/]*\\/\\.\\.\\//)) {\n      path = path.replace(/[^\\/]*\\/\\.\\.\\//, '');\n    }\n    path = path.replace(/\\.\\//g, '');\n    path = path.replace(/\\/\\.$/, '/');\n    return base.slice(0, baseSingle) + path;\n};\n\n\n// RDF-Interface API\nvar RdfXmlParser = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  this.process = function (toparse, callback, base, filter, done) {\n    if (typeof toparse === 'string') {\n      toparse = rdf.parseXml(toparse);\n    }\n\n    if (base == null) {\n      base = '';\n    }\n\n    if (filter == null) {\n      filter = function() { return true; };\n    }\n\n    // convert an array of DOM nodes to a XML string\n    var domNodesToString = function (nodes) {\n      var xmlString = '';\n\n      for(var i=0; i<nodes.length; i++) {\n        xmlString += nodes[i].toString();\n      }\n\n      return xmlString;\n    }\n\n    // rdflib store interface\n    var store = {};\n\n    store.add = function (s, p, o ) {\n      var triple = rdf.createTriple(s, p, o);\n\n      if (filter(triple)) {\n        callback(triple);\n      }\n    };\n\n    store.bnode = function () { return rdf.createBlankNode(); };\n\n    store.literal = function (value, language, type) {\n      // parse type literal\n      if (type != null && type.toString() === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral') {\n        value = domNodesToString(value.childNodes);\n      }\n\n      return rdf.createLiteral(value, language, type);\n    };\n\n    store.setPrefixForURI = function () {};\n\n    store.sym = function (iri) { return rdf.createNamedNode(iri); };\n\n    new RdfLibParser(store).parse(toparse, base);\n\n    done(true);\n\n    return true;\n  };\n\n  this.parse = function (toparse, callback, base, filter, graph) {\n    if (graph == null) {\n      graph = rdf.createGraph();\n    }\n\n    return this.process(\n      toparse,\n      function(triple) { graph.add(triple); },\n      base,\n      filter,\n      function(success) { callback(success ? graph : null); });\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.RdfXmlParser = RdfXmlParser.bind(null, rdf);\n\n  var parser = new RdfXmlParser(rdf);\n  rdf.parseRdfXml = parser.parse.bind(parser);\n};\n","/* global rdf:true */\n'use strict';\n\n\n//TODO: handle blank nodes\nvar SparqlStore = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  var self = this;\n\n  self.endpointUrl = options.endpointUrl;\n  self.updateUrl = 'updateUrl' in options ? options.updateUrl : self.endpointUrl;\n  self.mimeType = 'mimeType' in options ? options.mimeType : 'text/turtle';\n  self.serialize = 'serialize' in options ? options.serialize : rdf.serializeNTriples;\n  self.parse = 'parse' in options ? options.parse : rdf.parseTurtle;\n  self.request = 'request' in options ? options.request : rdf.defaultRequest;\n\n  var httpSuccess = function (statusCode) {\n    return (statusCode >= 200 && statusCode < 300);\n  };\n\n  var buildMatch = function (subject, predicate, object) {\n    var match = '';\n\n    var nodeToNT = function (node) {\n      if (typeof node == 'string') {\n        if (node.substr(0, 2) == '_:') {\n          return node;\n        } else {\n          return '<' + node + '>';\n        }\n      }\n\n      return node.toNT();\n    };\n\n    match += subject != null ? nodeToNT(subject) : '?s';\n    match += predicate != null ? ' ' + nodeToNT(predicate) : ' ?p';\n    match += object != null ? ' ' + nodeToNT(object) : ' ?o';\n\n    return match;\n  };\n\n  self.graph = function (graphIri, callback) {\n    self.match(graphIri, null, null, null, callback);\n  };\n\n  self.match = function (graphIri, subject, predicate, object, callback, limit) {\n    var\n      filter = buildMatch(subject, predicate, object),\n      query = 'CONSTRUCT { ' + filter + ' } { GRAPH <' + graphIri + '> {' + filter + ' }}',\n      url = self.endpointUrl + '?query=' + encodeURIComponent(query);\n\n    self.request('GET', url, { 'Accept': self.mimeType }, null,\n      function (statusCode, headers, resContent, error) {\n        // error during request\n        if (error != null) {\n          return callback(null, 'request error: ' + error);\n        }\n\n        // http status code != success\n        if (!httpSuccess(statusCode)) {\n          return callback(null, 'status code error: ' + statusCode);\n        }\n\n        // TODO: use limit parameters\n        self.parse(resContent, callback);\n      }\n    );\n  };\n\n  var updateRequest = function (content, callbackValue, callback) {\n    self.request('POST', self.updateUrl, { 'Content-Type': 'application/sparql-update' }, content,\n      function (statusCode, headers, resContent, error) {\n        // error during request\n        if (error != null) {\n          return callback(null, 'request error: ' + error);\n        }\n\n        // http status code != success\n        if (!httpSuccess(statusCode)) {\n          return callback(null, 'status code error: ' + statusCode);\n        }\n\n        callback(callbackValue);\n      }\n    );\n  };\n\n  self.add = function (graphIri, graph, callback) {\n    var content =\n      'DROP SILENT GRAPH <' + graphIri + '>;' +\n      'INSERT DATA { GRAPH <' + graphIri + '> { ' + self.serialize(graph) + ' } }';\n\n    updateRequest(content, graph, callback);\n  };\n\n  self.merge = function (graphIri, graph, callback) {\n    var content =\n      'INSERT DATA { GRAPH <' + graphIri + '> { ' + self.serialize(graph) + ' } }';\n\n    updateRequest(content, graph, callback);\n  };\n\n  self.remove = function (graphIri, graph, callback) {\n    var content =\n      'DELETE DATA FROM <' + graphIri + '> { ' + self.serialize(graph) + ' }';\n\n    updateRequest(content, true, callback);\n  };\n\n  self.removeMatches = function (graphIri, subject, predicate, object, callback) {\n    var content =\n      'DELETE FROM GRAPH <' + graphIri + '> WHERE { ' +\n      buildMatch(subject, predicate, object) + ' }';\n\n    updateRequest(content, true, callback);\n  };\n\n  self.delete = function (graphIri, callback) {\n    var content = 'CLEAR  GRAPH <' + graphIri + '>';\n\n    updateRequest(content, true, callback);\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.SparqlStore = SparqlStore.bind(null, rdf);\n};\n","/* global rdf:true, N3:false */\n'use strict';\n\n\nvar\n  N3 = require('n3');\n\n\nvar TurtleParser = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  if (!('importPrefixMap' in options)) {\n    options.importPrefixMap = true;\n  }\n\n  this.process = function (data, callback, base, filter, done) {\n    var config = {};\n\n    if (base != null) {\n      config.documentIRI = base;\n    }\n\n    if (filter == null) {\n      filter = function () { return true; };\n    }\n\n    if (done == null) {\n      done = function () {};\n    }\n\n    var\n      parser = N3.Parser(config),\n      blankNodes = {};\n\n    parser.parse(data, function (error, n3Triple, n3Prefixes) {\n      if (error != null) {\n        return done(false, error);\n      }\n\n      if (options.importPrefixMap && n3Prefixes != null) {\n        Object.keys(n3Prefixes).forEach(function (prefix) {\n          rdf.prefixes[prefix] = n3Prefixes[prefix];\n        });\n      }\n\n      if (n3Triple == null) {\n        return done(true);\n      }\n\n      var toRdfNode = function (n3Node) {\n        if (N3.Util.isIRI(n3Node)) {\n          return rdf.createNamedNode(n3Node);\n        } else if (N3.Util.isBlank(n3Node)) {\n          if (n3Node in blankNodes) {\n            return blankNodes[n3Node];\n          } else {\n            return blankNodes[n3Node] = rdf.createBlankNode();\n          }\n        } else {\n          var\n            lang = N3.Util.getLiteralLanguage(n3Node),\n            type = N3.Util.getLiteralType(n3Node);\n\n          if (lang === '') {\n            lang = null;\n          }\n\n          if (type === 'http://www.w3.org/2001/XMLSchema#string') {\n            type = null;\n          }\n\n          return rdf.createLiteral(\n            N3.Util.getLiteralValue(n3Node),\n            lang,\n            type != null ? rdf.createNamedNode(type) : null);\n        }\n      };\n\n      var pushTriple = function (n3Triple) {\n        var triple = rdf.createTriple(\n          toRdfNode(n3Triple.subject),\n          toRdfNode(n3Triple.predicate),\n          toRdfNode(n3Triple.object));\n\n        if (filter(triple)) {\n          callback(triple);\n        }\n      };\n\n      pushTriple(n3Triple);\n    });\n\n    return true;\n  };\n\n  this.parse = function (data, callback, base, filter, graph) {\n    if (graph == null) {\n      graph = rdf.createGraph();\n    }\n\n    return this.process(\n      data,\n      function (triple) { graph.add(triple); },\n      base,\n      filter,\n      function (success, error) { callback(success ? graph : null, error); });\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.TurtleParser = TurtleParser.bind(null, rdf);\n  rdf.NTriplesParser = TurtleParser.bind(null, rdf);\n\n  var parser = new TurtleParser(rdf);\n  rdf.parseTurtle = parser.parse.bind(parser);\n  rdf.parseNTriples = parser.parse.bind(parser);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar\n  N3 = require('n3');\n\n\nvar TurtleSerializer = function (rdf, options) {\n  if (options == null) {\n    options = {};\n  }\n\n  if (!('usePrefixMap' in options)) {\n    options.usePrefixMap = true;\n  }\n\n  this.serialize = function (graph, callback) {\n    var\n      writerOptions = {},\n      writer;\n\n    if (options.usePrefixMap) {\n      writerOptions.prefixes = {};\n\n      Object.keys(rdf.prefixes).forEach(function (prefix) {\n        if (typeof rdf.prefixes[prefix] !== 'string') {\n          return;\n        }\n\n        writerOptions.prefixes[prefix] = rdf.prefixes[prefix];\n      });\n    }\n\n    writer = N3.Writer(writerOptions);\n\n    if (callback == null) {\n      callback = function () {};\n    }\n\n    var createN3Node = function (node) {\n      if (node.interfaceName.toString() === 'NamedNode') {\n        return node.nominalValue;\n      } else if (node.interfaceName.toString() === 'BlankNode') {\n        return '_:' + node.nominalValue;\n      } else {\n        if (node.datatype != null) {\n          return '\"' + node.nominalValue + '\"^^' + node.datatype.nominalValue;\n        } else if (node.language != null) {\n          return '\"' + node.nominalValue + '\"@' + node.language;\n        } else {\n          return '\"' + node.nominalValue + '\"';\n        }\n      }\n    };\n\n    graph.forEach(function (triple) {\n      writer.addTriple(\n        createN3Node(triple.subject),\n        createN3Node(triple.predicate),\n        createN3Node(triple.object));\n    });\n\n    writer.end(function (error, result) {\n      if (error != null) {\n        callback(null, error);\n      } else {\n        callback(result);\n      }\n    });\n\n    return true;\n  };\n};\n\n\nmodule.exports = function (rdf) {\n  rdf.TurtleSerializer = TurtleSerializer.bind(null, rdf);\n\n  var serializer = new TurtleSerializer(rdf);\n  rdf.serializeTurtle = serializer.serialize.bind(serializer);\n};\n","/* global rdf:true */\n'use strict';\n\n\nvar URIResolver = function() {};\n\nURIResolver.SCHEME = /^[A-Za-z][A-Za-z0-9\\+\\-\\.]*\\:/;\n\nURIResolver.prototype.parseURI = function(uri) {\n  var match = URIResolver.SCHEME.exec(uri);\n  if (!match) {\n    throw \"Bad URI value, no scheme: \"+uri;\n  }\n  var parsed = { spec: uri };\n  parsed.scheme = match[0].substring(0,match[0].length-1);\n  parsed.schemeSpecificPart = parsed.spec.substring(match[0].length);\n  if (parsed.schemeSpecificPart.charAt(0)=='/' && parsed.schemeSpecificPart.charAt(1)=='/') {\n    this.parseGeneric(parsed);\n  } else {\n    parsed.isGeneric = false;\n  }\n  parsed.normalize = function() {\n    if (!this.isGeneric) {\n      return;\n    }\n    if (this.segments.length==0) {\n      return;\n    }\n    // edge case of ending in \"/.\"\n    if (this.path.length>1 && this.path.substring(this.path.length-2)==\"/.\") {\n      this.path = this.path.substring(0,this.path.length-1);\n      this.segments.splice(this.segments.length-1,1);\n      this.schemeSpecificPart = \"//\"+this.authority+this.path;\n      if (typeof this.query != \"undefined\") {\n        this.schemeSpecificPart += \"?\" + this.query;\n      }\n      if (typeof this.fragment != \"undefined\") {\n        this.schemeSpecificPart += \"#\" + this.fragment;\n      }\n      this.spec = this.scheme+\":\"+this.schemeSpecificPart;\n      return;\n    }\n    var end = this.path.charAt(this.path.length-1);\n    if (end!=\"/\") {\n      end = \"\";\n    }\n    for (var i=0; i<this.segments.length; i++) {\n      if (i>0 && this.segments[i]==\"..\") {\n        this.segments.splice(i-1,2);\n        i -= 2;\n      }\n      if (this.segments[i]==\".\") {\n        this.segments.splice(i,1);\n        i--;\n      }\n    }\n    this.path = this.segments.length==0 ? \"/\" : \"/\"+this.segments.join(\"/\")+end;\n    this.schemeSpecificPart = \"//\"+this.authority+this.path;\n    if (typeof this.query != \"undefined\") {\n      this.schemeSpecificPart += \"?\" + this.query;\n    }\n    if (typeof this.fragment != \"undefined\") {\n      this.schemeSpecificPart += \"#\" + this.fragment;\n    }\n    this.spec = this.scheme+\":\"+this.schemeSpecificPart;\n  }\n  parsed.resolve = function(href) {\n    if (!href) {\n      return this.spec;\n    }\n    if (href.charAt(0)=='#') {\n      var lastHash = this.spec.lastIndexOf('#');\n      return lastHash<0 ? this.spec+href : this.spec.substring(0,lastHash)+href;\n    }\n    if (!this.isGeneric) {\n      throw \"Cannot resolve uri against non-generic URI: \"+this.spec;\n    }\n    var colon = href.indexOf(':');\n    if (href.charAt(0)=='/') {\n      return this.scheme+\"://\"+this.authority+href;\n    } else if (href.charAt(0)=='.' && href.charAt(1)=='/') {\n      if (this.path.charAt(this.path.length-1)=='/') {\n        return this.scheme+\"://\"+this.authority+this.path+href.substring(2);\n      } else {\n        var last = this.path.lastIndexOf('/');\n        return this.scheme+\"://\"+this.authority+this.path.substring(0,last)+href.substring(1);\n      }\n    } else if (URIResolver.SCHEME.test(href)) {\n      return href;\n    } else if (href.charAt(0)==\"?\") {\n      return this.scheme+\"://\"+this.authority+this.path+href;\n    } else {\n      if (this.path.charAt(this.path.length-1)=='/') {\n        return this.scheme+\"://\"+this.authority+this.path+href;\n      } else {\n        var last = this.path.lastIndexOf('/');\n        return this.scheme+\"://\"+this.authority+this.path.substring(0,last+1)+href;\n      }\n    }\n  };\n  parsed.relativeTo = function(otherURI) {\n    if (otherURI.scheme!=this.scheme) {\n      return this.spec;\n    }\n    if (!this.isGeneric) {\n      throw \"A non generic URI cannot be made relative: \"+this.spec;\n    }\n    if (!otherURI.isGeneric) {\n      throw \"Cannot make a relative URI against a non-generic URI: \"+otherURI.spec;\n    }\n    if (otherURI.authority!=this.authority) {\n      return this.spec;\n    }\n    var i=0;\n    for (; i<this.segments.length && i<otherURI.segments.length; i++) {\n      if (this.segments[i]!=otherURI.segments[i]) {\n        //alert(this.path+\" different from \"+otherURI.path+\" at '\"+this.segments[i]+\"' vs '\"+otherURI.segments[i]+\"'\");\n        var relative = \"\";\n        for (var j=i; j<otherURI.segments.length; j++) {\n          relative += \"../\";\n        }\n        for (var j=i; j<this.segments.length; j++) {\n          relative += this.segments[j];\n          if ((j+1)<this.segments.length) {\n            relative += \"/\";\n          }\n        }\n        if (this.path.charAt(this.path.length-1)=='/') {\n          relative += \"/\";\n        }\n        return relative;\n      }\n    }\n    if (this.segments.length==otherURI.segments.length) {\n      return this.hash ? this.hash : (this.query ? this.query : \"\");\n    } else if (i<this.segments.length) {\n      var relative = \"\";\n      for (var j=i; j<this.segments.length; j++) {\n        relative += this.segments[j];\n        if ((j+1)<this.segments.length) {\n          relative += \"/\";\n        }\n      }\n      if (this.path.charAt(this.path.length-1)=='/') {\n        relative += \"/\";\n      }\n      return relative;\n    } else {\n      throw \"Cannot calculate a relative URI for \"+this.spec+\" against \"+otherURI.spec;\n    }\n  };\n  return parsed;\n}\n\nURIResolver.prototype.parseGeneric = function(parsed) {\n  if (parsed.schemeSpecificPart.charAt(0)!='/' || parsed.schemeSpecificPart.charAt(1)!='/') {\n    throw \"Generic URI values should start with '//':\"+parsed.spec;\n  }\n\n  var work = parsed.schemeSpecificPart.substring(2);\n  var pathStart = work.indexOf(\"/\");\n  parsed.authority = pathStart<0 ? work : work.substring(0,pathStart);\n  parsed.path = pathStart<0 ? \"\" : work.substring(pathStart);\n  var hash = parsed.path.indexOf('#');\n  if (hash>=0) {\n    parsed.fragment = parsed.path.substring(hash+1);\n    parsed.path = parsed.path.substring(0,hash);\n  }\n  var questionMark = parsed.path.indexOf('?');\n  if (questionMark>=0) {\n    parsed.query = parsed.path.substring(questionMark+1);\n    parsed.path = parsed.path.substring(0,questionMark);\n  }\n  if (parsed.path==\"/\" || parsed.path==\"\") {\n    parsed.segments = [];\n  } else {\n    parsed.segments = parsed.path.split(/\\//);\n    if (parsed.segments.length>0 && parsed.segments[0]=='' && parsed.path.length>1 && parsed.path.charAt(1)!='/') {\n      // empty segment at the start, remove it\n      parsed.segments.shift();\n    }\n    if (parsed.segments.length>0 && parsed.path.length>0 && parsed.path.charAt(parsed.path.length-1)=='/' && parsed.segments[parsed.segments.length-1]=='') {\n      // we may have an empty the end\n      // check to see if it is legimate\n      if (parsed.path.length>1 && parsed.path.charAt(parsed.path.length-2)!='/') {\n        parsed.segments.pop();\n      }\n    }\n    // check for non-escaped characters\n    for (var i=0; i<parsed.segments.length; i++) {\n      var check = parsed.segments[i].split(/%[A-Za-z0-9][A-Za-z0-9]|[\\ud800-\\udfff][\\ud800-\\udfff]|[A-Za-z0-9\\-\\._~!$&'()*+,;=@:\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+/);\n\n      for (var j=0; j<check.length; j++) {\n        if (check[j].length>0) {\n          throw \"Unecaped character \"+check[j].charAt(0)+\" (\"+check[j].charCodeAt(0)+\") in URI \"+parsed.spec;\n        }\n      }\n    }\n  }\n  parsed.isGeneric = true;\n};\n\n\nmodule.exports = URIResolver;\n","'use strict';\n\n\nvar utils = {};\n\n\nutils.defaultRequest = function (method, requestUrl, headers, content, callback) {\n  var xhr = new XMLHttpRequest();\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === xhr.DONE) {\n      var\n        headerLines = xhr.getAllResponseHeaders().split('\\r\\n'),\n        resHeaders = {};\n\n      for (var i = 0; i < headerLines.length; i++) {\n        var headerLine = headerLines[i].split(': ', 2);\n        resHeaders[headerLine[0].toLowerCase()] = headerLine[1];\n      }\n\n      callback(xhr.status, resHeaders, xhr.responseText);\n    }\n  };\n\n  xhr.open(method, requestUrl, true);\n\n  for (var header in headers) {\n    xhr.setRequestHeader(header, headers[header]);\n  }\n\n  xhr.send(content);\n};\n\nutils.corsProxyRequest = function (proxyUrl, method, requestUrl, headers, content, callback) {\n  var url = proxyUrl + '?url=' + encodeURIComponent(requestUrl);\n\n  utils.defaultRequest(method, url, headers, content, callback);\n};\n\nutils.parseHtml = function (toparse, base) {\n  var parser = new DOMParser();\n\n  return parser.parseFromString(toparse, 'text/html');\n};\n\nutils.parseXml = function (toparse, base) {\n  var parser = new DOMParser();\n\n  return parser.parseFromString(toparse, 'application/xml');\n};\n\nutils.mixin = function (rdf) {\n  rdf.defaultRequest = utils.defaultRequest;\n  rdf.corsProxyRequest = utils.corsProxyRequest;\n  rdf.parseHtml = utils.parseHtml;\n  rdf.parseXml = utils.parseXml;\n};\n\n\nmodule.exports = utils.mixin;\n",null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  var self = this // source\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || self.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= self.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}","module.exports = require(\"./lib/_stream_passthrough.js\")\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Ignore module for browserify (see package.json)","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * BSD 3-Clause License\n * Copyright (c) 2011-2014 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n(function() {\n\n// determine if in-browser or using node.js\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar _browser = !_nodejs &&\n  (typeof window !== 'undefined' || typeof self !== 'undefined');\nif(_browser) {\n  if(typeof global === 'undefined') {\n    if(typeof window !== 'undefined') {\n      global = window;\n    } else if(typeof self !== 'undefined') {\n      global = self;\n    } else if(typeof $ !== 'undefined') {\n      global = $;\n    }\n  }\n}\n\n// attaches jsonld API to the given object\nvar wrapper = function(jsonld) {\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, compacted, ctx) called once the operation completes.\n */\njsonld.compact = function(input, ctx, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not compact, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  if(ctx === null) {\n    return jsonld.nextTick(function() {\n      callback(new JsonLdError(\n        'The compaction context must not be null.',\n        'jsonld.CompactError', {code: 'invalid local context'}));\n    });\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return jsonld.nextTick(function() {\n      callback(null, null);\n    });\n  }\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('compactArrays' in options)) {\n    options.compactArrays = true;\n  }\n  if(!('graph' in options)) {\n    options.graph = false;\n  }\n  if(!('skipExpansion' in options)) {\n    options.skipExpansion = false;\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('link' in options)) {\n    options.link = false;\n  }\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n\n  var expand = function(input, options, callback) {\n    jsonld.nextTick(function() {\n      if(options.skipExpansion) {\n        return callback(null, input);\n      }\n      jsonld.expand(input, options, callback);\n    });\n  };\n\n  // expand input then do compaction\n  expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before compaction.',\n        'jsonld.CompactError', {cause: err}));\n    }\n\n    // process context\n    var activeCtx = _getInitialContext(options);\n    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not process context before compaction.',\n          'jsonld.CompactError', {cause: err}));\n      }\n\n      var compacted;\n      try {\n        // do compaction\n        compacted = new Processor().compact(activeCtx, null, expanded, options);\n      } catch(ex) {\n        return callback(ex);\n      }\n\n      cleanup(null, compacted, activeCtx, options);\n    });\n  });\n\n  // performs clean up after compaction\n  function cleanup(err, compacted, activeCtx, options) {\n    if(err) {\n      return callback(err);\n    }\n\n    if(options.compactArrays && !options.graph && _isArray(compacted)) {\n      if(compacted.length === 1) {\n        // simplify to a single item\n        compacted = compacted[0];\n      } else if(compacted.length === 0) {\n        // simplify to an empty object\n        compacted = {};\n      }\n    } else if(options.graph && _isObject(compacted)) {\n      // always use array if graph option is on\n      compacted = [compacted];\n    }\n\n    // follow @context key\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // build output context\n    ctx = _clone(ctx);\n    if(!_isArray(ctx)) {\n      ctx = [ctx];\n    }\n    // remove empty contexts\n    var tmp = ctx;\n    ctx = [];\n    for(var i = 0; i < tmp.length; ++i) {\n      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n        ctx.push(tmp[i]);\n      }\n    }\n\n    // remove array if only one context\n    var hasContext = (ctx.length > 0);\n    if(ctx.length === 1) {\n      ctx = ctx[0];\n    }\n\n    // add context and/or @graph\n    if(_isArray(compacted)) {\n      // use '@graph' keyword\n      var kwgraph = _compactIri(activeCtx, '@graph');\n      var graph = compacted;\n      compacted = {};\n      if(hasContext) {\n        compacted['@context'] = ctx;\n      }\n      compacted[kwgraph] = graph;\n    } else if(_isObject(compacted) && hasContext) {\n      // reorder keys so @context is first\n      var graph = compacted;\n      compacted = {'@context': ctx};\n      for(var key in graph) {\n        compacted[key] = graph[key];\n      }\n    }\n\n    callback(null, compacted, activeCtx);\n  }\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, expanded) called once the operation completes.\n */\njsonld.expand = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not expand, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('keepFreeFloatingNodes' in options)) {\n    options.keepFreeFloatingNodes = false;\n  }\n\n  jsonld.nextTick(function() {\n    // if input is a string, attempt to dereference remote document\n    if(typeof input === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        expand(remoteDoc);\n      };\n      var promise = options.documentLoader(input, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    expand({contextUrl: null, documentUrl: null, document: input});\n  });\n\n  function expand(remoteDoc) {\n    // set default base\n    if(!('base' in options)) {\n      options.base = remoteDoc.documentUrl || '';\n    }\n    // build meta-object and retrieve all @context URLs\n    var input = {\n      document: _clone(remoteDoc.document),\n      remoteContext: {'@context': remoteDoc.contextUrl}\n    };\n    if('expandContext' in options) {\n      var expandContext = _clone(options.expandContext);\n      if(typeof expandContext === 'object' && '@context' in expandContext) {\n        input.expandContext = expandContext;\n      } else {\n        input.expandContext = {'@context': expandContext};\n      }\n    }\n    _retrieveContextUrls(input, options, function(err, input) {\n      if(err) {\n        return callback(err);\n      }\n\n      var expanded;\n      try {\n        var processor = new Processor();\n        var activeCtx = _getInitialContext(options);\n        var document = input.document;\n        var remoteContext = input.remoteContext['@context'];\n\n        // process optional expandContext\n        if(input.expandContext) {\n          activeCtx = processor.processContext(\n            activeCtx, input.expandContext['@context'], options);\n        }\n\n        // process remote context from HTTP Link Header\n        if(remoteContext) {\n          activeCtx = processor.processContext(\n            activeCtx, remoteContext, options);\n        }\n\n        // expand document\n        expanded = processor.expand(\n          activeCtx, null, document, options, false);\n\n        // optimize away @graph with no other properties\n        if(_isObject(expanded) && ('@graph' in expanded) &&\n          Object.keys(expanded).length === 1) {\n          expanded = expanded['@graph'];\n        } else if(expanded === null) {\n          expanded = [];\n        }\n\n        // normalize to an array\n        if(!_isArray(expanded)) {\n          expanded = [expanded];\n        }\n      } catch(ex) {\n        return callback(ex);\n      }\n      callback(null, expanded);\n    });\n  }\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, flattened) called once the operation completes.\n */\njsonld.flatten = function(input, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not flatten, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // do flattening\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output.',\n          'jsonld.FlattenError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, framed) called once the operation completes.\n */\njsonld.frame = function(input, frame, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not frame, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('embed' in options)) {\n    options.embed = '@last';\n  }\n  options.explicit = options.explicit || false;\n  if(!('requireAll' in options)) {\n    options.requireAll = true;\n  }\n  options.omitDefault = options.omitDefault || false;\n\n  jsonld.nextTick(function() {\n    // if frame is a string, attempt to dereference remote document\n    if(typeof frame === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        doFrame(remoteDoc);\n      };\n      var promise = options.documentLoader(frame, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    doFrame({contextUrl: null, documentUrl: null, document: frame});\n  });\n\n  function doFrame(remoteFrame) {\n    // preserve frame context and add any Link header context\n    var frame = remoteFrame.document;\n    var ctx;\n    if(frame) {\n      ctx = frame['@context'];\n      if(remoteFrame.contextUrl) {\n        if(!ctx) {\n          ctx = remoteFrame.contextUrl;\n        } else if(_isArray(ctx)) {\n          ctx.push(remoteFrame.contextUrl);\n        } else {\n          ctx = [ctx, remoteFrame.contextUrl];\n        }\n        frame['@context'] = ctx;\n      } else {\n        ctx = ctx || {};\n      }\n    } else {\n      ctx = {};\n    }\n\n    // expand input\n    jsonld.expand(input, options, function(err, expanded) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not expand input before framing.',\n          'jsonld.FrameError', {cause: err}));\n      }\n\n      // expand frame\n      var opts = _clone(options);\n      opts.isFrame = true;\n      opts.keepFreeFloatingNodes = true;\n      jsonld.expand(frame, opts, function(err, expandedFrame) {\n        if(err) {\n          return callback(new JsonLdError(\n            'Could not expand frame before framing.',\n            'jsonld.FrameError', {cause: err}));\n        }\n\n        var framed;\n        try {\n          // do framing\n          framed = new Processor().frame(expanded, expandedFrame, opts);\n        } catch(ex) {\n          return callback(ex);\n        }\n\n        // compact result (force @graph option to true, skip expansion,\n        // check for linked embeds)\n        opts.graph = true;\n        opts.skipExpansion = true;\n        opts.link = {};\n        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {\n          if(err) {\n            return callback(new JsonLdError(\n              'Could not compact framed output.',\n              'jsonld.FrameError', {cause: err}));\n          }\n          // get graph alias\n          var graph = _compactIri(ctx, '@graph');\n          // remove @preserve from results\n          opts.link = {};\n          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n          callback(null, compacted);\n        });\n      });\n    });\n  }\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.link = function(input, ctx, options, callback) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  var frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  jsonld.frame(input, frame, options, callback);\n};\n\n/**\n * **Deprecated**\n *\n * Performs JSON-LD objectification.\n *\n * @param input the JSON-LD document to objectify.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.objectify = function(input, ctx, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before linking.',\n        'jsonld.LinkError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // flatten the graph\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output before linking.',\n          'jsonld.LinkError', {cause: err}));\n      }\n      // get graph alias\n      var graph = _compactIri(ctx, '@graph');\n      var top = compacted[graph][0];\n\n      var recurse = function(subject) {\n        // can't replace just a string\n        if(!_isObject(subject) && !_isArray(subject)) {\n          return;\n        }\n\n        // bottom out recursion on re-visit\n        if(_isObject(subject)) {\n          if(recurse.visited[subject['@id']]) {\n            return;\n          }\n          recurse.visited[subject['@id']] = true;\n        }\n\n        // each array element *or* object key\n        for(var k in subject) {\n          var obj = subject[k];\n          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');\n\n          // can't replace a non-object or non-array unless it's an @id\n          if(!_isArray(obj) && !_isObject(obj) && !isid) {\n            continue;\n          }\n\n          if(_isString(obj) && isid) {\n            subject[k] = obj = top[obj];\n            recurse(obj);\n          } else if(_isArray(obj)) {\n            for(var i = 0; i < obj.length; ++i) {\n              if(_isString(obj[i]) && isid) {\n                obj[i] = top[obj[i]];\n              } else if(_isObject(obj[i]) && '@id' in obj[i]) {\n                obj[i] = top[obj[i]['@id']];\n              }\n              recurse(obj[i]);\n            }\n          } else if(_isObject(obj)) {\n            var sid = obj['@id'];\n            subject[k] = obj = top[sid];\n            recurse(obj);\n          }\n        }\n      };\n      recurse.visited = {};\n      recurse(top);\n\n      compacted.of_type = {};\n      for(var s in top) {\n        if(!('@type' in top[s])) {\n          continue;\n        }\n        var types = top[s]['@type'];\n        if(!_isArray(types)) {\n          types = [types];\n        }\n        for(var t in types) {\n          if(!(types[t] in compacted.of_type)) {\n            compacted.of_type[types[t]] = [];\n          }\n          compacted.of_type[types[t]].push(top[s]);\n        }\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs RDF dataset normalization on the given JSON-LD input. The output\n * is an RDF dataset unless the 'format' option is used.\n *\n * @param input the JSON-LD input to normalize.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [format] the format if output is a string:\n *            'application/nquads' for N-Quads.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, normalized) called once the operation completes.\n */\njsonld.normalize = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not normalize, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // convert to RDF dataset then do normalization\n  var opts = _clone(options);\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  jsonld.toRDF(input, opts, function(err, dataset) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not convert input to RDF dataset before normalization.',\n        'jsonld.NormalizeError', {cause: err}));\n    }\n\n    // do normalization\n    new Processor().normalize(dataset, options, callback);\n  });\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/nquads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n * @param callback(err, output) called once the operation completes.\n */\njsonld.fromRDF = function(dataset, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert from RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('useRdfType' in options)) {\n    options.useRdfType = false;\n  }\n  if(!('useNativeTypes' in options)) {\n    options.useNativeTypes = false;\n  }\n\n  if(!('format' in options) && _isString(dataset)) {\n    // set default format to nquads\n    if(!('format' in options)) {\n      options.format = 'application/nquads';\n    }\n  }\n\n  jsonld.nextTick(function() {\n    // handle special format\n    var rdfParser;\n    if(options.format) {\n      // check supported formats\n      rdfParser = options.rdfParser || _rdfParsers[options.format];\n      if(!rdfParser) {\n        return callback(new JsonLdError(\n          'Unknown input format.',\n          'jsonld.UnknownFormat', {format: options.format}));\n      }\n    } else {\n      // no-op parser, assume dataset already parsed\n      rdfParser = function() {\n        return dataset;\n      };\n    }\n\n    var callbackCalled = false;\n    try {\n      // rdf parser may be async or sync, always pass callback\n      dataset = rdfParser(dataset, function(err, dataset) {\n        callbackCalled = true;\n        if(err) {\n          return callback(err);\n        }\n        fromRDF(dataset, options, callback);\n      });\n    } catch(e) {\n      if(!callbackCalled) {\n        return callback(e);\n      }\n      throw e;\n    }\n    // handle synchronous or promise-based parser\n    if(dataset) {\n      // if dataset is actually a promise\n      if('then' in dataset) {\n        return dataset.then(function(dataset) {\n          fromRDF(dataset, options, callback);\n        }, callback);\n      }\n      // parser is synchronous\n      fromRDF(dataset, options, callback);\n    }\n\n    function fromRDF(dataset, options, callback) {\n      // convert from RDF\n      new Processor().fromRDF(dataset, options, callback);\n    }\n  });\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [format] the format to use to output a string:\n *            'application/nquads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, dataset) called once the operation completes.\n */\njsonld.toRDF = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert to RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before serialization to RDF.',\n        'jsonld.RdfError', {cause: err}));\n    }\n\n    var dataset;\n    try {\n      // output RDF dataset\n      dataset = Processor.prototype.toRDF(expanded, options);\n      if(options.format) {\n        if(options.format === 'application/nquads') {\n          return callback(null, _toNQuads(dataset));\n        }\n        throw new JsonLdError(\n          'Unknown output format.',\n          'jsonld.UnknownFormat', {format: options.format});\n      }\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, dataset);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a map of\n * node ID => node.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [namer] a jsonld.UniqueNamer to use to label blank nodes.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, nodeMap) called once the operation completes.\n */\njsonld.createNodeMap = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not create node map, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before creating node map.',\n        'jsonld.CreateNodeMapError', {cause: err}));\n    }\n\n    var nodeMap;\n    try {\n      nodeMap = new Processor().createNodeMap(_input, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    callback(null, nodeMap);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [namer] a jsonld.UniqueNamer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, merged) called once the operation completes.\n */\njsonld.merge = function(docs, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, too few arguments.'));\n    });\n  }\n  if(!_isArray(docs)) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, \"docs\" must be an array.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // expand all documents\n  var expanded = [];\n  var error = null;\n  var count = docs.length;\n  for(var i = 0; i < docs.length; ++i) {\n    var opts = {};\n    for(var key in options) {\n      opts[key] = options[key];\n    }\n    jsonld.expand(docs[i], opts, expandComplete);\n  }\n\n  function expandComplete(err, _input) {\n    if(error) {\n      return;\n    }\n    if(err) {\n      error = err;\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n    expanded.push(_input);\n    if(--count === 0) {\n      merge(expanded);\n    }\n  }\n\n  function merge(expanded) {\n    var mergeNodes = true;\n    if('mergeNodes' in options) {\n      mergeNodes = options.mergeNodes;\n    }\n\n    var namer = options.namer || new UniqueNamer('_:b');\n    var graphs = {'@default': {}};\n\n    var defaultGraph;\n    try {\n      for(var i = 0; i < expanded.length; ++i) {\n        // uniquely relabel blank nodes\n        var doc = expanded[i];\n        doc = jsonld.relabelBlankNodes(doc, {\n          namer: new UniqueNamer('_:b' + i + '-')\n        });\n\n        // add nodes to the shared node map graphs if merging nodes, to a\n        // separate graph set if not\n        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n        _createNodeMap(doc, _graphs, '@default', namer);\n\n        if(_graphs !== graphs) {\n          // merge document graphs but don't merge existing nodes\n          for(var graphName in _graphs) {\n            var _nodeMap = _graphs[graphName];\n            if(!(graphName in graphs)) {\n              graphs[graphName] = _nodeMap;\n              continue;\n            }\n            var nodeMap = graphs[graphName];\n            for(var key in _nodeMap) {\n              if(!(key in nodeMap)) {\n                nodeMap[key] = _nodeMap[key];\n              }\n            }\n          }\n        }\n      }\n\n      // add all non-default graphs to default graph\n      defaultGraph = _mergeNodeMaps(graphs);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // produce flattened output\n    var flattened = [];\n    var keys = Object.keys(defaultGraph).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var node = defaultGraph[keys[ki]];\n      // only add full subjects to top-level\n      if(!_isSubjectReference(node)) {\n        flattened.push(node);\n      }\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact merged output.',\n          'jsonld.MergeError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [namer] a jsonld.UniqueNamer to use.\n */\njsonld.relabelBlankNodes = function(input, options) {\n  options = options || {};\n  var namer = options.namer || new UniqueNamer('_:b');\n  return _labelBlankNodes(namer, input);\n};\n\n/**\n * The default document loader for external documents. If the environment\n * is node.js, a callback-continuation-style document loader is used; otherwise,\n * a promises-style document loader is used.\n *\n * @param url the URL to load.\n * @param callback(err, remoteDoc) called once the operation completes,\n *          if using a non-promises API.\n *\n * @return a promise, if using a promises API.\n */\njsonld.documentLoader = function(url, callback) {\n  var err = new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed'});\n  if(_nodejs) {\n    return callback(err, {contextUrl: null, documentUrl: url, document: null});\n  }\n  return jsonld.promisify(function(callback) {\n    callback(err);\n  });\n};\n\n/**\n * Deprecated default document loader. Use or override jsonld.documentLoader\n * instead.\n */\njsonld.loadDocument = function(url, callback) {\n  var promise = jsonld.documentLoader(url, callback);\n  if(promise && 'then' in promise) {\n    promise.then(callback.bind(null, null), callback);\n  }\n};\n\n/* Promises API */\n\n/**\n * Creates a new promises API object.\n *\n * @param [options] the options to use:\n *          [api] an object to attach the API to.\n *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises\n *            API, 'jsonld.js' to output the same with augmented proprietary\n *            methods (default: 'jsonld.js')\n *\n * @return the promises API object.\n */\njsonld.promises = function(options) {\n  options = options || {};\n  var slice = Array.prototype.slice;\n  var promisify = jsonld.promisify;\n\n  // handle 'api' option as version, set defaults\n  var api = options.api || {};\n  var version = options.version || 'jsonld.js';\n  if(typeof options.api === 'string') {\n    if(!options.version) {\n      version = options.api;\n    }\n    api = {};\n  }\n\n  api.expand = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not expand, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));\n  };\n  api.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not compact, too few arguments.');\n    }\n    var compact = function(input, ctx, options, callback) {\n      // ensure only one value is returned in callback\n      jsonld.compact(input, ctx, options, function(err, compacted) {\n        callback(err, compacted);\n      });\n    };\n    return promisify.apply(null, [compact].concat(slice.call(arguments)));\n  };\n  api.flatten = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not flatten, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.flatten].concat(slice.call(arguments)));\n  };\n  api.frame = function(input, frame) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not frame, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));\n  };\n  api.fromRDF = function(dataset) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert from RDF, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.fromRDF].concat(slice.call(arguments)));\n  };\n  api.toRDF = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert to RDF, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));\n  };\n  api.normalize = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not normalize, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.normalize].concat(slice.call(arguments)));\n  };\n\n  if(version === 'jsonld.js') {\n    api.link = function(input, ctx) {\n      if(arguments.length < 2) {\n        throw new TypeError('Could not link, too few arguments.');\n      }\n      return promisify.apply(\n        null, [jsonld.link].concat(slice.call(arguments)));\n    };\n    api.objectify = function(input) {\n      return promisify.apply(\n        null, [jsonld.objectify].concat(slice.call(arguments)));\n    };\n    api.createNodeMap = function(input) {\n      return promisify.apply(\n        null, [jsonld.createNodeMap].concat(slice.call(arguments)));\n    };\n    api.merge = function(input) {\n      return promisify.apply(\n        null, [jsonld.merge].concat(slice.call(arguments)));\n    };\n  }\n\n  try {\n    jsonld.Promise = global.Promise || require('es6-promise').Promise;\n  } catch(e) {\n    var f = function() {\n      throw new Error('Unable to find a Promise implementation.');\n    };\n    for(var method in api) {\n      api[method] = f;\n    }\n  }\n\n  return api;\n};\n\n/**\n * Converts a node.js async op into a promise w/boxed resolved value(s).\n *\n * @param op the operation to convert.\n *\n * @return the promise.\n */\njsonld.promisify = function(op) {\n  if(!jsonld.Promise) {\n    try {\n      jsonld.Promise = global.Promise || require('es6-promise').Promise;\n    } catch(e) {\n      throw new Error('Unable to find a Promise implementation.');\n    }\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  return new jsonld.Promise(function(resolve, reject) {\n    op.apply(null, args.concat(function(err, value) {\n      if(!err) {\n        resolve(value);\n      } else {\n        reject(err);\n      }\n    }));\n  });\n};\n\n// extend jsonld.promises w/jsonld.js methods\njsonld.promises({api: jsonld.promises});\n\n/* WebIDL API */\n\nfunction JsonLdProcessor() {}\nJsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});\nJsonLdProcessor.prototype.toString = function() {\n  if(this instanceof JsonLdProcessor) {\n    return '[object JsonLdProcessor]';\n  }\n  return '[object JsonLdProcessorPrototype]';\n};\njsonld.JsonLdProcessor = JsonLdProcessor;\n\n// IE8 has Object.defineProperty but it only\n// works on DOM nodes -- so feature detection\n// requires try/catch :-(\nvar canDefineProperty = !!Object.defineProperty;\nif(canDefineProperty) {\n  try {\n    Object.defineProperty({}, 'x', {});\n  } catch(e) {\n    canDefineProperty = false;\n  }\n}\n\nif(canDefineProperty) {\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n}\n\n// setup browser global JsonLdProcessor\nif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n  if(canDefineProperty) {\n    Object.defineProperty(global, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: JsonLdProcessor\n    });\n  } else {\n    global.JsonLdProcessor = JsonLdProcessor;\n  }\n}\n\n/* Utility API */\n\n// define setImmediate and nextTick\nif(typeof process === 'undefined' || !process.nextTick) {\n  if(typeof setImmediate === 'function') {\n    jsonld.setImmediate = jsonld.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n  } else {\n    jsonld.setImmediate = function(callback) {\n      setTimeout(callback, 0);\n    };\n    jsonld.nextTick = jsonld.setImmediate;\n  }\n} else {\n  jsonld.nextTick = process.nextTick;\n  if(typeof setImmediate === 'function') {\n    jsonld.setImmediate = setImmediate;\n  } else {\n    jsonld.setImmediate = jsonld.nextTick;\n  }\n}\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\njsonld.parseLinkHeader = function(header) {\n  var rval = {};\n  // split on unbracketed/unquoted commas\n  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);\n  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n  for(var i = 0; i < entries.length; ++i) {\n    var match = entries[i].match(rLinkHeader);\n    if(!match) {\n      continue;\n    }\n    var result = {target: match[1]};\n    var params = match[2];\n    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n    while(match = rParams.exec(params)) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    var rel = result['rel'] || '';\n    if(_isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rel in rval) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Creates a simple document cache that retains documents for a short\n * period of time.\n *\n * FIXME: Implement simple HTTP caching instead.\n *\n * @param size the maximum size of the cache.\n */\njsonld.DocumentCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 50;\n  this.expires = 30 * 1000;\n};\njsonld.DocumentCache.prototype.get = function(url) {\n  if(url in this.cache) {\n    var entry = this.cache[url];\n    if(entry.expires >= +new Date()) {\n      return entry.ctx;\n    }\n    delete this.cache[url];\n    this.order.splice(this.order.indexOf(url), 1);\n  }\n  return null;\n};\njsonld.DocumentCache.prototype.set = function(url, ctx) {\n  if(this.order.length === this.size) {\n    delete this.cache[this.order.shift()];\n  }\n  this.order.push(url);\n  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};\n};\n\n/**\n * Creates an active context cache.\n *\n * @param size the maximum size of the cache.\n */\njsonld.ActiveContextCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 100;\n};\njsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  var level1 = this.cache[key1];\n  if(level1 && key2 in level1) {\n    return level1[key2];\n  }\n  return null;\n};\njsonld.ActiveContextCache.prototype.set = function(\n  activeCtx, localCtx, result) {\n  if(this.order.length === this.size) {\n    var entry = this.order.shift();\n    delete this.cache[entry.activeCtx][entry.localCtx];\n  }\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  this.order.push({activeCtx: key1, localCtx: key2});\n  if(!(key1 in this.cache)) {\n    this.cache[key1] = {};\n  }\n  this.cache[key1][key2] = _clone(result);\n};\n\n/**\n * Default JSON-LD cache.\n */\njsonld.cache = {\n  activeCtx: new jsonld.ActiveContextCache()\n};\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Creates a built-in jquery document loader.\n *\n * @param $ the jquery instance to use.\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *\n * @return the jquery document loader.\n */\njsonld.documentLoaders.jquery = function($, options) {\n  options = options || {};\n  var loader = function(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    $.ajax({\n      url: url,\n      accepts: {\n        json: 'application/ld+json, application/json'\n      },\n      // ensure Accept header is very specific for JSON-LD/JSON\n      headers: {\n        'Accept': 'application/ld+json, application/json'\n      },\n      dataType: 'json',\n      crossDomain: true,\n      success: function(data, textStatus, jqXHR) {\n        var doc = {contextUrl: null, documentUrl: url, document: data};\n\n        // handle Link Header\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var linkHeader = jqXHR.getResponseHeader('Link');\n        if(linkHeader && contentType !== 'application/ld+json') {\n          // only 1 related link header permitted\n          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n          if(_isArray(linkHeader)) {\n            return callback(new JsonLdError(\n              'URL could not be dereferenced, it has more than one ' +\n              'associated HTTP Link Header.',\n              'jsonld.InvalidUrl',\n              {code: 'multiple context link headers', url: url}), doc);\n          }\n          if(linkHeader) {\n            doc.contextUrl = linkHeader.target;\n          }\n        }\n\n        callback(null, doc);\n      },\n      error: function(jqXHR, textStatus, err) {\n        callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}),\n          {contextUrl: null, documentUrl: url, document: null});\n      }\n    });\n  };\n\n  var usePromise = (typeof Promise !== 'undefined');\n  if('usePromise' in options) {\n    usePromise = options.usePromise;\n  }\n  if(usePromise) {\n    return function(url) {\n      return jsonld.promisify(loader, url);\n    };\n  }\n  return loader;\n};\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          strictSSL: true to require SSL certificates to be valid,\n *            false not to (default: true).\n *          maxRedirects: the maximum number of redirects to permit, none by\n *            default.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; false by default.\n *\n * @return the node document loader.\n */\njsonld.documentLoaders.node = function(options) {\n  options = options || {};\n  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;\n  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;\n  var request = require('request');\n  var http = require('http');\n  var cache = new jsonld.DocumentCache();\n  function loadDocument(url, redirects, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    var doc = cache.get(url);\n    if(doc !== null) {\n      return callback(null, doc);\n    }\n    request({\n      url: url,\n      headers: {\n        'Accept': 'application/ld+json, application/json'\n      },\n      strictSSL: strictSSL,\n      followRedirect: false\n    }, handleResponse);\n\n    function handleResponse(err, res, body) {\n      doc = {contextUrl: null, documentUrl: url, document: body || null};\n\n      // handle error\n      if(err) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}), doc);\n      }\n      var statusText = http.STATUS_CODES[res.statusCode];\n      if(res.statusCode >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + statusText,\n          'jsonld.InvalidUrl', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: res.statusCode\n          }), doc);\n      }\n\n      // handle Link Header\n      if(res.headers.link &&\n        res.headers['content-type'] !== 'application/ld+json') {\n        // only 1 related link header permitted\n        var linkHeader = jsonld.parseLinkHeader(\n          res.headers.link)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one associated ' +\n            'HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      // handle redirect\n      if(res.statusCode >= 300 && res.statusCode < 400 &&\n        res.headers.location) {\n        if(redirects.length === maxRedirects) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; there were too many redirects.',\n            'jsonld.TooManyRedirects', {\n              code: 'loading document failed',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        if(redirects.indexOf(url) !== -1) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; infinite redirection was detected.',\n            'jsonld.InfiniteRedirectDetected', {\n              code: 'recursive context inclusion',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        redirects.push(url);\n        return loadDocument(res.headers.location, redirects, callback);\n      }\n      // cache for each redirected URL\n      redirects.push(url);\n      for(var i = 0; i < redirects.length; ++i) {\n        cache.set(\n          redirects[i],\n          {contextUrl: null, documentUrl: redirects[i], document: body});\n      }\n      callback(err, doc);\n    }\n  }\n\n  var loader = function(url, callback) {\n    loadDocument(url, [], callback);\n  };\n  if(options.usePromise) {\n    return function(url) {\n      return jsonld.promisify(loader, url);\n    };\n  }\n  return loader;\n};\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\njsonld.documentLoaders.xhr = function(options) {\n  var rlink = /(^|(\\r\\n))link:/i;\n  options = options || {};\n  var loader = function(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    var xhr = options.xhr || XMLHttpRequest;\n    var req = new xhr();\n    req.onload = function(e) {\n      if(req.status >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + req.statusText,\n          'jsonld.LoadDocumentError', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: req.status\n          }), {contextUrl: null, documentUrl: url, document: null});\n      }\n\n      var doc = {contextUrl: null, documentUrl: url, document: req.response};\n\n      // handle Link Header (avoid unsafe header warning by existence testing)\n      var contentType = req.getResponseHeader('Content-Type');\n      var linkHeader;\n      if(rlink.test(req.getAllResponseHeaders())) {\n        linkHeader = req.getResponseHeader('Link');\n      }\n      if(linkHeader && contentType !== 'application/ld+json') {\n        // only 1 related link header permitted\n        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one ' +\n            'associated HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      callback(null, doc);\n    };\n    req.onerror = function() {\n      callback(new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    };\n    req.open('GET', url, true);\n    req.setRequestHeader('Accept', 'application/ld+json, application/json');\n    req.send();\n  };\n\n  var usePromise = (typeof Promise !== 'undefined');\n  if('usePromise' in options) {\n    usePromise = options.usePromise;\n  }\n  if(usePromise) {\n    return function(url) {\n      return jsonld.promisify(loader, url);\n    };\n  }\n  return loader;\n};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'jquery' and 'node'.\n *\n * To use the jquery document loader, the first parameter must be a reference\n * to the main jquery object.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type: type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context in its callback.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, ctx) called once the operation completes.\n */\njsonld.processContext = function(activeCtx, localCtx) {\n  // get arguments\n  var options = {};\n  var callbackArg = 2;\n  if(arguments.length > 3) {\n    options = arguments[2] || {};\n    callbackArg += 1;\n  }\n  var callback = arguments[callbackArg];\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return callback(null, _getInitialContext(options));\n  }\n\n  // retrieve URLs in localCtx\n  localCtx = _clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n  _retrieveContextUrls(localCtx, options, function(err, ctx) {\n    if(err) {\n      return callback(err);\n    }\n    try {\n      // process context\n      ctx = new Processor().processContext(activeCtx, ctx, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, ctx);\n  });\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\njsonld.hasProperty = function(subject, property) {\n  var rval = false;\n  if(property in subject) {\n    var value = subject[property];\n    rval = (!_isArray(value) || value.length > 0);\n  }\n  return rval;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\njsonld.hasValue = function(subject, property, value) {\n  var rval = false;\n  if(jsonld.hasProperty(subject, property)) {\n    var val = subject[property];\n    var isList = _isList(val);\n    if(_isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(var i = 0; i < val.length; ++i) {\n        if(jsonld.compareValues(value, val[i])) {\n          rval = true;\n          break;\n        }\n      }\n    } else if(!_isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      rval = jsonld.compareValues(value, val);\n    }\n  }\n  return rval;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n */\njsonld.addValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n\n  if(_isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !(property in subject)) {\n      subject[property] = [];\n    }\n    for(var i = 0; i < value.length; ++i) {\n      jsonld.addValue(subject, property, value[i], options);\n    }\n  } else if(property in subject) {\n    // check if subject already has value if duplicates not allowed\n    var hasValue = (!options.allowDuplicate &&\n      jsonld.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!_isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      subject[property].push(value);\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\njsonld.getValues = function(subject, property) {\n  var rval = subject[property] || [];\n  if(!_isArray(rval)) {\n    rval = [rval];\n  }\n  return rval;\n};\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\njsonld.removeProperty = function(subject, property) {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\njsonld.removeValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  var values = jsonld.getValues(subject, property).filter(function(e) {\n    return !jsonld.compareValues(e, value);\n  });\n\n  if(values.length === 0) {\n    jsonld.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\njsonld.compareValues = function(v1, v2) {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(_isValue(v1) && _isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value.\n */\njsonld.getContextValue = function(ctx, key, type) {\n  var rval = null;\n\n  // return null for invalid key\n  if(key === null) {\n    return rval;\n  }\n\n  // get default language\n  if(type === '@language' && (type in ctx)) {\n    rval = ctx[type];\n  }\n\n  // get specific entry information\n  if(ctx.mappings[key]) {\n    var entry = ctx.mappings[key];\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      rval = entry;\n    } else if(type in entry) {\n      // return entry value for type\n      rval = entry[type];\n    }\n  }\n\n  return rval;\n};\n\n/** Registered RDF dataset parsers hashed by content-type. */\nvar _rdfParsers = {};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n * a string of input and a callback. An RDF dataset parser can be synchronous\n * or asynchronous.\n *\n * If the parser function returns undefined or null then it will be assumed to\n * be asynchronous w/a continuation-passing style and the callback parameter\n * given to the parser MUST be invoked.\n *\n * If it returns a Promise, then it will be assumed to be asynchronous, but the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * If it returns an RDF dataset, it will be assumed to be synchronous and the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * @param contentType the content-type for the parser.\n * @param parser(input, callback(err, dataset)) the parser function (takes a\n *          string as a parameter and either returns null/undefined and uses\n *          the given callback, returns a Promise, or returns an RDF dataset).\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\nif(_nodejs) {\n  // needed for serialization of XML literals\n  if(typeof XMLSerializer === 'undefined') {\n    var XMLSerializer = null;\n  }\n  if(typeof Node === 'undefined') {\n    var Node = {\n      ELEMENT_NODE: 1,\n      ATTRIBUTE_NODE: 2,\n      TEXT_NODE: 3,\n      CDATA_SECTION_NODE: 4,\n      ENTITY_REFERENCE_NODE: 5,\n      ENTITY_NODE: 6,\n      PROCESSING_INSTRUCTION_NODE: 7,\n      COMMENT_NODE: 8,\n      DOCUMENT_NODE: 9,\n      DOCUMENT_TYPE_NODE: 10,\n      DOCUMENT_FRAGMENT_NODE: 11,\n      NOTATION_NODE:12\n    };\n  }\n}\n\n// constants\nvar XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';\nvar XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';\nvar XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\nvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nvar RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nvar RDF_LIST = RDF + 'List';\nvar RDF_FIRST = RDF + 'first';\nvar RDF_REST = RDF + 'rest';\nvar RDF_NIL = RDF + 'nil';\nvar RDF_TYPE = RDF + 'type';\nvar RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';\nvar RDF_XML_LITERAL = RDF + 'XMLLiteral';\nvar RDF_OBJECT = RDF + 'object';\nvar RDF_LANGSTRING = RDF + 'langString';\n\nvar LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';\nvar MAX_CONTEXT_URLS = 10;\n\n/**\n * A JSON-LD Error.\n *\n * @param msg the error message.\n * @param type the error type.\n * @param details the error details.\n */\nvar JsonLdError = function(msg, type, details) {\n  if(_nodejs) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n  } else if(typeof Error !== 'undefined') {\n    this.stack = (new Error()).stack;\n  }\n  this.name = type || 'jsonld.Error';\n  this.message = msg || 'An unspecified JSON-LD error occurred.';\n  this.details = details || {};\n};\nif(_nodejs) {\n  require('util').inherits(JsonLdError, Error);\n} else if(typeof Error !== 'undefined') {\n  JsonLdError.prototype = new Error();\n}\n\n/**\n * Constructs a new JSON-LD Processor.\n */\nvar Processor = function() {};\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n *\n * @return the compacted value.\n */\nProcessor.prototype.compact = function(\n  activeCtx, activeProperty, element, options) {\n  // recursively compact array\n  if(_isArray(element)) {\n    var rval = [];\n    for(var i = 0; i < element.length; ++i) {\n      // compact, dropping any null values\n      var compacted = this.compact(\n        activeCtx, activeProperty, element[i], options);\n      if(compacted !== null) {\n        rval.push(compacted);\n      }\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      var container = jsonld.getContextValue(\n        activeCtx, activeProperty, '@container');\n      if(container === null) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element && element['@id'] in options.link) {\n      // check for a linked element to reuse\n      var linked = options.link[element['@id']];\n      for(var i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      var rval = _compactValue(activeCtx, activeProperty, element);\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(element['@id'] in options.link)) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    var insideReverse = (activeProperty === '@reverse');\n\n    var rval = {};\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!(element['@id'] in options.link)) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // process element keys in order\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var expandedProperty = keys[ki];\n      var expandedValue = element[expandedProperty];\n\n      // compact @id and @type(s)\n      if(expandedProperty === '@id' || expandedProperty === '@type') {\n        var compactedValue;\n\n        // compact single @id\n        if(_isString(expandedValue)) {\n          compactedValue = _compactIri(\n            activeCtx, expandedValue, null,\n            {vocab: (expandedProperty === '@type')});\n        } else {\n          // expanded value must be a @type array\n          compactedValue = [];\n          for(var vi = 0; vi < expandedValue.length; ++vi) {\n            compactedValue.push(_compactIri(\n              activeCtx, expandedValue[vi], null, {vocab: true}));\n          }\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);\n        jsonld.addValue(\n          rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        var compactedValue = this.compact(\n          activeCtx, '@reverse', expandedValue, options);\n\n        // handle double-reversed properties\n        for(var compactedProperty in compactedValue) {\n          if(activeCtx.mappings[compactedProperty] &&\n            activeCtx.mappings[compactedProperty].reverse) {\n            var value = compactedValue[compactedProperty];\n            var container = jsonld.getContextValue(\n              activeCtx, compactedProperty, '@container');\n            var useArray = (container === '@set' || !options.compactArrays);\n            jsonld.addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          var alias = _compactIri(activeCtx, expandedProperty);\n          jsonld.addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        var container = jsonld.getContextValue(\n          activeCtx, activeProperty, '@container');\n        if(container === '@index') {\n          continue;\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't @graph or @list\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedValue, {vocab: true},\n          insideReverse);\n        jsonld.addValue(\n          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});\n      }\n\n      // recusively process array values\n      for(var vi = 0; vi < expandedValue.length; ++vi) {\n        var expandedItem = expandedValue[vi];\n\n        // compact property and get container type\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedItem, {vocab: true},\n          insideReverse);\n        var container = jsonld.getContextValue(\n          activeCtx, itemActiveProperty, '@container');\n\n        // get @list value if appropriate\n        var isList = _isList(expandedItem);\n        var list = null;\n        if(isList) {\n          list = expandedItem['@list'];\n        }\n\n        // recursively compact expanded item\n        var compactedItem = this.compact(\n          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(container !== '@list') {\n            // wrap using @list alias\n            var wrapper = {};\n            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;\n            compactedItem = wrapper;\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[_compactIri(activeCtx, '@index')] =\n                expandedItem['@index'];\n            }\n          } else if(itemActiveProperty in rval) {\n            // can't use @list container for more than 1 list\n            throw new JsonLdError(\n              'JSON-LD compact error; property has a \"@list\" @container ' +\n              'rule but there is more than a single @list that matches ' +\n              'the compacted term in the document. Compaction might mix ' +\n              'unwanted items into the list.',\n              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n          }\n        }\n\n        // handle language and index maps\n        if(container === '@language' || container === '@index') {\n          // get or create the map object\n          var mapObject;\n          if(itemActiveProperty in rval) {\n            mapObject = rval[itemActiveProperty];\n          } else {\n            rval[itemActiveProperty] = mapObject = {};\n          }\n\n          // if container is a language map, simplify compacted value to\n          // a simple string\n          if(container === '@language' && _isValue(compactedItem)) {\n            compactedItem = compactedItem['@value'];\n          }\n\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          jsonld.addValue(mapObject, expandedItem[container], compactedItem);\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          var isArray = (!options.compactArrays || container === '@set' ||\n            container === '@list' ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          jsonld.addValue(\n            rval, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n *\n * @return the expanded value.\n */\nProcessor.prototype.expand = function(\n  activeCtx, activeProperty, element, options, insideList) {\n  var self = this;\n\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n      return null;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue(activeCtx, activeProperty, element);\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    var rval = [];\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n    insideList = insideList || container === '@list';\n    for(var i = 0; i < element.length; ++i) {\n      // expand element\n      var e = self.expand(activeCtx, activeProperty, element[i], options);\n      if(insideList && (_isArray(e) || _isList(e))) {\n        // lists of lists are illegal\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n          'jsonld.SyntaxError', {code: 'list of lists'});\n      }\n      // drop null values\n      if(e !== null) {\n        if(_isArray(e)) {\n          rval = rval.concat(e);\n        } else {\n          rval.push(e);\n        }\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = self.processContext(activeCtx, element['@context'], options);\n  }\n\n  // expand the active property\n  var expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true});\n\n  var rval = {};\n  var keys = Object.keys(element).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var value = element[key];\n    var expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\n    // drop non-absolute IRI keys that aren't keywords\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      continue;\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value: value});\n      }\n      if(expandedProperty in rval) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id' && !_isString(value)) {\n      if(!options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must a string.',\n          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});\n      }\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +\n          'object.', 'jsonld.SyntaxError',\n          {code: 'invalid @id value', value: value});\n      }\n    }\n\n    if(expandedProperty === '@type') {\n      _validateTypeValue(value);\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});\n    }\n\n    // @value must not be an object or an array\n    if(expandedProperty === '@value' &&\n      (_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: value});\n    }\n\n    // @language must be a string\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value: value});\n      }\n      // ensure language value is lowercase\n      value = value.toLowerCase();\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value: value});\n      }\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});\n      }\n\n      expandedValue = self.expand(activeCtx, '@reverse', value, options);\n\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(var property in expandedValue['@reverse']) {\n          jsonld.addValue(\n            rval, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      var reverseMap = rval['@reverse'] || null;\n      for(var property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = rval['@reverse'] = {};\n        }\n        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});\n        var items = expandedValue[property];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          jsonld.addValue(\n            reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    var container = jsonld.getContextValue(activeCtx, key, '@container');\n\n    if(container === '@language' && _isObject(value)) {\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(value);\n    } else if(container === '@index' && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      expandedValue = (function _expandIndexMap(activeProperty) {\n        var rval = [];\n        var keys = Object.keys(value).sort();\n        for(var ki = 0; ki < keys.length; ++ki) {\n          var key = keys[ki];\n          var val = value[key];\n          if(!_isArray(val)) {\n            val = [val];\n          }\n          val = self.expand(activeCtx, activeProperty, val, options, false);\n          for(var vi = 0; vi < val.length; ++vi) {\n            var item = val[vi];\n            if(!('@index' in item)) {\n              item['@index'] = key;\n            }\n            rval.push(item);\n          }\n        }\n        return rval;\n      })(key);\n    } else {\n      // recurse into @list or @set\n      var isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        var nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = self.expand(\n          activeCtx, nextActiveProperty, value, options, isList);\n        if(isList && _isList(expandedValue)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n            'jsonld.SyntaxError', {code: 'list of lists'});\n        }\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = self.expand(activeCtx, key, value, options, false);\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      continue;\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container === '@list') {\n      // ensure expanded value is an array\n      expandedValue = (_isArray(expandedValue) ?\n        expandedValue : [expandedValue]);\n      expandedValue = {'@list': expandedValue};\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {\n      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};\n      if(!_isArray(expandedValue)) {\n        expandedValue = [expandedValue];\n      }\n      for(var ii = 0; ii < expandedValue.length; ++ii) {\n        var item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        jsonld.addValue(\n          reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // use an array except for certain keywords\n    var useArray =\n      ['@index', '@id', '@type', '@value', '@language'].indexOf(\n        expandedProperty) === -1;\n    jsonld.addValue(\n      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});\n  }\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  var count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && '@language' in rval) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    var validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and at most one other property ' +\n        'which can be \"@type\" or \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    // drop null @values\n    if(rval['@value'] === null) {\n      rval = null;\n    } else if('@language' in rval && !_isString(rval['@value'])) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||\n      rval['@type'].indexOf('_:') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language\n    rval = null;\n  }\n\n  // drop certain top-level objects that do not occur in lists\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      rval = null;\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Creates a JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [namer] the UniqueNamer to use.\n *\n * @return the node map.\n */\nProcessor.prototype.createNodeMap = function(input, options) {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  var namer = options.namer || new UniqueNamer('_:b');\n  var graphs = {'@default': {}};\n  _createNodeMap(input, graphs, '@default', namer);\n\n  // add all non-default graphs to default graph\n  return _mergeNodeMaps(graphs);\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\nProcessor.prototype.flatten = function(input) {\n  var defaultGraph = this.createNodeMap(input);\n\n  // produce flattened output\n  var flattened = [];\n  var keys = Object.keys(defaultGraph).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\nProcessor.prototype.frame = function(input, frame, options) {\n  // create framing state\n  var state = {\n    options: options,\n    graphs: {'@default': {}, '@merged': {}},\n    subjectStack: [],\n    link: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  var namer = new UniqueNamer('_:b');\n  _createNodeMap(input, state.graphs, '@merged', namer);\n  state.subjects = state.graphs['@merged'];\n\n  // frame the subjects\n  var framed = [];\n  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);\n  return framed;\n};\n\n/**\n * Performs normalization on the given RDF dataset.\n *\n * @param dataset the RDF dataset to normalize.\n * @param options the normalization options.\n * @param callback(err, normalized) called once the operation completes.\n */\nProcessor.prototype.normalize = function(dataset, options, callback) {\n  // create quads and map bnodes to their associated quads\n  var quads = [];\n  var bnodes = {};\n  for(var graphName in dataset) {\n    var triples = dataset[graphName];\n    if(graphName === '@default') {\n      graphName = null;\n    }\n    for(var ti = 0; ti < triples.length; ++ti) {\n      var quad = triples[ti];\n      if(graphName !== null) {\n        if(graphName.indexOf('_:') === 0) {\n          quad.name = {type: 'blank node', value: graphName};\n        } else {\n          quad.name = {type: 'IRI', value: graphName};\n        }\n      }\n      quads.push(quad);\n\n      var attrs = ['subject', 'object', 'name'];\n      for(var ai = 0; ai < attrs.length; ++ai) {\n        var attr = attrs[ai];\n        if(quad[attr] && quad[attr].type === 'blank node') {\n          var id = quad[attr].value;\n          if(id in bnodes) {\n            bnodes[id].quads.push(quad);\n          } else {\n            bnodes[id] = {quads: [quad]};\n          }\n        }\n      }\n    }\n  }\n\n  // mapping complete, start canonical naming\n  var namer = new UniqueNamer('_:c14n');\n  return hashBlankNodes(Object.keys(bnodes));\n\n  // generates unique and duplicate hashes for bnodes\n  function hashBlankNodes(unnamed) {\n    var nextUnnamed = [];\n    var duplicates = {};\n    var unique = {};\n\n    // hash quads for each unnamed bnode\n    jsonld.setImmediate(function() {hashUnnamed(0);});\n    function hashUnnamed(i) {\n      if(i === unnamed.length) {\n        // done, name blank nodes\n        return nameBlankNodes(unique, duplicates, nextUnnamed);\n      }\n\n      // hash unnamed bnode\n      var bnode = unnamed[i];\n      var hash = _hashQuads(bnode, bnodes);\n\n      // store hash as unique or a duplicate\n      if(hash in duplicates) {\n        duplicates[hash].push(bnode);\n        nextUnnamed.push(bnode);\n      } else if(hash in unique) {\n        duplicates[hash] = [unique[hash], bnode];\n        nextUnnamed.push(unique[hash]);\n        nextUnnamed.push(bnode);\n        delete unique[hash];\n      } else {\n        unique[hash] = bnode;\n      }\n\n      // hash next unnamed bnode\n      jsonld.setImmediate(function() {hashUnnamed(i + 1);});\n    }\n  }\n\n  // names unique hash bnodes\n  function nameBlankNodes(unique, duplicates, unnamed) {\n    // name unique bnodes in sorted hash order\n    var named = false;\n    var hashes = Object.keys(unique).sort();\n    for(var i = 0; i < hashes.length; ++i) {\n      var bnode = unique[hashes[i]];\n      namer.getName(bnode);\n      named = true;\n    }\n\n    if(named) {\n      // continue to hash bnodes if a bnode was assigned a name\n      hashBlankNodes(unnamed);\n    } else {\n      // name the duplicate hash bnodes\n      nameDuplicates(duplicates);\n    }\n  }\n\n  // names duplicate hash bnodes\n  function nameDuplicates(duplicates) {\n    // enumerate duplicate hash groups in sorted order\n    var hashes = Object.keys(duplicates).sort();\n\n    // process each group\n    processGroup(0);\n    function processGroup(i) {\n      if(i === hashes.length) {\n        // done, create JSON-LD array\n        return createArray();\n      }\n\n      // name each group member\n      var group = duplicates[hashes[i]];\n      var results = [];\n      nameGroupMember(group, 0);\n      function nameGroupMember(group, n) {\n        if(n === group.length) {\n          // name bnodes in hash order\n          results.sort(function(a, b) {\n            a = a.hash;\n            b = b.hash;\n            return (a < b) ? -1 : ((a > b) ? 1 : 0);\n          });\n          for(var r in results) {\n            // name all bnodes in path namer in key-entry order\n            // Note: key-order is preserved in javascript\n            for(var key in results[r].pathNamer.existing) {\n              namer.getName(key);\n            }\n          }\n          return processGroup(i + 1);\n        }\n\n        // skip already-named bnodes\n        var bnode = group[n];\n        if(namer.isNamed(bnode)) {\n          return nameGroupMember(group, n + 1);\n        }\n\n        // hash bnode paths\n        var pathNamer = new UniqueNamer('_:b');\n        pathNamer.getName(bnode);\n        _hashPaths(bnode, bnodes, namer, pathNamer,\n          function(err, result) {\n            if(err) {\n              return callback(err);\n            }\n            results.push(result);\n            nameGroupMember(group, n + 1);\n          });\n      }\n    }\n  }\n\n  // creates the sorted array of RDF quads\n  function createArray() {\n    var normalized = [];\n\n    /* Note: At this point all bnodes in the set of RDF quads have been\n     assigned canonical names, which have been stored in the 'namer' object.\n     Here each quad is updated by assigning each of its bnodes its new name\n     via the 'namer' object. */\n\n    // update bnode names in each quad and serialize\n    for(var i = 0; i < quads.length; ++i) {\n      var quad = quads[i];\n      var attrs = ['subject', 'object', 'name'];\n      for(var ai = 0; ai < attrs.length; ++ai) {\n        var attr = attrs[ai];\n        if(quad[attr] && quad[attr].type === 'blank node' &&\n          quad[attr].value.indexOf('_:c14n') !== 0) {\n          quad[attr].value = namer.getName(quad[attr].value);\n        }\n      }\n      normalized.push(_toNQuad(quad, quad.name ? quad.name.value : null));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // handle output format\n    if(options.format) {\n      if(options.format === 'application/nquads') {\n        return callback(null, normalized.join(''));\n      }\n      return callback(new JsonLdError(\n        'Unknown output format.',\n        'jsonld.UnknownFormat', {format: options.format}));\n    }\n\n    // output RDF dataset\n    callback(null, _parseNQuads(normalized.join('')));\n  }\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n * @param callback(err, output) called once the operation completes.\n */\nProcessor.prototype.fromRDF = function(dataset, options, callback) {\n  var defaultGraph = {};\n  var graphMap = {'@default': defaultGraph};\n  var referencedOnce = {};\n\n  for(var name in dataset) {\n    var graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    var nodeMap = graphMap[name];\n    for(var ti = 0; ti < graph.length; ++ti) {\n      var triple = graph[ti];\n\n      // get subject, predicate, object\n      var s = triple.subject.value;\n      var p = triple.predicate.value;\n      var o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      var node = nodeMap[s];\n\n      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {\n        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      var value = _RDFToObject(o, options.useNativeTypes);\n      jsonld.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          var object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }\n\n  // convert linked lists to @list arrays\n  for(var name in graphMap) {\n    var graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    var nil = graphObject[RDF_NIL];\n    for(var i = 0; i < nil.usages.length; ++i) {\n      var usage = nil.usages[i];\n      var node = usage.node;\n      var property = usage.property;\n      var head = usage.value;\n      var list = [];\n      var listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      var nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        _isObject(referencedOnce[node['@id']]) &&\n        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(node['@id'].indexOf('_:') !== 0) {\n          break;\n        }\n      }\n\n      // the list is nested in another list\n      if(property === RDF_FIRST) {\n        // empty list\n        if(node['@id'] === RDF_NIL) {\n          // can't convert rdf:nil to a @list object because it would\n          // result in a list of lists which isn't supported\n          continue;\n        }\n\n        // preserve list head\n        head = graphObject[head['@id']][RDF_REST][0];\n        list.pop();\n        listNodes.pop();\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(var j = 0; j < listNodes.length; ++j) {\n        delete graphObject[listNodes[j]];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  var result = [];\n  var subjects = Object.keys(defaultGraph).sort();\n  for(var i = 0; i < subjects.length; ++i) {\n    var subject = subjects[i];\n    var node = defaultGraph[subject];\n    if(subject in graphMap) {\n      var graph = node['@graph'] = [];\n      var graphObject = graphMap[subject];\n      var subjects_ = Object.keys(graphObject).sort();\n      for(var si = 0; si < subjects_.length; ++si) {\n        var node_ = graphObject[subjects_[si]];\n        // only add full subjects to top-level\n        if(!_isSubjectReference(node_)) {\n          graph.push(node_);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  callback(null, result);\n};\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\nProcessor.prototype.toRDF = function(input, options) {\n  // create node map for default graph (and any named graphs)\n  var namer = new UniqueNamer('_:b');\n  var nodeMap = {'@default': {}};\n  _createNodeMap(input, nodeMap, '@default', namer);\n\n  var dataset = {};\n  var graphNames = Object.keys(nodeMap).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    // skip relative IRIs\n    if(graphName === '@default' || _isAbsoluteIri(graphName)) {\n      dataset[graphName] = _graphToRDF(nodeMap[graphName], namer, options);\n    }\n  }\n  return dataset;\n};\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n *\n * @return the new active context.\n */\nProcessor.prototype.processContext = function(activeCtx, localCtx, options) {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\n  // no contexts in array, clone existing context\n  if(ctxs.length === 0) {\n    return activeCtx.clone();\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  var rval = activeCtx;\n  for(var i = 0; i < ctxs.length; ++i) {\n    var ctx = ctxs[i];\n\n    // reset to initial context\n    if(ctx === null) {\n      rval = activeCtx = _getInitialContext(options);\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // get context from cache if available\n    if(jsonld.cache.activeCtx) {\n      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);\n      if(cached) {\n        rval = activeCtx = cached;\n        continue;\n      }\n    }\n\n    // update active context and clone new one before updating\n    activeCtx = rval;\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    var defined = {};\n\n    // handle @base\n    if('@base' in ctx) {\n      var base = ctx['@base'];\n\n      // clear base\n      if(base === null) {\n        base = null;\n      } else if(!_isString(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      } else if(base !== '' && !_isAbsoluteIri(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI or the empty string.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      if(base !== null) {\n        base = jsonld.url.parse(base || '');\n      }\n      rval['@base'] = base;\n      defined['@base'] = true;\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      var value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = value;\n      }\n      defined['@vocab'] = true;\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      var value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined['@language'] = true;\n    }\n\n    // process all other keys\n    for(var key in ctx) {\n      _createTermDefinition(rval, ctx, key, defined);\n    }\n\n    // cache result\n    if(jsonld.cache.activeCtx) {\n      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expands a language map.\n *\n * @param languageMap the language map to expand.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(languageMap) {\n  var rval = [];\n  var keys = Object.keys(languageMap).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(var vi = 0; vi < val.length; ++vi) {\n      var item = val[vi];\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap: languageMap});\n      }\n      rval.push({\n        '@value': item,\n        '@language': key.toLowerCase()\n      });\n    }\n  }\n  return rval;\n}\n\n/**\n * Labels the blank nodes in the given value using the given UniqueNamer.\n *\n * @param namer the UniqueNamer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(namer, element) {\n  if(_isArray(element)) {\n    for(var i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(namer, element[i]);\n    }\n  } else if(_isList(element)) {\n    element['@list'] = _labelBlankNodes(namer, element['@list']);\n  } else if(_isObject(element)) {\n    // rename blank node\n    if(_isBlankNode(element)) {\n      element['@id'] = namer.getName(element['@id']);\n    }\n\n    // recursively apply to all keys\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(namer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n *\n * @return the expanded value.\n */\nfunction _expandValue(activeCtx, activeProperty, value) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true});\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true});\n  }\n\n  // get type definition from context\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {\n    return {'@id': _expandIri(activeCtx, value, {base: true})};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab') {\n    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  var rval = {};\n\n  if(type !== null) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Creates an array of RDF triples for the given graph.\n *\n * @param graph the graph to create RDF triples for.\n * @param namer a UniqueNamer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(graph, namer, options) {\n  var rval = [];\n\n  var ids = Object.keys(graph).sort();\n  for(var i = 0; i < ids.length; ++i) {\n    var id = ids[i];\n    var node = graph[id];\n    var properties = Object.keys(node).sort();\n    for(var pi = 0; pi < properties.length; ++pi) {\n      var property = properties[pi];\n      var items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(_isKeyword(property)) {\n        continue;\n      }\n\n      for(var ii = 0; ii < items.length; ++ii) {\n        var item = items[ii];\n\n        // RDF subject\n        var subject = {};\n        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        subject.value = id;\n\n        // skip relative IRI subjects\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        var predicate = {};\n        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        predicate.value = property;\n\n        // skip relative IRI predicates\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert @list to triples\n        if(_isList(item)) {\n          _listToRDF(item['@list'], namer, subject, predicate, rval);\n        } else {\n          // convert value or node object to triple\n          var object = _objectToRDF(item);\n          // skip null objects (they are relative IRIs)\n          if(object) {\n            rval.push({subject: subject, predicate: predicate, object: object});\n          }\n        }\n      }\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF triples\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param namer a UniqueNamer for assigning blank node names.\n * @param subject the subject for the head of the list.\n * @param predicate the predicate for the head of the list.\n * @param triples the array of triples to append to.\n */\nfunction _listToRDF(list, namer, subject, predicate, triples) {\n  var first = {type: 'IRI', value: RDF_FIRST};\n  var rest = {type: 'IRI', value: RDF_REST};\n  var nil = {type: 'IRI', value: RDF_NIL};\n\n  for(var i = 0; i < list.length; ++i) {\n    var item = list[i];\n\n    var blankNode = {type: 'blank node', value: namer.getName()};\n    triples.push({subject: subject, predicate: predicate, object: blankNode});\n\n    subject = blankNode;\n    predicate = first;\n    var object = _objectToRDF(item);\n\n    // skip null objects (they are relative IRIs)\n    if(object) {\n      triples.push({subject: subject, predicate: predicate, object: object});\n    }\n\n    predicate = rest;\n  }\n\n  triples.push({subject: subject, predicate: predicate, object: nil});\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n * node object to an RDF resource.\n *\n * @param item the JSON-LD value or node object.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item) {\n  var object = {};\n\n  // convert value object to RDF\n  if(_isValue(item)) {\n    object.type = 'literal';\n    var value = item['@value'];\n    var datatype = item['@type'] || null;\n\n    // convert to XSD datatypes as appropriate\n    if(_isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype = datatype || XSD_BOOLEAN;\n    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!_isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype = datatype || XSD_DOUBLE;\n    } else if(_isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype = datatype || XSD_INTEGER;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype = datatype || XSD_STRING;\n    }\n  } else {\n    // convert string/node object to RDF\n    var id = _isObject(item) ? item['@id'] : item;\n    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n    object.value = id;\n  }\n\n  // skip relative IRIs\n  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes) {\n  // convert IRI/blank node object to JSON-LD\n  if(o.type === 'IRI' || o.type === 'blank node') {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  var rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    var type = o.datatype;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(_isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          var i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]\n        .indexOf(type) === -1) {\n        rval['@type'] = type;\n      }\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareRDFTriples(t1, t2) {\n  var attrs = ['subject', 'predicate', 'object'];\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {\n      return false;\n    }\n  }\n  if(t1.object.language !== t2.object.language) {\n    return false;\n  }\n  if(t1.object.datatype !== t2.object.datatype) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Hashes all of the quads about a blank node.\n *\n * @param id the ID of the bnode to hash quads for.\n * @param bnodes the mapping of bnodes to quads.\n *\n * @return the new hash.\n */\nfunction _hashQuads(id, bnodes) {\n  // return cached hash\n  if('hash' in bnodes[id]) {\n    return bnodes[id].hash;\n  }\n\n  // serialize all of bnode's quads\n  var quads = bnodes[id].quads;\n  var nquads = [];\n  for(var i = 0; i < quads.length; ++i) {\n    nquads.push(_toNQuad(\n      quads[i], quads[i].name ? quads[i].name.value : null, id));\n  }\n  // sort serialized quads\n  nquads.sort();\n  // return hashed quads\n  var hash = bnodes[id].hash = sha1.hash(nquads);\n  return hash;\n}\n\n/**\n * Produces a hash for the paths of adjacent bnodes for a bnode,\n * incorporating all information about its subgraph of bnodes. This\n * method will recursively pick adjacent bnode permutations that produce the\n * lexicographically-least 'path' serializations.\n *\n * @param id the ID of the bnode to hash paths for.\n * @param bnodes the map of bnode quads.\n * @param namer the canonical bnode namer.\n * @param pathNamer the namer used to assign names to adjacent bnodes.\n * @param callback(err, result) called once the operation completes.\n */\nfunction _hashPaths(id, bnodes, namer, pathNamer, callback) {\n  // create SHA-1 digest\n  var md = sha1.create();\n\n  // group adjacent bnodes by hash, keep properties and references separate\n  var groups = {};\n  var groupHashes;\n  var quads = bnodes[id].quads;\n  jsonld.setImmediate(function() {groupNodes(0);});\n  function groupNodes(i) {\n    if(i === quads.length) {\n      // done, hash groups\n      groupHashes = Object.keys(groups).sort();\n      return hashGroup(0);\n    }\n\n    // get adjacent bnode\n    var quad = quads[i];\n    var bnode = _getAdjacentBlankNodeName(quad.subject, id);\n    var direction = null;\n    if(bnode !== null) {\n      // normal property\n      direction = 'p';\n    } else {\n      bnode = _getAdjacentBlankNodeName(quad.object, id);\n      if(bnode !== null) {\n        // reverse property\n        direction = 'r';\n      }\n    }\n\n    if(bnode !== null) {\n      // get bnode name (try canonical, path, then hash)\n      var name;\n      if(namer.isNamed(bnode)) {\n        name = namer.getName(bnode);\n      } else if(pathNamer.isNamed(bnode)) {\n        name = pathNamer.getName(bnode);\n      } else {\n        name = _hashQuads(bnode, bnodes);\n      }\n\n      // hash direction, property, and bnode name/hash\n      var md = sha1.create();\n      md.update(direction);\n      md.update(quad.predicate.value);\n      md.update(name);\n      var groupHash = md.digest();\n\n      // add bnode to hash group\n      if(groupHash in groups) {\n        groups[groupHash].push(bnode);\n      } else {\n        groups[groupHash] = [bnode];\n      }\n    }\n\n    jsonld.setImmediate(function() {groupNodes(i + 1);});\n  }\n\n  // hashes a group of adjacent bnodes\n  function hashGroup(i) {\n    if(i === groupHashes.length) {\n      // done, return SHA-1 digest and path namer\n      return callback(null, {hash: md.digest(), pathNamer: pathNamer});\n    }\n\n    // digest group hash\n    var groupHash = groupHashes[i];\n    md.update(groupHash);\n\n    // choose a path and namer from the permutations\n    var chosenPath = null;\n    var chosenNamer = null;\n    var permutator = new Permutator(groups[groupHash]);\n    jsonld.setImmediate(function() {permutate();});\n    function permutate() {\n      var permutation = permutator.next();\n      var pathNamerCopy = pathNamer.clone();\n\n      // build adjacent path\n      var path = '';\n      var recurse = [];\n      for(var n in permutation) {\n        var bnode = permutation[n];\n\n        // use canonical name if available\n        if(namer.isNamed(bnode)) {\n          path += namer.getName(bnode);\n        } else {\n          // recurse if bnode isn't named in the path yet\n          if(!pathNamerCopy.isNamed(bnode)) {\n            recurse.push(bnode);\n          }\n          path += pathNamerCopy.getName(bnode);\n        }\n\n        // skip permutation if path is already >= chosen path\n        if(chosenPath !== null && path.length >= chosenPath.length &&\n          path > chosenPath) {\n          return nextPermutation(true);\n        }\n      }\n\n      // does the next recursion\n      nextRecursion(0);\n      function nextRecursion(n) {\n        if(n === recurse.length) {\n          // done, do next permutation\n          return nextPermutation(false);\n        }\n\n        // do recursion\n        var bnode = recurse[n];\n        _hashPaths(bnode, bnodes, namer, pathNamerCopy,\n          function(err, result) {\n            if(err) {\n              return callback(err);\n            }\n            path += pathNamerCopy.getName(bnode) + '<' + result.hash + '>';\n            pathNamerCopy = result.pathNamer;\n\n            // skip permutation if path is already >= chosen path\n            if(chosenPath !== null && path.length >= chosenPath.length &&\n              path > chosenPath) {\n              return nextPermutation(true);\n            }\n\n            // do next recursion\n            nextRecursion(n + 1);\n          });\n      }\n\n      // stores the results of this permutation and runs the next\n      function nextPermutation(skipped) {\n        if(!skipped && (chosenPath === null || path < chosenPath)) {\n          chosenPath = path;\n          chosenNamer = pathNamerCopy;\n        }\n\n        // do next permutation\n        if(permutator.hasNext()) {\n          jsonld.setImmediate(function() {permutate();});\n        } else {\n          // digest chosen path and update namer\n          md.update(chosenPath);\n          pathNamer = chosenNamer;\n\n          // hash the next group\n          hashGroup(i + 1);\n        }\n      }\n    }\n  }\n}\n\n/**\n * A helper function that gets the blank node name from an RDF quad node\n * (subject or object). If the node is a blank node and its value\n * does not match the given blank node ID, it will be returned.\n *\n * @param node the RDF quad node.\n * @param id the ID of the blank node to look next to.\n *\n * @return the adjacent blank node name or null if none was found.\n */\nfunction _getAdjacentBlankNodeName(node, id) {\n  return (node.type === 'blank node' && node.value !== id ? node.value : null);\n}\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param namer the blank node namer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\nfunction _createNodeMap(input, graphs, graph, namer, name, list) {\n  // recurse through array\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _createNodeMap(input[i], graphs, graph, namer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!_isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(_isValue(input)) {\n    if('@type' in input) {\n      var type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = namer.getName(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    var types = input['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      var type = types[i];\n      if(type.indexOf('_:') === 0) {\n        namer.getName(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(_isUndefined(name)) {\n    name = _isBlankNode(input) ? namer.getName(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  var subjects = graphs[graph];\n  var subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  var properties = Object.keys(input).sort();\n  for(var pi = 0; pi < properties.length; ++pi) {\n    var property = properties[pi];\n\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      var referencedNode = {'@id': name};\n      var reverseMap = input['@reverse'];\n      for(var reverseProperty in reverseMap) {\n        var items = reverseMap[reverseProperty];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          var itemName = item['@id'];\n          if(_isBlankNode(item)) {\n            itemName = namer.getName(itemName);\n          }\n          _createNodeMap(item, graphs, graph, namer, itemName);\n          jsonld.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      var g = (graph === '@merged') ? graph : name;\n      _createNodeMap(input[property], graphs, g, namer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && _isKeyword(property)) {\n      if(property === '@index' && '@index' in subject) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject: subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    var objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = namer.getName(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      jsonld.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(var oi = 0; oi < objects.length; ++oi) {\n      var o = objects[oi];\n\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? namer.getName(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(_isSubject(o) || _isSubjectReference(o)) {\n        // rename blank node @id\n        var id = _isBlankNode(o) ? namer.getName(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        jsonld.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        _createNodeMap(o, graphs, graph, namer, id);\n      } else if(_isList(o)) {\n        // handle @list\n        var _list = [];\n        _createNodeMap(o['@list'], graphs, graph, namer, name, _list);\n        o = {'@list': _list};\n        jsonld.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        _createNodeMap(o, graphs, graph, namer, name);\n        jsonld.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n}\n\nfunction _mergeNodeMaps(graphs) {\n  // add all non-default graphs to default graph\n  var defaultGraph = graphs['@default'];\n  var graphNames = Object.keys(graphs).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    if(graphName === '@default') {\n      continue;\n    }\n    var nodeMap = graphs[graphName];\n    var subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    var graph = subject['@graph'];\n    var ids = Object.keys(nodeMap).sort();\n    for(var ii = 0; ii < ids.length; ++ii) {\n      var node = nodeMap[ids[ii]];\n      // only add full subjects\n      if(!_isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n}\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\nfunction _frame(state, subjects, frame, parent, property) {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  var options = state.options;\n  var flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // filter out subjects that match the frame\n  var matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  var ids = Object.keys(matches).sort();\n  for(var idx in ids) {\n    var id = ids[idx];\n    var subject = matches[id];\n\n    if(flags.embed === '@link' && id in state.link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, state.link[id]);\n      continue;\n    }\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {};\n    }\n\n    // start output for subject\n    var output = {};\n    output['@id'] = id;\n    state.link[id] = output;\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(flags.embed === '@never' ||\n      _createsCircularReference(subject, state.subjectStack)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds) {\n        _removeEmbed(state, id);\n      }\n      state.uniqueEmbeds[id] = {parent: parent, property: property};\n    }\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push(subject);\n\n    // iterate over subject properties\n    var props = Object.keys(subject).sort();\n    for(var i = 0; i < props.length; i++) {\n      var prop = props[i];\n\n      // copy keywords to output\n      if(_isKeyword(prop)) {\n        output[prop] = _clone(subject[prop]);\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      var objects = subject[prop];\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var o = objects[oi];\n\n        // recurse into list\n        if(_isList(o)) {\n          // add empty list\n          var list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          var src = o['@list'];\n          for(var n in src) {\n            o = src[n];\n            if(_isSubjectReference(o)) {\n              var subframe = (prop in frame ?\n                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n              // recurse into subject reference\n              _frame(state, [o['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', _clone(o));\n            }\n          }\n          continue;\n        }\n\n        if(_isSubjectReference(o)) {\n          // recurse into subject reference\n          var subframe = (prop in frame ?\n            frame[prop] : _createImplicitFrame(flags));\n          _frame(state, [o['@id']], subframe, output, prop);\n        } else {\n          // include other values automatically\n          _addFrameOutput(output, prop, _clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    var props = Object.keys(frame).sort();\n    for(var i = 0; i < props.length; ++i) {\n      var prop = props[i];\n\n      // skip keywords\n      if(_isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      var next = frame[prop][0];\n      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        var preserve = '@null';\n        if('@default' in next) {\n          preserve = _clone(next['@default']);\n        }\n        if(!_isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n}\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  var frame = {};\n  for(var key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, subjectStack) {\n  for(var i = subjectStack.length - 1; i >= 0; --i) {\n    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  var flag = '@' + name;\n  var rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@last';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n      rval = '@last';\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame: frame});\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  var rval = {};\n  for(var i = 0; i < subjects.length; ++i) {\n    var id = subjects[i];\n    var subject = state.subjects[id];\n    if(_filterSubject(subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(subject, frame, flags) {\n  // check @type (object value means 'any' type, fall through to ducktyping)\n  if('@type' in frame &&\n    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {\n    var types = frame['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      // any matching @type is a match\n      if(jsonld.hasValue(subject, '@type', types[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // check ducktype\n  var wildcard = true;\n  var matchesSome = false;\n  for(var key in frame) {\n    if(_isKeyword(key)) {\n      // skip non-@id and non-@type\n      if(key !== '@id' && key !== '@type') {\n        continue;\n      }\n      wildcard = false;\n\n      // check @id for a specific @id value\n      if(key === '@id' && _isString(frame[key])) {\n        if(subject[key] !== frame[key]) {\n          return false;\n        }\n        matchesSome = true;\n        continue;\n      }\n    }\n\n    wildcard = false;\n\n    if(key in subject) {\n      // frame[key] === [] means do not match if property is present\n      if(_isArray(frame[key]) && frame[key].length === 0 &&\n        subject[key] !== undefined) {\n        return false;\n      }\n      matchesSome = true;\n      continue;\n    }\n\n    // all properties must match to be a duck unless a @default is specified\n    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&\n      '@default' in frame[key][0]);\n    if(flags.requireAll && !hasDefault) {\n      return false;\n    }\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  var embeds = state.uniqueEmbeds;\n  var embed = embeds[id];\n  var parent = embed.parent;\n  var property = embed.property;\n\n  // create reference to replace embed\n  var subject = {'@id': id};\n\n  // remove existing embed\n  if(_isArray(parent)) {\n    // replace subject with reference\n    for(var i = 0; i < parent.length; ++i) {\n      if(jsonld.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    var useArray = _isArray(parent[property]);\n    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  var removeDependents = function(id) {\n    // get embed keys as a separate array to enable deleting keys in map\n    var ids = Object.keys(embeds);\n    for(var i = 0; i < ids.length; ++i) {\n      var next = ids[i];\n      if(next in embeds && _isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(_isObject(parent)) {\n    jsonld.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Removes the @preserve keywords as the last step of the framing algorithm.\n *\n * @param ctx the active context used to compact the input.\n * @param input the framed, compacted output.\n * @param options the compaction options used.\n *\n * @return the resulting output.\n */\nfunction _removePreserve(ctx, input, options) {\n  // recurse through arrays\n  if(_isArray(input)) {\n    var output = [];\n    for(var i = 0; i < input.length; ++i) {\n      var result = _removePreserve(ctx, input[i], options);\n      // drop nulls from arrays\n      if(result !== null) {\n        output.push(result);\n      }\n    }\n    input = output;\n  } else if(_isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      if(input['@preserve'] === '@null') {\n        return null;\n      }\n      return input['@preserve'];\n    }\n\n    // skip @values\n    if(_isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(_isList(input)) {\n      input['@list'] = _removePreserve(ctx, input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    var idAlias = _compactIri(ctx, '@id');\n    if(idAlias in input) {\n      var id = input[idAlias];\n      if(id in options.link) {\n        var idx = options.link[id].indexOf(input);\n        if(idx === -1) {\n          // prevent circular visitation\n          options.link[id].push(input);\n        } else {\n          // already visited\n          return options.link[id][idx];\n        }\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(var prop in input) {\n      var result = _removePreserve(ctx, input[prop], options);\n      var container = jsonld.getContextValue(ctx, prop, '@container');\n      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n        container === null) {\n        result = result[0];\n      }\n      input[prop] = result;\n    }\n  }\n  return input;\n}\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a == b.\n */\nfunction _compareShortestLeast(a, b) {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n}\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  var prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isSubjectReference(value)) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});\n    if(term in activeCtx.mappings &&\n      activeCtx.mappings[term] &&\n      activeCtx.mappings[term]['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n  }\n  prefs.push('@none');\n\n  var containerMap = activeCtx.inverse[iri];\n  for(var ci = 0; ci < containers.length; ++ci) {\n    // if container not available in the map, continue\n    var container = containers[ci];\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(var pi = 0; pi < prefs.length; ++pi) {\n      // if type/language option not available in the map, continue\n      var pref = prefs[pi];\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\nfunction _compactIri(activeCtx, iri, value, relativeTo, reverse) {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // default value and parent to null\n  if(_isUndefined(value)) {\n    value = null;\n  }\n  // default reverse to false\n  if(_isUndefined(reverse)) {\n    reverse = false;\n  }\n  relativeTo = relativeTo || {};\n\n  // if term is a keyword, default vocab to true\n  if(_isKeyword(iri)) {\n    relativeTo.vocab = true;\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in activeCtx.getInverse()) {\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    var containers = [];\n    if(_isObject(value) && '@index' in value) {\n      containers.push('@index');\n    }\n\n    // defaults for term selection based on type/language\n    var typeOrLanguage = '@language';\n    var typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      var list = value['@list'];\n      var commonLanguage = (list.length === 0) ? defaultLanguage : null;\n      var commonType = null;\n      for(var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        var itemLanguage = '@none';\n        var itemType = '@none';\n        if(_isValue(item)) {\n          if('@language' in item) {\n            itemLanguage = item['@language'];\n          } else if('@type' in item) {\n            itemType = item['@type'];\n          } else {\n            // plain literal\n            itemLanguage = '@null';\n          }\n        } else {\n          itemType = '@id';\n        }\n        if(commonLanguage === null) {\n          commonLanguage = itemLanguage;\n        } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n          commonLanguage = '@none';\n        }\n        if(commonType === null) {\n          commonType = itemType;\n        } else if(itemType !== commonType) {\n          commonType = '@none';\n        }\n        // there are different languages and types in the list, so choose\n        // the most generic term, no need to keep iterating the list\n        if(commonLanguage === '@none' && commonType === '@none') {\n          break;\n        }\n      }\n      commonLanguage = commonLanguage || '@none';\n      commonType = commonType || '@none';\n      if(commonType !== '@none') {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = commonType;\n      } else {\n        typeOrLanguageValue = commonLanguage;\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language');\n          typeOrLanguageValue = value['@language'];\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n    var term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      var vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        var suffix = iri.substr(vocab.length);\n        if(!(suffix in activeCtx.mappings)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  var choice = null;\n  for(var term in activeCtx.mappings) {\n    // skip terms with colons, they can't be prefixes\n    if(term.indexOf(':') !== -1) {\n      continue;\n    }\n    // skip entries with @ids that are not partial matches\n    var definition = activeCtx.mappings[term];\n    if(!definition ||\n      definition['@id'] === iri || iri.indexOf(definition['@id']) !== 0) {\n      continue;\n    }\n\n    // a CURIE is usable if:\n    // 1. it has no mapping, OR\n    // 2. value is null, which means we're not compacting an @value, AND\n    //   the mapping matches the IRI)\n    var curie = term + ':' + iri.substr(definition['@id'].length);\n    var isUsableCurie = (!(curie in activeCtx.mappings) ||\n      (value === null && activeCtx.mappings[curie] &&\n      activeCtx.mappings[curie]['@id'] === iri));\n\n    // select curie if it is shorter or the same length but lexicographically\n    // less than the current choice\n    if(isUsableCurie && (choice === null ||\n      _compareShortestLeast(curie, choice) < 0)) {\n      choice = curie;\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    return _removeBase(activeCtx['@base'], iri);\n  }\n\n  // return IRI as is\n  return iri;\n}\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n *\n * @return the compaction result.\n */\nfunction _compactValue(activeCtx, activeProperty, value) {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n\n    // whether or not the value has an @index that must be preserved\n    var preserveIndex = (('@index' in value) &&\n      container !== '@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex) {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type || value['@language'] === language) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    var keyCount = Object.keys(value).length;\n    var isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && ('@index' in value) && !preserveIndex));\n    var hasDefaultLanguage = ('@language' in activeCtx);\n    var isValueString = _isString(value['@value']);\n    var hasNullMapping = (activeCtx.mappings[activeProperty] &&\n      activeCtx.mappings[activeProperty]['@language'] === null);\n    if(isValueOnlyKey &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    var rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[_compactIri(activeCtx, '@index')] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[_compactIri(activeCtx, '@type')] = _compactIri(\n        activeCtx, value['@type'], null, {vocab: true});\n    } else if('@language' in value) {\n      // alias @language\n      rval[_compactIri(activeCtx, '@language')] = value['@language'];\n    }\n\n    // alias @value\n    rval[_compactIri(activeCtx, '@value')] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n  var compacted = _compactIri(\n    activeCtx, value['@id'], null, {vocab: type === '@vocab'});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  var rval = {};\n  rval[_compactIri(activeCtx, '@id')] = compacted;\n  return rval;\n}\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n */\nfunction _createTermDefinition(activeCtx, localCtx, term, defined) {\n  if(term in defined) {\n    // term already defined\n    if(defined[term]) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term: term});\n  }\n\n  // now defining term\n  defined[term] = false;\n\n  if(_isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term: term});\n  }\n\n  if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // remove old mapping\n  if(activeCtx.mappings[term]) {\n    delete activeCtx.mappings[term];\n  }\n\n  // get context term value\n  var value = localCtx[term];\n\n  // clear context entry\n  if(value === null || (_isObject(value) && value['@id'] === null)) {\n    activeCtx.mappings[term] = null;\n    defined[term] = true;\n    return;\n  }\n\n  // convert short-hand value to object w/@id\n  if(_isString(value)) {\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context property values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  var mapping = activeCtx.mappings[term] = {};\n  mapping.reverse = false;\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    var reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    // expand and add @id mapping\n    var id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    var id = value['@id'];\n    if(!_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n      mapping['@id'] = id;\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    var colon = term.indexOf(':');\n    if(colon !== -1) {\n      var prefix = term.substr(0, colon);\n      if(prefix in localCtx) {\n        // define parent prefix\n        _createTermDefinition(activeCtx, localCtx, prefix, defined);\n      }\n\n      if(activeCtx.mappings[prefix]) {\n        // set @id based on prefix parent\n        var suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term: term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // IRI mapping now defined\n  defined[term] = true;\n\n  if('@type' in value) {\n    var type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    var container = value['@container'];\n    if(container !== '@list' && container !== '@set' &&\n      container !== '@index' && container !== '@language') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: @list, @set, @index, or @language.',\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n    if(mapping.reverse && container !== '@index' && container !== '@set' &&\n      container !== null) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    var language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // disallow aliasing @context and @preserve\n  var id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n}\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined) {\n  // already expanded\n  if(value === null || _isKeyword(value)) {\n    return value;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && value in localCtx && defined[value] !== true) {\n    _createTermDefinition(activeCtx, localCtx, value, defined);\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    var mapping = activeCtx.mappings[value];\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  var colon = value.indexOf(':');\n  if(colon !== -1) {\n    var prefix = value.substr(0, colon);\n    var suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && prefix in localCtx) {\n      _createTermDefinition(activeCtx, localCtx, prefix, defined);\n    }\n\n    // use mapping if prefix is defined\n    var mapping = activeCtx.mappings[prefix];\n    if(mapping) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    return value;\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  var rval = value;\n  if(relativeTo.base) {\n    rval = _prependBase(activeCtx['@base'], rval);\n  }\n\n  return rval;\n}\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\nfunction _prependBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(iri.indexOf(':') !== -1) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // parse given IRI\n  var rel = jsonld.url.parse(iri);\n\n  // per RFC3986 5.2.2\n  var transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        var path = base.path;\n\n        // append relative path to the end of the last directory from base\n        if(rel.path !== '') {\n          path = path.substr(0, path.lastIndexOf('/') + 1);\n          if(path.length > 0 && path.substr(-1) !== '/') {\n            path += '/';\n          }\n          path += rel.path;\n        }\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  // remove slashes and dots in path\n  transform.path = _removeDotSegments(transform.path, !!transform.authority);\n\n  // construct URL\n  var rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\nfunction _removeBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // establish base root\n  var root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  var rel = jsonld.url.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  var baseSegments = base.normalizedPath.split('/');\n  var iriSegments = rel.normalizedPath.split('/');\n  var last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  var rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(var i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\nfunction _getInitialContext(options) {\n  var base = jsonld.url.parse(options.base || '');\n  return {\n    '@base': base,\n    mappings: {},\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext\n  };\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    var activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    var inverse = activeCtx.inverse = {};\n\n    // handle default language\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    var mappings = activeCtx.mappings;\n    var terms = Object.keys(mappings).sort(_compareShortestLeast);\n    for(var i = 0; i < terms.length; ++i) {\n      var term = terms[i];\n      var mapping = mappings[term];\n      if(mapping === null) {\n        continue;\n      }\n\n      var container = mapping['@container'] || '@none';\n\n      // iterate over every IRI in the mapping\n      var ids = mapping['@id'];\n      if(!_isArray(ids)) {\n        ids = [ids];\n      }\n      for(var ii = 0; ii < ids.length; ++ii) {\n        var iri = ids[ii];\n        var entry = inverse[iri];\n\n        // initialize entry\n        if(!entry) {\n          inverse[iri] = entry = {};\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {}\n          };\n        }\n        entry = entry[container];\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping) {\n          // term is preferred for values using specific language\n          var language = mapping['@language'] || '@null';\n          _addPreferredTerm(mapping, term, entry['@language'], language);\n        } else {\n          // term is preferred for values w/default language or no type and\n          // no language\n          // add an entry for the default language\n          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);\n\n          // add entries for no type and no language\n          _addPreferredTerm(mapping, term, entry['@type'], '@none');\n          _addPreferredTerm(mapping, term, entry['@language'], '@none');\n        }\n      }\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param mapping the term mapping.\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {\n    if(!(typeOrLanguageValue in entry)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    var child = {};\n    child['@base'] = this['@base'];\n    child.mappings = _clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n}\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\nfunction _isKeyword(v) {\n  if(!_isString(v)) {\n    return false;\n  }\n  switch(v) {\n  case '@base':\n  case '@context':\n  case '@container':\n  case '@default':\n  case '@embed':\n  case '@explicit':\n  case '@graph':\n  case '@id':\n  case '@index':\n  case '@language':\n  case '@list':\n  case '@omitDefault':\n  case '@preserve':\n  case '@requireAll':\n  case '@reverse':\n  case '@set':\n  case '@type':\n  case '@value':\n  case '@vocab':\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\nfunction _isObject(v) {\n  return (Object.prototype.toString.call(v) === '[object Object]');\n}\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\nfunction _isEmptyObject(v) {\n  return _isObject(v) && Object.keys(v).length === 0;\n}\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\nfunction _isArray(v) {\n  return Array.isArray(v);\n}\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\nfunction _validateTypeValue(v) {\n  // can be a string or an empty object\n  if(_isString(v) || _isEmptyObject(v)) {\n    return;\n  }\n\n  // must be an array\n  var isValid = false;\n  if(_isArray(v)) {\n    // must contain only strings\n    isValid = true;\n    for(var i = 0; i < v.length; ++i) {\n      if(!(_isString(v[i]))) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  if(!isValid) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n      'strings, or an empty object.', 'jsonld.SyntaxError',\n      {code: 'invalid type value', value: v});\n  }\n}\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\nfunction _isString(v) {\n  return (typeof v === 'string' ||\n    Object.prototype.toString.call(v) === '[object String]');\n}\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\nfunction _isNumber(v) {\n  return (typeof v === 'number' ||\n    Object.prototype.toString.call(v) === '[object Number]');\n}\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\nfunction _isDouble(v) {\n  return _isNumber(v) && String(v).indexOf('.') !== -1;\n}\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\nfunction _isNumeric(v) {\n  return !isNaN(parseFloat(v)) && isFinite(v);\n}\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\nfunction _isBoolean(v) {\n  return (typeof v === 'boolean' ||\n    Object.prototype.toString.call(v) === '[object Boolean]');\n}\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\nfunction _isUndefined(v) {\n  return (typeof v === 'undefined');\n}\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\nfunction _isSubject(v) {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  var rval = false;\n  if(_isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    var keyCount = Object.keys(v).length;\n    rval = (keyCount > 1 || !('@id' in v));\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\nfunction _isSubjectReference(v) {\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n}\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\nfunction _isValue(v) {\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  return _isObject(v) && ('@value' in v);\n}\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\nfunction _isList(v) {\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  return _isObject(v) && ('@list' in v);\n}\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\nfunction _isBlankNode(v) {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  var rval = false;\n  if(_isObject(v)) {\n    if('@id' in v) {\n      rval = (v['@id'].indexOf('_:') === 0);\n    } else {\n      rval = (Object.keys(v).length === 0 ||\n        !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is an absolute IRI, false if not.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\nfunction _isAbsoluteIri(v) {\n  return _isString(v) && v.indexOf(':') !== -1;\n}\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\nfunction _clone(value) {\n  if(value && typeof value === 'object') {\n    var rval;\n    if(_isArray(value)) {\n      rval = [];\n      for(var i = 0; i < value.length; ++i) {\n        rval[i] = _clone(value[i]);\n      }\n    } else if(_isObject(value)) {\n      rval = {};\n      for(var key in value) {\n        rval[key] = _clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n}\n\n/**\n * Finds all @context URLs in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param urls a map of URLs (url => false/@contexts).\n * @param replace true to replace the URLs in the given input with the\n *           @contexts from the urls map, false not to.\n * @param base the base IRI to use to resolve relative IRIs.\n *\n * @return true if new URLs to retrieve were found, false if not.\n */\nfunction _findContextUrls(input, urls, replace, base) {\n  var count = Object.keys(urls).length;\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _findContextUrls(input[i], urls, replace, base);\n    }\n    return (count < Object.keys(urls).length);\n  } else if(_isObject(input)) {\n    for(var key in input) {\n      if(key !== '@context') {\n        _findContextUrls(input[key], urls, replace, base);\n        continue;\n      }\n\n      // get @context\n      var ctx = input[key];\n\n      // array @context\n      if(_isArray(ctx)) {\n        var length = ctx.length;\n        for(var i = 0; i < length; ++i) {\n          var _ctx = ctx[i];\n          if(_isString(_ctx)) {\n            _ctx = _prependBase(base, _ctx);\n            // replace w/@context if requested\n            if(replace) {\n              _ctx = urls[_ctx];\n              if(_isArray(_ctx)) {\n                // add flattened context\n                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));\n                i += _ctx.length - 1;\n                length = ctx.length;\n              } else {\n                ctx[i] = _ctx;\n              }\n            } else if(!(_ctx in urls)) {\n              // @context URL found\n              urls[_ctx] = false;\n            }\n          }\n        }\n      } else if(_isString(ctx)) {\n        // string @context\n        ctx = _prependBase(base, ctx);\n        // replace w/@context if requested\n        if(replace) {\n          input[key] = urls[ctx];\n        } else if(!(ctx in urls)) {\n          // @context URL found\n          urls[ctx] = false;\n        }\n      }\n    }\n    return (count < Object.keys(urls).length);\n  }\n  return false;\n}\n\n/**\n * Retrieves external @context URLs using the given document loader. Every\n * instance of @context in the input that refers to a URL will be replaced\n * with the JSON @context found at that URL.\n *\n * @param input the JSON-LD input with possible contexts.\n * @param options the options to use:\n *          documentLoader(url, callback(err, remoteDoc)) the document loader.\n * @param callback(err, input) called once the operation completes.\n */\nfunction _retrieveContextUrls(input, options, callback) {\n  // if any error occurs during URL resolution, quit\n  var error = null;\n\n  // recursive document loader\n  var documentLoader = options.documentLoader;\n  var retrieve = function(input, cycles, documentLoader, base, callback) {\n    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {\n      error = new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n      return callback(error);\n    }\n\n    // for tracking the URLs to retrieve\n    var urls = {};\n\n    // finished will be called once the URL queue is empty\n    var finished = function() {\n      // replace all URLs in the input\n      _findContextUrls(input, urls, true, base);\n      callback(null, input);\n    };\n\n    // find all URLs in the given input\n    if(!_findContextUrls(input, urls, false, base)) {\n      // no new URLs in input\n      finished();\n    }\n\n    // queue all unretrieved URLs\n    var queue = [];\n    for(var url in urls) {\n      if(urls[url] === false) {\n        queue.push(url);\n      }\n    }\n\n    // retrieve URLs in queue\n    var count = queue.length;\n    for(var i = 0; i < queue.length; ++i) {\n      (function(url) {\n        // check for context URL cycle\n        if(url in cycles) {\n          error = new JsonLdError(\n            'Cyclical @context URLs detected.',\n            'jsonld.ContextUrlError',\n            {code: 'recursive context inclusion', url: url});\n          return callback(error);\n        }\n        var _cycles = _clone(cycles);\n        _cycles[url] = true;\n        var done = function(err, remoteDoc) {\n          // short-circuit if there was an error with another URL\n          if(error) {\n            return;\n          }\n\n          var ctx = remoteDoc ? remoteDoc.document : null;\n\n          // parse string context as JSON\n          if(!err && _isString(ctx)) {\n            try {\n              ctx = JSON.parse(ctx);\n            } catch(ex) {\n              err = ex;\n            }\n          }\n\n          // ensure ctx is an object\n          if(err) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n              'Possible causes are an inaccessible URL perhaps due to ' +\n              'a same-origin policy (ensure the server uses CORS if you are ' +\n              'using client-side JavaScript), too many redirects, a ' +\n              'non-JSON response, or more than one HTTP Link Header was ' +\n              'provided for a remote context.',\n              'jsonld.InvalidUrl',\n              {code: 'loading remote context failed', url: url, cause: err});\n          } else if(!_isObject(ctx)) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a JSON object. The ' +\n              'response was valid JSON, but it was not a JSON object.',\n              'jsonld.InvalidUrl',\n              {code: 'invalid remote context', url: url, cause: err});\n          }\n          if(err) {\n            error = err;\n            return callback(error);\n          }\n\n          // use empty context if no @context key is present\n          if(!('@context' in ctx)) {\n            ctx = {'@context': {}};\n          } else {\n            ctx = {'@context': ctx['@context']};\n          }\n\n          // append context URL to context if given\n          if(remoteDoc.contextUrl) {\n            if(!_isArray(ctx['@context'])) {\n              ctx['@context'] = [ctx['@context']];\n            }\n            ctx['@context'].push(remoteDoc.contextUrl);\n          }\n\n          // recurse\n          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {\n            if(err) {\n              return callback(err);\n            }\n            urls[url] = ctx['@context'];\n            count -= 1;\n            if(count === 0) {\n              finished();\n            }\n          });\n        };\n        var promise = documentLoader(url, done);\n        if(promise && 'then' in promise) {\n          promise.then(done.bind(null, null), done);\n        }\n      }(queue[i]));\n    }\n  };\n  retrieve(input, {}, documentLoader, options.base, callback);\n}\n\n// define js 1.8.5 Object.keys method if not present\nif(!Object.keys) {\n  Object.keys = function(o) {\n    if(o !== Object(o)) {\n      throw new TypeError('Object.keys called on non-object');\n    }\n    var rval = [];\n    for(var p in o) {\n      if(Object.prototype.hasOwnProperty.call(o, p)) {\n        rval.push(p);\n      }\n    }\n    return rval;\n  };\n}\n\n/**\n * Parses RDF in the form of N-Quads.\n *\n * @param input the N-Quads input to parse.\n *\n * @return an RDF dataset.\n */\nfunction _parseNQuads(input) {\n  // define partial regexes\n  var iri = '(?:<([^:]+:[^>]*)>)';\n  var bnode = '(_:(?:[A-Za-z0-9]+))';\n  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  var datatype = '(?:\\\\^\\\\^' + iri + ')';\n  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';\n  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  var ws = '[ \\\\t]+';\n  var wso = '[ \\\\t]*';\n  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  var empty = new RegExp('^' + wso + '$');\n\n  // define quad part regexes\n  var subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  var property = iri + ws;\n  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // full quad regex\n  var quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n\n  // build RDF dataset\n  var dataset = {};\n\n  // split N-Quad input into lines\n  var lines = input.split(eoln);\n  var lineNumber = 0;\n  for(var li = 0; li < lines.length; ++li) {\n    var line = lines[li];\n    lineNumber++;\n\n    // skip empty lines\n    if(empty.test(line)) {\n      continue;\n    }\n\n    // parse quad\n    var match = line.match(quad);\n    if(match === null) {\n      throw new JsonLdError(\n        'Error while parsing N-Quads; invalid quad.',\n        'jsonld.ParseError', {line: lineNumber});\n    }\n\n    // create RDF triple\n    var triple = {};\n\n    // get subject\n    if(!_isUndefined(match[1])) {\n      triple.subject = {type: 'IRI', value: match[1]};\n    } else {\n      triple.subject = {type: 'blank node', value: match[2]};\n    }\n\n    // get predicate\n    triple.predicate = {type: 'IRI', value: match[3]};\n\n    // get object\n    if(!_isUndefined(match[4])) {\n      triple.object = {type: 'IRI', value: match[4]};\n    } else if(!_isUndefined(match[5])) {\n      triple.object = {type: 'blank node', value: match[5]};\n    } else {\n      triple.object = {type: 'literal'};\n      if(!_isUndefined(match[7])) {\n        triple.object.datatype = match[7];\n      } else if(!_isUndefined(match[8])) {\n        triple.object.datatype = RDF_LANGSTRING;\n        triple.object.language = match[8];\n      } else {\n        triple.object.datatype = XSD_STRING;\n      }\n      var unescaped = match[6]\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\t/g, '\\t')\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\r/g, '\\r')\n        .replace(/\\\\\\\\/g, '\\\\');\n      triple.object.value = unescaped;\n    }\n\n    // get graph name ('@default' is used for the default graph)\n    var name = '@default';\n    if(!_isUndefined(match[9])) {\n      name = match[9];\n    } else if(!_isUndefined(match[10])) {\n      name = match[10];\n    }\n\n    // initialize graph in dataset\n    if(!(name in dataset)) {\n      dataset[name] = [triple];\n    } else {\n      // add triple if unique to its graph\n      var unique = true;\n      var triples = dataset[name];\n      for(var ti = 0; unique && ti < triples.length; ++ti) {\n        if(_compareRDFTriples(triples[ti], triple)) {\n          unique = false;\n        }\n      }\n      if(unique) {\n        triples.push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/nquads', _parseNQuads);\n\n/**\n * Converts an RDF dataset to N-Quads.\n *\n * @param dataset the RDF dataset to convert.\n *\n * @return the N-Quads string.\n */\nfunction _toNQuads(dataset) {\n  var quads = [];\n  for(var graphName in dataset) {\n    var triples = dataset[graphName];\n    for(var ti = 0; ti < triples.length; ++ti) {\n      var triple = triples[ti];\n      if(graphName === '@default') {\n        graphName = null;\n      }\n      quads.push(_toNQuad(triple, graphName));\n    }\n  }\n  quads.sort();\n  return quads.join('');\n}\n\n/**\n * Converts an RDF triple and graph name to an N-Quad string (a single quad).\n *\n * @param triple the RDF triple to convert.\n * @param graphName the name of the graph containing the triple, null for\n *          the default graph.\n * @param bnode the bnode the quad is mapped to (optional, for use\n *          during normalization only).\n *\n * @return the N-Quad string.\n */\nfunction _toNQuad(triple, graphName, bnode) {\n  var s = triple.subject;\n  var p = triple.predicate;\n  var o = triple.object;\n  var g = graphName;\n\n  var quad = '';\n\n  // subject is an IRI\n  if(s.type === 'IRI') {\n    quad += '<' + s.value + '>';\n  } else if(bnode) {\n    // bnode normalization mode\n    quad += (s.value === bnode) ? '_:a' : '_:z';\n  } else {\n    // bnode normal mode\n    quad += s.value;\n  }\n  quad += ' ';\n\n  // predicate is an IRI\n  if(p.type === 'IRI') {\n    quad += '<' + p.value + '>';\n  } else if(bnode) {\n    // FIXME: TBD what to do with bnode predicates during normalization\n    // bnode normalization mode\n    quad += '_:p';\n  } else {\n    // bnode normal mode\n    quad += p.value;\n  }\n  quad += ' ';\n\n  // object is IRI, bnode, or literal\n  if(o.type === 'IRI') {\n    quad += '<' + o.value + '>';\n  } else if(o.type === 'blank node') {\n    // normalization mode\n    if(bnode) {\n      quad += (o.value === bnode) ? '_:a' : '_:z';\n    } else {\n      // normal mode\n      quad += o.value;\n    }\n  } else {\n    var escaped = o.value\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\\"/g, '\\\\\"');\n    quad += '\"' + escaped + '\"';\n    if(o.datatype === RDF_LANGSTRING) {\n      if(o.language) {\n        quad += '@' + o.language;\n      }\n    } else if(o.datatype !== XSD_STRING) {\n      quad += '^^<' + o.datatype + '>';\n    }\n  }\n\n  // graph\n  if(g !== null) {\n    if(g.indexOf('_:') !== 0) {\n      quad += ' <' + g + '>';\n    } else if(bnode) {\n      quad += ' _:g';\n    } else {\n      quad += ' ' + g;\n    }\n  }\n\n  quad += ' .\\n';\n  return quad;\n}\n\n/**\n * Parses the RDF dataset found via the data object from the RDFa API.\n *\n * @param data the RDFa API data object.\n *\n * @return the RDF dataset.\n */\nfunction _parseRdfaApiData(data) {\n  var dataset = {};\n  dataset['@default'] = [];\n\n  var subjects = data.getSubjects();\n  for(var si = 0; si < subjects.length; ++si) {\n    var subject = subjects[si];\n    if(subject === null) {\n      continue;\n    }\n\n    // get all related triples\n    var triples = data.getSubjectTriples(subject);\n    if(triples === null) {\n      continue;\n    }\n    var predicates = triples.predicates;\n    for(var predicate in predicates) {\n      // iterate over objects\n      var objects = predicates[predicate].objects;\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var object = objects[oi];\n\n        // create RDF triple\n        var triple = {};\n\n        // add subject\n        if(subject.indexOf('_:') === 0) {\n          triple.subject = {type: 'blank node', value: subject};\n        } else {\n          triple.subject = {type: 'IRI', value: subject};\n        }\n\n        // add predicate\n        if(predicate.indexOf('_:') === 0) {\n          triple.predicate = {type: 'blank node', value: predicate};\n        } else {\n          triple.predicate = {type: 'IRI', value: predicate};\n        }\n\n        // serialize XML literal\n        var value = object.value;\n        if(object.type === RDF_XML_LITERAL) {\n          // initialize XMLSerializer\n          if(!XMLSerializer) {\n            _defineXMLSerializer();\n          }\n          var serializer = new XMLSerializer();\n          value = '';\n          for(var x = 0; x < object.value.length; x++) {\n            if(object.value[x].nodeType === Node.ELEMENT_NODE) {\n              value += serializer.serializeToString(object.value[x]);\n            } else if(object.value[x].nodeType === Node.TEXT_NODE) {\n              value += object.value[x].nodeValue;\n            }\n          }\n        }\n\n        // add object\n        triple.object = {};\n\n        // object is an IRI\n        if(object.type === RDF_OBJECT) {\n          if(object.value.indexOf('_:') === 0) {\n            triple.object.type = 'blank node';\n          } else {\n            triple.object.type = 'IRI';\n          }\n        } else {\n          // object is a literal\n          triple.object.type = 'literal';\n          if(object.type === RDF_PLAIN_LITERAL) {\n            if(object.language) {\n              triple.object.datatype = RDF_LANGSTRING;\n              triple.object.language = object.language;\n            } else {\n              triple.object.datatype = XSD_STRING;\n            }\n          } else {\n            triple.object.datatype = object.type;\n          }\n        }\n        triple.object.value = value;\n\n        // add triple to dataset in default graph\n        dataset['@default'].push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the RDFa API RDF parser\njsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);\n\n/**\n * Creates a new UniqueNamer. A UniqueNamer issues unique names, keeping\n * track of any previously issued names.\n *\n * @param prefix the prefix to use ('<prefix><counter>').\n */\nfunction UniqueNamer(prefix) {\n  this.prefix = prefix;\n  this.counter = 0;\n  this.existing = {};\n}\njsonld.UniqueNamer = UniqueNamer;\n\n/**\n * Copies this UniqueNamer.\n *\n * @return a copy of this UniqueNamer.\n */\nUniqueNamer.prototype.clone = function() {\n  var copy = new UniqueNamer(this.prefix);\n  copy.counter = this.counter;\n  copy.existing = _clone(this.existing);\n  return copy;\n};\n\n/**\n * Gets the new name for the given old name, where if no old name is given\n * a new name will be generated.\n *\n * @param [oldName] the old name to get the new name for.\n *\n * @return the new name.\n */\nUniqueNamer.prototype.getName = function(oldName) {\n  // return existing old name\n  if(oldName && oldName in this.existing) {\n    return this.existing[oldName];\n  }\n\n  // get next name\n  var name = this.prefix + this.counter;\n  this.counter += 1;\n\n  // save mapping\n  if(oldName) {\n    this.existing[oldName] = name;\n  }\n\n  return name;\n};\n\n/**\n * Returns true if the given oldName has already been assigned a new name.\n *\n * @param oldName the oldName to check.\n *\n * @return true if the oldName has been assigned a new name, false if not.\n */\nUniqueNamer.prototype.isNamed = function(oldName) {\n  return (oldName in this.existing);\n};\n\n/**\n * A Permutator iterates over all possible permutations of the given array\n * of elements.\n *\n * @param list the array of elements to iterate over.\n */\nvar Permutator = function(list) {\n  // original array\n  this.list = list.sort();\n  // indicates whether there are more permutations\n  this.done = false;\n  // directional info for permutation algorithm\n  this.left = {};\n  for(var i = 0; i < list.length; ++i) {\n    this.left[list[i]] = true;\n  }\n};\n\n/**\n * Returns true if there is another permutation.\n *\n * @return true if there is another permutation, false if not.\n */\nPermutator.prototype.hasNext = function() {\n  return !this.done;\n};\n\n/**\n * Gets the next permutation. Call hasNext() to ensure there is another one\n * first.\n *\n * @return the next permutation.\n */\nPermutator.prototype.next = function() {\n  // copy current permutation\n  var rval = this.list.slice();\n\n  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n   permutation algorithm. */\n\n  // get largest mobile element k\n  // (mobile: element is greater than the one it is looking at)\n  var k = null;\n  var pos = 0;\n  var length = this.list.length;\n  for(var i = 0; i < length; ++i) {\n    var element = this.list[i];\n    var left = this.left[element];\n    if((k === null || element > k) &&\n      ((left && i > 0 && element > this.list[i - 1]) ||\n      (!left && i < (length - 1) && element > this.list[i + 1]))) {\n      k = element;\n      pos = i;\n    }\n  }\n\n  // no more permutations\n  if(k === null) {\n    this.done = true;\n  } else {\n    // swap k and the element it is looking at\n    var swap = this.left[k] ? pos - 1 : pos + 1;\n    this.list[pos] = this.list[swap];\n    this.list[swap] = k;\n\n    // reverse the direction of all elements larger than k\n    for(var i = 0; i < length; ++i) {\n      if(this.list[i] > k) {\n        this.left[this.list[i]] = !this.left[this.list[i]];\n      }\n    }\n  }\n\n  return rval;\n};\n\n// SHA-1 API\nvar sha1 = jsonld.sha1 = {};\n\nif(_nodejs) {\n  var crypto = require('crypto');\n  sha1.create = function() {\n    var md = crypto.createHash('sha1');\n    return {\n      update: function(data) {\n        md.update(data, 'utf8');\n      },\n      digest: function() {\n        return md.digest('hex');\n      }\n    };\n  };\n} else {\n  sha1.create = function() {\n    return new sha1.MessageDigest();\n  };\n}\n\n/**\n * Hashes the given array of quads and returns its hexadecimal SHA-1 message\n * digest.\n *\n * @param nquads the list of serialized quads to hash.\n *\n * @return the hexadecimal SHA-1 message digest.\n */\nsha1.hash = function(nquads) {\n  var md = sha1.create();\n  for(var i = 0; i < nquads.length; ++i) {\n    md.update(nquads[i]);\n  }\n  return md.digest();\n};\n\n// only define sha1 MessageDigest for non-nodejs\nif(!_nodejs) {\n\n/**\n * Creates a simple byte buffer for message digest operations.\n */\nsha1.Buffer = function() {\n  this.data = '';\n  this.read = 0;\n};\n\n/**\n * Puts a 32-bit integer into this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n */\nsha1.Buffer.prototype.putInt32 = function(i) {\n  this.data += (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Gets a 32-bit integer from this buffer in big-endian order and\n * advances the read pointer by 4.\n *\n * @return the word.\n */\nsha1.Buffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets the bytes in this buffer.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nsha1.Buffer.prototype.bytes = function() {\n  return this.data.slice(this.read);\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nsha1.Buffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Compacts this buffer.\n */\nsha1.Buffer.prototype.compact = function() {\n  this.data = this.data.slice(this.read);\n  this.read = 0;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nsha1.Buffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.MessageDigest = function() {\n  // do initialization as necessary\n  if(!_sha1.initialized) {\n    _sha1.init();\n  }\n\n  this.blockLength = 64;\n  this.digestLength = 20;\n  // length of message so far (does not including padding)\n  this.messageLength = 0;\n\n  // input buffer\n  this.input = new sha1.Buffer();\n\n  // for storing words in the SHA-1 algorithm\n  this.words = new Array(80);\n\n  // SHA-1 state contains five 32-bit integers\n  this.state = {\n    h0: 0x67452301,\n    h1: 0xEFCDAB89,\n    h2: 0x98BADCFE,\n    h3: 0x10325476,\n    h4: 0xC3D2E1F0\n  };\n};\n\n/**\n * Updates the digest with the given string input.\n *\n * @param msg the message input to update with.\n */\nsha1.MessageDigest.prototype.update = function(msg) {\n  // UTF-8 encode message\n  msg = unescape(encodeURIComponent(msg));\n\n  // update message length and input buffer\n  this.messageLength += msg.length;\n  this.input.data += msg;\n\n  // process input\n  _sha1.update(this.state, this.words, this.input);\n\n  // compact input buffer every 2K or if empty\n  if(this.input.read > 2048 || this.input.length() === 0) {\n    this.input.compact();\n  }\n};\n\n/**\n * Produces the digest.\n *\n * @return the digest as a hexadecimal string.\n */\nsha1.MessageDigest.prototype.digest = function() {\n  /* Determine the number of bytes that must be added to the message\n  to ensure its length is congruent to 448 mod 512. In other words,\n  a 64-bit integer that gives the length of the message will be\n  appended to the message and whatever the length of the message is\n  plus 64 bits must be a multiple of 512. So the length of the\n  message must be congruent to 448 mod 512 because 512 - 64 = 448.\n\n  In order to fill up the message length it must be filled with\n  padding that begins with 1 bit followed by all 0 bits. Padding\n  must *always* be present, so if the message length is already\n  congruent to 448 mod 512, then 512 padding bits must be added. */\n\n  // 512 bits == 64 bytes, 448 bits == 56 bytes, 64 bits = 8 bytes\n  // _padding starts with 1 byte with first bit is set in it which\n  // is byte value 128, then there may be up to 63 other pad bytes\n  var len = this.messageLength;\n  var padBytes = new sha1.Buffer();\n  padBytes.data += this.input.bytes();\n  padBytes.data += _sha1.padding.substr(0, 64 - ((len + 8) % 64));\n\n  /* Now append length of the message. The length is appended in bits\n  as a 64-bit number in big-endian order. Since we store the length\n  in bytes, we must multiply it by 8 (or left shift by 3). So here\n  store the high 3 bits in the low end of the first 32-bits of the\n  64-bit number and the lower 5 bits in the high end of the second\n  32-bits. */\n  padBytes.putInt32((len >>> 29) & 0xFF);\n  padBytes.putInt32((len << 3) & 0xFFFFFFFF);\n  _sha1.update(this.state, this.words, padBytes);\n  var rval = new sha1.Buffer();\n  rval.putInt32(this.state.h0);\n  rval.putInt32(this.state.h1);\n  rval.putInt32(this.state.h2);\n  rval.putInt32(this.state.h3);\n  rval.putInt32(this.state.h4);\n  return rval.toHex();\n};\n\n// private SHA-1 data\nvar _sha1 = {\n  padding: null,\n  initialized: false\n};\n\n/**\n * Initializes the constant tables.\n */\n_sha1.init = function() {\n  // create padding\n  _sha1.padding = String.fromCharCode(128);\n  var c = String.fromCharCode(0x00);\n  var n = 64;\n  while(n > 0) {\n    if(n & 1) {\n      _sha1.padding += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n\n  // now initialized\n  _sha1.initialized = true;\n};\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param input the input byte buffer.\n */\n_sha1.update = function(s, w, input) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = input.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = input.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 += a;\n    s.h1 += b;\n    s.h2 += c;\n    s.h3 += d;\n    s.h4 += e;\n\n    len -= 64;\n  }\n};\n\n} // end non-nodejs\n\nif(!XMLSerializer) {\n\nvar _defineXMLSerializer = function() {\n  XMLSerializer = require('xmldom').XMLSerializer;\n};\n\n} // end _defineXMLSerializer\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\njsonld.url = {};\njsonld.url.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: ['href','scheme','authority','path','query','fragment'],\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\njsonld.url.parse = function(str, parser) {\n  var parsed = {};\n  var o = jsonld.url.parsers[parser || 'full'];\n  var m = o.regex.exec(str);\n  var i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);\n  return parsed;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n * @param hasAuthority true if the URL has an authority, false if not.\n */\nfunction _removeDotSegments(path, hasAuthority) {\n  var rval = '';\n\n  if(path.indexOf('/') === 0) {\n    rval = '/';\n  }\n\n  // RFC 3986 5.2.4 (reworked)\n  var input = path.split('/');\n  var output = [];\n  while(input.length > 0) {\n    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {\n      input.shift();\n      continue;\n    }\n    if(input[0] === '..') {\n      input.shift();\n      if(hasAuthority ||\n        (output.length > 0 && output[output.length - 1] !== '..')) {\n        output.pop();\n      } else {\n        // leading relative URL '..'\n        output.push('..');\n      }\n      continue;\n    }\n    output.push(input.shift());\n  }\n\n  return rval + output.join('/');\n}\n\nif(_nodejs) {\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n} else if(typeof XMLHttpRequest !== 'undefined') {\n  // use xhr document loader by default\n  jsonld.useDocumentLoader('xhr');\n}\n\nif(_nodejs) {\n  jsonld.use = function(extension) {\n    switch(extension) {\n      case 'request':\n        // use node JSON-LD request extension\n        jsonld.request = require('./request');\n        break;\n      default:\n        throw new JsonLdError(\n          'Unknown extension.',\n          'jsonld.UnknownExtension', {extension: extension});\n    }\n  };\n\n  // expose version\n  var _module = {exports: {}, filename: __dirname};\n  require('pkginfo')(_module, 'version');\n  jsonld.version = _module.exports.version;\n}\n\n// end of jsonld API factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nvar factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\nif(!_nodejs && (typeof define === 'function' && define.amd)) {\n  // export AMD API\n  define([], function() {\n    // now that module is defined, wrap main jsonld API instance\n    wrapper(factory);\n    return factory;\n  });\n} else {\n  // wrap the main jsonld API instance\n  wrapper(factory);\n\n  if(typeof require === 'function' &&\n    typeof module !== 'undefined' && module.exports) {\n    // export CommonJS/nodejs API\n    module.exports = factory;\n  }\n\n  if(_browser) {\n    // export simple browser API\n    if(typeof jsonld === 'undefined') {\n      jsonld = jsonldjs = factory;\n    } else {\n      jsonldjs = factory;\n    }\n  }\n}\n\nreturn factory;\n\n})();\n","/*\nCopyright (c) 2011-2012, R. Alexander Milowski <alex@milowski.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nvar _nodejs = (typeof module !== 'undefined');\n\nfunction RDFa() {\n}\nRDFa.attach = function(document,update) {\n\nif(_nodejs) {\n   var _baseURI = document.location.href;\n}\n\nfunction URIResolver() {\n}\nURIResolver.SCHEME = new RegExp(\"^[A-Za-z][A-Za-z0-9\\+\\-\\.]*\\:\");\n\nURIResolver.prototype.parseURI = function(uri) {\n   if(_nodejs) {\n     uri = uri || _baseURI;\n   }\n   var match = URIResolver.SCHEME.exec(uri);\n   if (!match) {\n      if(_nodejs) {\n         throw new Error(\"Bad URI value, no scheme: \"+uri);\n      }\n      throw \"Bad URI value, no scheme: \"+uri;\n   }\n   var parsed = { spec: uri };\n   parsed.scheme = match[0].substring(0,match[0].length-1);\n   parsed.schemeSpecificPart = parsed.spec.substring(match[0].length);\n   if (parsed.schemeSpecificPart.charAt(0)=='/' && parsed.schemeSpecificPart.charAt(1)=='/') {\n      this.parseGeneric(parsed);\n   } else {\n      parsed.isGeneric = false;\n   }\n   parsed.normalize = function() {\n      if (!this.isGeneric) {\n         return;\n      }\n      if (this.segments.length==0) {\n         return;\n      }\n      // edge case of ending in \"/.\"\n      if (this.path.length>1 && this.path.substring(this.path.length-2)==\"/.\") {\n         this.path = this.path.substring(0,this.path.length-1);\n         this.segments.splice(this.segments.length-1,1);\n         this.schemeSpecificPart = \"//\"+this.authority+this.path;\n         if (typeof this.query != \"undefined\") {\n            this.schemeSpecificPart += \"?\" + this.query;\n         }\n         if (typeof this.fragment != \"undefined\") {\n            this.schemeSpecificPart += \"#\" + this.fragment;\n         }\n         this.spec = this.scheme+\":\"+this.schemeSpecificPart;\n         return;\n      }\n      var end = this.path.charAt(this.path.length-1);\n      if (end!=\"/\") {\n         end = \"\";\n      }\n      for (var i=0; i<this.segments.length; i++) {\n         if (i>0 && this.segments[i]==\"..\") {\n            this.segments.splice(i-1,2);\n            i -= 2;\n         }\n         if (this.segments[i]==\".\") {\n            this.segments.splice(i,1);\n            i--;\n         }\n      }\n      this.path = this.segments.length==0 ? \"/\" : \"/\"+this.segments.join(\"/\")+end;\n      this.schemeSpecificPart = \"//\"+this.authority+this.path;\n      if (typeof this.query != \"undefined\") {\n         this.schemeSpecificPart += \"?\" + this.query;\n      }\n      if (typeof this.fragment != \"undefined\") {\n         this.schemeSpecificPart += \"#\" + this.fragment;\n      }\n      this.spec = this.scheme+\":\"+this.schemeSpecificPart;\n   }\n   parsed.resolve = function(href) {\n      if (!href) {\n         return this.spec;\n      }\n      if (href.charAt(0)=='#') {\n         var lastHash = this.spec.lastIndexOf('#');\n         return lastHash<0 ? this.spec+href : this.spec.substring(0,lastHash)+href;\n      }\n      if (!this.isGeneric) {\n         throw \"Cannot resolve uri against non-generic URI: \"+this.spec;\n      }\n      var colon = href.indexOf(':');\n      if (href.charAt(0)=='/') {\n         return this.scheme+\"://\"+this.authority+href;\n      } else if (href.charAt(0)=='.' && href.charAt(1)=='/') {\n         if (this.path.charAt(this.path.length-1)=='/') {\n            return this.scheme+\"://\"+this.authority+this.path+href.substring(2);\n         } else {\n            var last = this.path.lastIndexOf('/');\n            return this.scheme+\"://\"+this.authority+this.path.substring(0,last)+href.substring(1);\n         }\n      } else if (URIResolver.SCHEME.test(href)) {\n         return href;\n      } else if (href.charAt(0)==\"?\") {\n         return this.scheme+\"://\"+this.authority+this.path+href;\n      } else {\n         if (this.path.charAt(this.path.length-1)=='/') {\n            return this.scheme+\"://\"+this.authority+this.path+href;\n         } else {\n            var last = this.path.lastIndexOf('/');\n            return this.scheme+\"://\"+this.authority+this.path.substring(0,last+1)+href;\n         }\n      }\n   };\n   parsed.relativeTo = function(otherURI) {\n      if (otherURI.scheme!=this.scheme) {\n         return this.spec;\n      }\n      if (!this.isGeneric) {\n         throw \"A non generic URI cannot be made relative: \"+this.spec;\n      }\n      if (!otherURI.isGeneric) {\n         throw \"Cannot make a relative URI against a non-generic URI: \"+otherURI.spec;\n      }\n      if (otherURI.authority!=this.authority) {\n         return this.spec;\n      }\n      var i=0;\n      for (; i<this.segments.length && i<otherURI.segments.length; i++) {\n         if (this.segments[i]!=otherURI.segments[i]) {\n            //alert(this.path+\" different from \"+otherURI.path+\" at '\"+this.segments[i]+\"' vs '\"+otherURI.segments[i]+\"'\");\n            var relative = \"\";\n            for (var j=i; j<otherURI.segments.length; j++) {\n               relative += \"../\";\n            }\n            for (var j=i; j<this.segments.length; j++) {\n               relative += this.segments[j];\n               if ((j+1)<this.segments.length) {\n                  relative += \"/\";\n               }\n            }\n            if (this.path.charAt(this.path.length-1)=='/') {\n               relative += \"/\";\n            }\n            return relative;\n         }\n      }\n      if (this.segments.length==otherURI.segments.length) {\n         return this.hash ? this.hash : (this.query ? this.query : \"\");\n      } else if (i<this.segments.length) {\n         var relative = \"\";\n         for (var j=i; j<this.segments.length; j++) {\n            relative += this.segments[j];\n            if ((j+1)<this.segments.length) {\n               relative += \"/\";\n            }\n         }\n         if (this.path.charAt(this.path.length-1)=='/') {\n            relative += \"/\";\n         }\n         return relative;\n      } else {\n         throw \"Cannot calculate a relative URI for \"+this.spec+\" against \"+otherURI.spec;\n      }\n   };\n   return parsed;\n}\n\nURIResolver.prototype.parseGeneric = function(parsed) {\n   if (parsed.schemeSpecificPart.charAt(0)!='/' || parsed.schemeSpecificPart.charAt(1)!='/') {\n      throw \"Generic URI values should start with '//':\"+parsed.spec;\n   }\n\n   var work = parsed.schemeSpecificPart.substring(2);\n   var pathStart = work.indexOf(\"/\");\n   parsed.authority = pathStart<0 ? work : work.substring(0,pathStart);\n   parsed.path = pathStart<0 ? \"\" : work.substring(pathStart);\n   var hash = parsed.path.indexOf('#');\n   if (hash>=0) {\n      parsed.fragment = parsed.path.substring(hash+1);\n      parsed.path = parsed.path.substring(0,hash);\n   }\n   var questionMark = parsed.path.indexOf('?');\n   if (questionMark>=0) {\n      parsed.query = parsed.path.substring(questionMark+1);\n      parsed.path = parsed.path.substring(0,questionMark);\n   }\n   if (parsed.path==\"/\" || parsed.path==\"\") {\n      parsed.segments = [];\n   } else {\n      parsed.segments = parsed.path.split(/\\//);\n      if (parsed.segments.length>0 && parsed.segments[0]=='' && parsed.path.length>1 && parsed.path.charAt(1)!='/') {\n         // empty segment at the start, remove it\n         parsed.segments.shift();\n      }\n      if (parsed.segments.length>0 && parsed.path.length>0 && parsed.path.charAt(parsed.path.length-1)=='/' && parsed.segments[parsed.segments.length-1]=='') {\n         // we may have an empty the end\n         // check to see if it is legimate\n         if (parsed.path.length>1 && parsed.path.charAt(parsed.path.length-2)!='/') {\n            parsed.segments.pop();\n         }\n      }\n   }\n   parsed.isGeneric = true;\n}\nObject.size = function(obj) {\n   var size = 0;\n   for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n         size++;\n      }\n   }\n   return size;\n};\n\nRDFaProcessor.prototype = new URIResolver();\nRDFaProcessor.prototype.constructor=RDFaProcessor;\nfunction RDFaProcessor(targetObject) {\n   this.target = targetObject;\n   this.target.tripleCount = 0;\n   this.target.triplesGraph = {};\n   this.target.prefixes = {};\n   this.target.terms = {};\n   this.language = null;\n   this.vocabulary = null;\n   this.typeURI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n   this.objectURI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#object\";\n   this.XMLLiteralURI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral\";\n   this.PlainLiteralURI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral\";\n   this.blankCounter = 0;\n   this.langAttributes = [ { namespaceURI: \"http://www.w3.org/XML/1998/namespace\", localName: \"lang\" } ];\n   this.contentAttributes = [ \"content\" ];\n   this.inXHTMLMode = false;\n   this.absURIRE = /[\\w\\_\\-]+:\\S+/;\n}\n\nRDFaProcessor.prototype.newBlankNode = function() {\n   this.blankCounter++;\n   return \"_:\"+this.blankCounter;\n}\n\nRDFaProcessor.nameChar = '[-A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u10000-\\uEFFFF\\.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]';\nRDFaProcessor.nameStartChar = '[\\u0041-\\u005A\\u0061-\\u007A\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029_]';\nRDFaProcessor.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar + RDFaProcessor.nameChar + '*$');\n\nRDFaProcessor.prototype.trim = function(str) {\n   return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n\nRDFaProcessor.prototype.tokenize = function(str) {\n   return this.trim(str).split(/\\s+/);\n}\n\n\nRDFaProcessor.prototype.parseSafeCURIEOrCURIEOrURI = function(value,prefixes,base) {\n   value = this.trim(value);\n   if (value.charAt(0)=='[' && value.charAt(value.length-1)==']') {\n      value = value.substring(1,value.length-1);\n      value = value.trim(value);\n      if (value.length==0) {\n         return null;\n      }\n      return this.parseCURIE(value,prefixes,base);\n   } else {\n      return this.parseCURIEOrURI(value,prefixes,base);\n   }\n}\n\nRDFaProcessor.prototype.parseCURIE = function(value,prefixes,base) {\n   var colon = value.indexOf(\":\");\n   if (colon>=0) {\n      var prefix = value.substring(0,colon);\n      if (prefix==\"\") {\n         // default prefix\n         var uri = prefixes[\"\"];\n         return uri ? uri+value.substring(colon+1) : null;\n      } else if (prefix==\"_\") {\n         // blank node\n         return \"_:\"+value.substring(colon+1);\n      } else if (RDFaProcessor.NCNAME.test(prefix)) {\n         var uri = prefixes[prefix];\n         if (uri) {\n            return uri+value.substring(colon+1);\n         }\n      }\n   }\n   return null;\n}\n\nRDFaProcessor.prototype.parseCURIEOrURI = function(value,prefixes,base) {\n   var curie = this.parseCURIE(value,prefixes,base);\n   if (curie) {\n      return curie;\n   }\n   return this.resolveAndNormalize(base,value);\n}\n\nRDFaProcessor.prototype.parsePredicate = function(value,defaultVocabulary,terms,prefixes,base) {\n   var predicate = this.parseTermOrCURIEOrAbsURI(value,defaultVocabulary,terms,prefixes,base);\n   if (predicate && predicate.indexOf(\"_:\")==0) {\n      return null;\n   }\n   return predicate;\n}\n\nRDFaProcessor.prototype.parseTermOrCURIEOrURI = function(value,defaultVocabulary,terms,prefixes,base) {\n   //alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary);\n   value = this.trim(value);\n   var curie = this.parseCURIE(value,prefixes,base);\n   if (curie) {\n      return curie;\n   } else {\n       var term = terms[value];\n       if (term) {\n          return term;\n       }\n       var lcvalue = value.toLowerCase();\n       term = terms[lcvalue];\n       if (term) {\n          return term;\n       }\n       if (defaultVocabulary && !this.absURIRE.exec(value)) {\n          return defaultVocabulary+value\n       }\n   }\n   return this.resolveAndNormalize(base,value);\n}\n\nRDFaProcessor.prototype.parseTermOrCURIEOrAbsURI = function(value,defaultVocabulary,terms,prefixes,base) {\n   //alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary);\n   value = this.trim(value);\n   var curie = this.parseCURIE(value,prefixes,base);\n   if (curie) {\n      return curie;\n   } else {\n       if (defaultVocabulary && !this.absURIRE.exec(value)) {\n          return defaultVocabulary+value\n       }\n       var term = terms[value];\n       if (term) {\n          return term;\n       }\n       var lcvalue = value.toLowerCase();\n       term = terms[lcvalue];\n       if (term) {\n          return term;\n       }\n   }\n   if (this.absURIRE.exec(value)) {\n      return this.resolveAndNormalize(base,value);\n   }\n   return null;\n}\n\nRDFaProcessor.prototype.resolveAndNormalize = function(base,href) {\n   var u = base.resolve(href);\n   var parsed = this.parseURI(u);\n   parsed.normalize();\n   return parsed.spec;\n}\n\nRDFaProcessor.prototype.parsePrefixMappings = function(str,target) {\n   var values = this.tokenize(str);\n   var prefix = null;\n   var uri = null;\n   for (var i=0; i<values.length; i++) {\n      if (values[i][values[i].length-1]==':') {\n         prefix = values[i].substring(0,values[i].length-1);\n      } else if (prefix) {\n         target[prefix] = values[i];\n         prefix = null;\n      }\n   }\n}\n\nRDFaProcessor.prototype.copyMappings = function(mappings) {\n   var newMappings = {};\n   for (var k in mappings) {\n      newMappings[k] = mappings[k];\n   }\n   return newMappings;\n}\n\nRDFaProcessor.prototype.ancestorPath = function(node) {\n   var path = \"\";\n   while (node && node.nodeType!=Node.DOCUMENT_NODE) {\n      path = \"/\"+node.localName+path;\n      node = node.parentNode;\n   }\n   return path;\n}\n\nRDFaProcessor.prototype.setContext = function(node) {\n\n   // We only recognized XHTML+RDFa 1.1 if the version is set propertyly\n   if (node.localName==\"html\" && node.getAttribute(\"version\")==\"XHTML+RDFa 1.1\") {\n      this.setXHTMLContext();\n   } else if (node.localName==\"html\" || node.namespaceURI==\"http://www.w3.org/1999/xhtml\") {\n      this.setHTMLContext();\n   } else {\n      this.setXMLContext();\n   }\n\n}\n\nRDFaProcessor.prototype.setInitialContext = function() {\n   this.vocabulary = null;\n   this.target.prefixes = {};\n   this.target.terms = {};\n   this.langAttributes = [ { namespaceURI: \"http://www.w3.org/XML/1998/namespace\", localName: \"lang\" } ];\n   this.contentAttributes = [ \"content\" ];\n\n   this.target.prefixes[\"\"] = \"http://www.w3.org/1999/xhtml/vocab#\";\n\n   // w3c\n   this.target.prefixes[\"grddl\"] = \"http://www.w3.org/2003/g/data-view#\";\n   this.target.prefixes[\"ma\"] = \"http://www.w3.org/ns/ma-ont#\";\n   this.target.prefixes[\"owl\"] = \"http://www.w3.org/2002/07/owl#\";\n   this.target.prefixes[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n   this.target.prefixes[\"rdfa\"] = \"http://www.w3.org/ns/rdfa#\";\n   this.target.prefixes[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\n   this.target.prefixes[\"rif\"] = \"http://www.w3.org/2007/rif#\";\n   this.target.prefixes[\"skos\"] = \"http://www.w3.org/2004/02/skos/core#\";\n   this.target.prefixes[\"skosxl\"] = \"http://www.w3.org/2008/05/skos-xl#\";\n   this.target.prefixes[\"wdr\"] = \"http://www.w3.org/2007/05/powder#\";\n   this.target.prefixes[\"void\"] = \"http://rdfs.org/ns/void#\";\n   this.target.prefixes[\"wdrs\"] = \"http://www.w3.org/2007/05/powder-s#\";\n   this.target.prefixes[\"xhv\"] = \"http://www.w3.org/1999/xhtml/vocab#\";\n   this.target.prefixes[\"xml\"] = \"http://www.w3.org/XML/1998/namespace\";\n   this.target.prefixes[\"xsd\"] = \"http://www.w3.org/2001/XMLSchema#\";\n   // non-rec w3c\n   this.target.prefixes[\"sd\"] = \"http://www.w3.org/ns/sparql-service-description#\";\n   this.target.prefixes[\"org\"] = \"http://www.w3.org/ns/org#\";\n   this.target.prefixes[\"gldp\"] = \"http://www.w3.org/ns/people#\";\n   this.target.prefixes[\"cnt\"] = \"http://www.w3.org/2008/content#\";\n   this.target.prefixes[\"dcat\"] = \"http://www.w3.org/ns/dcat#\";\n   this.target.prefixes[\"earl\"] = \"http://www.w3.org/ns/earl#\";\n   this.target.prefixes[\"ht\"] = \"http://www.w3.org/2006/http#\";\n   this.target.prefixes[\"ptr\"] = \"http://www.w3.org/2009/pointers#\";\n   // widely used\n   this.target.prefixes[\"cc\"] = \"http://creativecommons.org/ns#\";\n   this.target.prefixes[\"ctag\"] = \"http://commontag.org/ns#\";\n   this.target.prefixes[\"dc\"] = \"http://purl.org/dc/terms/\";\n   this.target.prefixes[\"dcterms\"] = \"http://purl.org/dc/terms/\";\n   this.target.prefixes[\"foaf\"] = \"http://xmlns.com/foaf/0.1/\";\n   this.target.prefixes[\"gr\"] = \"http://purl.org/goodrelations/v1#\";\n   this.target.prefixes[\"ical\"] = \"http://www.w3.org/2002/12/cal/icaltzd#\";\n   this.target.prefixes[\"og\"] = \"http://ogp.me/ns#\";\n   this.target.prefixes[\"rev\"] = \"http://purl.org/stuff/rev#\";\n   this.target.prefixes[\"sioc\"] = \"http://rdfs.org/sioc/ns#\";\n   this.target.prefixes[\"v\"] = \"http://rdf.data-vocabulary.org/#\";\n   this.target.prefixes[\"vcard\"] = \"http://www.w3.org/2006/vcard/ns#\";\n   this.target.prefixes[\"schema\"] = \"http://schema.org/\";\n\n   // terms\n   this.target.terms[\"describedby\"] = \"http://www.w3.org/2007/05/powder-s#describedby\";\n   this.target.terms[\"license\"] = \"http://www.w3.org/1999/xhtml/vocab#license\";\n   this.target.terms[\"role\"] = \"http://www.w3.org/1999/xhtml/vocab#role\";\n}\n\nRDFaProcessor.prototype.setXMLContext = function() {\n   this.setInitialContext();\n   this.inXHTMLMode = false;\n}\n\nRDFaProcessor.prototype.setHTMLContext = function() {\n   this.setInitialContext();\n   this.langAttributes = [ { namespaceURI: \"http://www.w3.org/XML/1998/namespace\", localName: \"lang\" },\n                           { namespaceURI: null, localName: \"lang\" }];\n   this.contentAttributes = [ \"value\", \"datetime\", \"content\" ];\n   this.inXHTMLMode = false;\n}\n\nRDFaProcessor.prototype.setXHTMLContext = function() {\n\n   this.setInitialContext();\n\n   this.inXHTMLMode = true;\n\n   this.langAttributes = [ { namespaceURI: \"http://www.w3.org/XML/1998/namespace\", localName: \"lang\" } ];\n   this.contentAttributes = [ \"content\" ];\n\n   // From http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1\n   this.target.terms[\"alternate\"] = \"http://www.w3.org/1999/xhtml/vocab#alternate\";\n   this.target.terms[\"appendix\"] = \"http://www.w3.org/1999/xhtml/vocab#appendix\";\n   this.target.terms[\"bookmark\"] = \"http://www.w3.org/1999/xhtml/vocab#bookmark\";\n   this.target.terms[\"cite\"] = \"http://www.w3.org/1999/xhtml/vocab#cite\"\n   this.target.terms[\"chapter\"] = \"http://www.w3.org/1999/xhtml/vocab#chapter\";\n   this.target.terms[\"contents\"] = \"http://www.w3.org/1999/xhtml/vocab#contents\";\n   this.target.terms[\"copyright\"] = \"http://www.w3.org/1999/xhtml/vocab#copyright\";\n   this.target.terms[\"first\"] = \"http://www.w3.org/1999/xhtml/vocab#first\";\n   this.target.terms[\"glossary\"] = \"http://www.w3.org/1999/xhtml/vocab#glossary\";\n   this.target.terms[\"help\"] = \"http://www.w3.org/1999/xhtml/vocab#help\";\n   this.target.terms[\"icon\"] = \"http://www.w3.org/1999/xhtml/vocab#icon\";\n   this.target.terms[\"index\"] = \"http://www.w3.org/1999/xhtml/vocab#index\";\n   this.target.terms[\"last\"] = \"http://www.w3.org/1999/xhtml/vocab#last\";\n   this.target.terms[\"license\"] = \"http://www.w3.org/1999/xhtml/vocab#license\";\n   this.target.terms[\"meta\"] = \"http://www.w3.org/1999/xhtml/vocab#meta\";\n   this.target.terms[\"next\"] = \"http://www.w3.org/1999/xhtml/vocab#next\";\n   this.target.terms[\"prev\"] = \"http://www.w3.org/1999/xhtml/vocab#prev\";\n   this.target.terms[\"previous\"] = \"http://www.w3.org/1999/xhtml/vocab#previous\";\n   this.target.terms[\"section\"] = \"http://www.w3.org/1999/xhtml/vocab#section\";\n   this.target.terms[\"stylesheet\"] = \"http://www.w3.org/1999/xhtml/vocab#stylesheet\";\n   this.target.terms[\"subsection\"] = \"http://www.w3.org/1999/xhtml/vocab#subsection\";\n   this.target.terms[\"start\"] = \"http://www.w3.org/1999/xhtml/vocab#start\";\n   this.target.terms[\"top\"] = \"http://www.w3.org/1999/xhtml/vocab#top\";\n   this.target.terms[\"up\"] = \"http://www.w3.org/1999/xhtml/vocab#up\";\n   this.target.terms[\"p3pv1\"] = \"http://www.w3.org/1999/xhtml/vocab#p3pv1\";\n\n   // other\n   this.target.terms[\"related\"] = \"http://www.w3.org/1999/xhtml/vocab#related\";\n   this.target.terms[\"role\"] = \"http://www.w3.org/1999/xhtml/vocab#role\";\n   this.target.terms[\"transformation\"] = \"http://www.w3.org/1999/xhtml/vocab#transformation\";\n}\n\nRDFaProcessor.prototype.getTransferGraph = function() {\n   var graph = {};\n   for (var subject in this.target.triplesGraph) {\n      var snode = this.target.triplesGraph[subject];\n      var tsnode = { subject: subject, predicates: {} };\n      graph[subject] = tsnode;\n      for (var predicate in snode.predicates) {\n         var pnode = snode.predicates[predicate];\n         var tpnode = { predicate: predicate, objects: [] };\n         tsnode.predicates[predicate] = tpnode;\n         for (var i=0; i<pnode.objects.length; i++) {\n            var object = pnode.objects[i];\n            if (object.type==this.XMLLiteralURI) {\n               var serializer = new XMLSerializer();\n               var value = \"\";\n               for (var x=0; x<object.value.length; x++) {\n                  if (object.value[x].nodeType==Node.ELEMENT_NODE) {\n                     value += serializer.serializeToString(object.value[x]);\n                  } else if (object.value[x].nodeType==Node.TEXT_NODE) {\n                     value += object.value[x].nodeValue;\n                  }\n               }\n               tpnode.objects.push({ type: object.type, value: value});\n            } else {\n               tpnode.objects.push({ type: object.type, value: object.value});\n            }\n         }\n      }\n   }\n   return graph;\n}\n\nRDFaProcessor.prototype.newSubject = function(data,origin,subject) {\n   var snode = data.triplesGraph[subject];\n   if (!snode) {\n      snode = { subject: subject, predicates: {}, origins: [] };\n      data.triplesGraph[subject] = snode;\n   }\n   for (var i=0; i<snode.origins.length; i++) {\n      if (snode.origins[i]==origin) {\n         return snode;\n      }\n   }\n   snode.origins.push(origin);\n   return snode;\n}\n\nRDFaProcessor.prototype.addTriple = function(data,origin,subject,predicate,object) {\n   var graph = data.triplesGraph;\n   var snode = this.newSubject(data,origin,subject);\n   var pnode = snode.predicates[predicate];\n   if (!pnode) {\n      pnode = { predicate: predicate, objects: [] };\n      snode.predicates[predicate] = pnode;\n   }\n\n   for (var i=0; i<pnode.objects.length; i++) {\n      if (pnode.objects[i].type==object.type && pnode.objects[i].value==object.value) {\n         return;\n      }\n   }\n   data.tripleCount++;\n   pnode.objects.push(object);\n   object.origin = origin;\n   //console.log(\"Added triple.\");\n}\n\nRDFaProcessor.prototype.process = function(node) {\n\n   /*\n   if (!window.console) {\n      window.console = { log: function() {} };\n   }*/\n   if (node.parentNode.nodeType==Node.DOCUMENT_NODE) {\n      this.setContext(node);\n   }\n   var queue = [];\n   queue.push({ current: node, context: this.push(null,node.baseURI)});\n   while (queue.length>0) {\n      var item = queue.shift();\n      if (item.parent) {\n         // Sequence Step 14: list triple generation\n         if (item.context.parent && item.context.parent.listMapping==item.listMapping) {\n            // Skip a child context with exactly the same mapping\n            continue;\n         }\n         //console.log(\"Generating lists for \"+item.subject+\", tag \"+item.parent.localName);\n         for (var predicate in item.listMapping) {\n            var list = item.listMapping[predicate];\n            if (list.length==0) {\n               this.addTriple(this.target,item.parent,item.subject,predicate,{ type: this.objectURI, value: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\" });\n               continue;\n            }\n            var bnodes = [];\n            for (var i=0; i<list.length; i++) {\n               bnodes.push(this.newBlankNode());\n               this.newSubject(this.target,item.parent,bnodes[i]);\n            }\n            for (var i=0; i<bnodes.length; i++) {\n               this.addTriple(this.target,item.parent,bnodes[i],\"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\",list[i]);\n               this.addTriple(this.target,item.parent,bnodes[i],\"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\",{ type: this.objectURI , value: (i+1)<bnodes.length ? bnodes[i+1] : \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\" });\n            }\n            this.addTriple(this.target,item.parent,item.subject,predicate,{ type: this.objectURI, value: bnodes[0] });\n         }\n         continue;\n      }\n      var current = item.current;\n      var context = item.context;\n\n      //console.log(\"Tag: \"+current.localName+\", listMapping=\"+JSON.stringify(context.listMapping));\n\n      // Sequence Step 1\n      var skip = false;\n      var newSubject = null;\n      var currentObjectResource = null;\n      var typedResource = null;\n      var prefixes = context.prefixes;\n      var prefixesCopied = false;\n      var incomplete = [];\n      var listMapping = context.listMapping;\n      var listMappingDifferent = context.parent ? false : true;\n      var language = context.language;\n      var vocabulary = context.vocabulary;\n\n      // TODO: the \"base\" element may be used for HTML+RDFa 1.1\n      var base = this.parseURI(current.baseURI);\n      current.subject = null;\n\n      // Sequence Step 2: set the default vocabulary\n      var vocabAtt = current.getAttributeNode(\"vocab\");\n      if (vocabAtt) {\n         var value = this.trim(vocabAtt.value);\n         if (value.length>0) {\n            vocabulary = value;\n            var baseSubject = base.spec;\n            this.newSubject(this.target,current,baseSubject);\n            this.addTriple(this.target,current,baseSubject,\"http://www.w3.org/ns/rdfa#usesVocabulary\",{ type: this.objectURI , value: vocabulary});\n         } else {\n            vocabulary = this.vocabulary;\n         }\n      }\n\n      // Sequence Step 3: IRI mappings\n      // handle xmlns attributes\n      for (var i=0; i<current.attributes.length; i++) {\n         var att = current.attributes[i];\n         //if (att.namespaceURI==\"http://www.w3.org/2000/xmlns/\") {\n         if (att.nodeName.charAt(0)==\"x\" && att.nodeName.indexOf(\"xmlns:\")==0) {\n            if (!prefixesCopied) {\n               prefixes = this.copyMappings(prefixes);\n               prefixesCopied = true;\n            }\n            var prefix = att.nodeName.substring(6);\n            // TODO: resolve relative?\n            prefixes[prefix] = this.trim(att.value);\n         }\n      }\n      // Handle prefix mappings (@prefix)\n      var prefixAtt = current.getAttributeNode(\"prefix\");\n      if (prefixAtt) {\n         if (!prefixesCopied) {\n            prefixes = this.copyMappings(prefixes);\n            prefixesCopied = true;\n         }\n         this.parsePrefixMappings(prefixAtt.value,prefixes);\n      }\n\n\n      // Sequence Step 4: language\n      var xmlLangAtt = null;\n      for (var i=0; !xmlLangAtt && i<this.langAttributes.length; i++) {\n         xmlLangAtt = current.getAttributeNodeNS(this.langAttributes[i].namespaceURI,this.langAttributes[i].localName);\n      }\n      if (xmlLangAtt) {\n         var value = this.trim(xmlLangAtt.value);\n         if (value.length>0) {\n            language = value;\n         }\n      }\n\n      var relAtt = current.getAttributeNode(\"rel\");\n      var revAtt = current.getAttributeNode(\"rev\");\n      var typeofAtt = current.getAttributeNode(\"typeof\");\n      var propertyAtt = current.getAttributeNode(\"property\");\n      var datatypeAtt = current.getAttributeNode(\"datatype\");\n      var contentAtt = null;\n      for (var i=0; !contentAtt && i<this.contentAttributes.length; i++) {\n         contentAtt = current.getAttributeNode(this.contentAttributes[i]);\n      }\n      var aboutAtt = current.getAttributeNode(\"about\");\n      var srcAtt = current.getAttributeNode(\"src\");\n      var resourceAtt = current.getAttributeNode(\"resource\");\n      var hrefAtt = current.getAttributeNode(\"href\");\n      var inlistAtt = current.getAttributeNode(\"inlist\");\n\n      if (relAtt || revAtt) {\n         // Sequence Step 6: establish new subject and value\n         if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value,prefixes,base);\n         }\n         if (typeofAtt) {\n            typedResource = newSubject;\n         }\n         if (!newSubject) {\n            if (current.parentNode.nodeType==Node.DOCUMENT_NODE) {\n               newSubject = current.baseURI;\n            } else if (context.parentObject) {\n               // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n               newSubject = current.parentNode.baseURI==context.parentObject ? current.baseURI : context.parentObject;\n            }\n         }\n         if (resourceAtt) {\n            currentObjectResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value,prefixes,base);\n         }\n\n         if (!currentObjectResource) {\n            if (hrefAtt) {\n               currentObjectResource = this.resolveAndNormalize(base,hrefAtt.value);\n            } else if (srcAtt) {\n               currentObjectResource = this.resolveAndNormalize(base,srcAtt.value);\n            } else if (typeofAtt && !aboutAtt && !(this.inXHTMLMode && (current.localName==\"head\" || current.localName==\"body\"))) {\n               currentObjectResource = this.newBlankNode();\n            }\n         }\n         if (typeofAtt && !aboutAtt && this.inXHTMLMode && (current.localName==\"head\" || current.localName==\"body\")) {\n            typedResource = newSubject;\n         } else if (typeofAtt && !aboutAtt) {\n            typedResource = currentObjectResource;\n         }\n\n      } else if (propertyAtt && !contentAtt && !datatypeAtt) {\n         // Sequence Step 5.1: establish a new subject\n         if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value,prefixes,base);\n            if (typeofAtt) {\n               typedResource = newSubject;\n            }\n         }\n         if (!newSubject && current.parentNode.nodeType==Node.DOCUMENT_NODE) {\n            newSubject = current.baseURI;\n            if (typeofAtt) {\n               typedResource = newSubject;\n            }\n         } else if (!newSubject && context.parentObject) {\n            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n            newSubject = current.parentNode.baseURI==context.parentObject ? current.baseURI : context.parentObject;\n         }\n         if (typeofAtt && !typedResource) {\n            if (resourceAtt) {\n               typedResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value,prefixes,base);\n            }\n            if (!typedResource &&hrefAtt) {\n               typedResource = this.resolveAndNormalize(base,hrefAtt.value);\n            }\n            if (!typedResource && srcAtt) {\n               typedResource = this.resolveAndNormalize(base,srcAtt.value);\n            }\n            if (!typedResource && this.inXHTMLMode && (current.localName==\"head\" || current.localName==\"body\")) {\n               typedResource = newSubject;\n            }\n            if (!typedResource) {\n               typedResource = this.newBlankNode();\n            }\n            currentObjectResource = typedResource;\n         }\n         //console.log(current.localName+\", newSubject=\"+newSubject+\", typedResource=\"+typedResource+\", currentObjectResource=\"+currentObjectResource);\n      } else {\n         // Sequence Step 5.2: establish a new subject\n         if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value,prefixes,base);\n         }\n         if (!newSubject && resourceAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value,prefixes,base);\n         }\n         if (!newSubject && hrefAtt) {\n            newSubject = this.resolveAndNormalize(base,hrefAtt.value);\n         }\n         if (!typedResource && srcAtt) {\n            newSubject = this.resolveAndNormalize(base,srcAtt.value);\n         }\n         if (!newSubject) {\n            if (current.parentNode.nodeType==Node.DOCUMENT_NODE) {\n               newSubject = current.baseURI;\n            } else if (this.inXHTMLMode && (current.localName==\"head\" || current.localName==\"body\")) {\n               newSubject = current.parentNode.baseURI==context.parentObject ? current.baseURI : context.parentObject;\n            } else if (typeofAtt) {\n               newSubject = this.newBlankNode();\n            } else if (context.parentObject) {\n               // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n               newSubject = current.parentNode.baseURI==context.parentObject ? current.baseURI : context.parentObject;\n               if (!propertyAtt) {\n                  skip = true;\n               }\n            }\n         }\n         if (typeofAtt) {\n            typedResource = newSubject;\n         }\n      }\n\n      //console.log(current.tagName+\": newSubject=\"+newSubject+\", currentObjectResource=\"+currentObjectResource+\", skip=\"+skip);\n\n      if (newSubject) {\n         this.newSubject(this.target,current,newSubject);\n         current.subject = newSubject;\n      }\n\n      // Sequence Step 7: generate type triple\n      if (typedResource) {\n         var values = this.tokenize(typeofAtt.value);\n         for (var i=0; i<values.length; i++) {\n            var object = this.parseTermOrCURIEOrAbsURI(values[i],vocabulary,context.terms,prefixes,base);\n            if (object) {\n               this.addTriple(this.target,current,typedResource,this.typeURI,{ type: this.objectURI , value: object});\n            }\n         }\n      }\n\n      // Sequence Step 8: new list mappings if there is a new subject\n      //console.log(\"Step 8: newSubject=\"+newSubject+\", context.parentObject=\"+context.parentObject);\n      if (newSubject && newSubject!=context.parentObject) {\n         //console.log(\"Generating new list mapping for \"+newSubject);\n         listMapping = {};\n         listMappingDifferent = true;\n      }\n\n      // Sequence Step 9: generate object triple\n      if (currentObjectResource) {\n         if (relAtt && inlistAtt) {\n            var values = this.tokenize(relAtt.value);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  var list = listMapping[predicate];\n                  if (!list) {\n                     list = [];\n                     listMapping[predicate] = list;\n                  }\n                  list.push({ type: this.objectURI, value: currentObjectResource });\n               }\n            }\n         } else if (relAtt) {\n            var values = this.tokenize(relAtt.value);\n            //alert(newSubject+\" \"+relAtt.value+\" \"+currentObjectResource+\" \"+values.length);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  this.addTriple(this.target,current,newSubject,predicate,{ type: this.objectURI, value: currentObjectResource});\n               }\n            }\n         }\n         if (revAtt) {\n            var values = this.tokenize(revAtt.value);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  this.addTriple(this.target,current,currentObjectResource, predicate, { type: this.objectURI, value: newSubject});\n               }\n            }\n         }\n      } else {\n         // Sequence Step 10: incomplete triples\n         if (newSubject && !currentObjectResource && (relAtt || revAtt)) {\n            currentObjectResource = this.newBlankNode();\n            //alert(current.tagName+\": generated blank node, newSubject=\"+newSubject+\" currentObjectResource=\"+currentObjectResource);\n         }\n         if (relAtt && inlistAtt) {\n            var values = this.tokenize(relAtt.value);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  var list = listMapping[predicate];\n                  if (!list) {\n                     list = [];\n                     listMapping[predicate] = list;\n                  }\n                  //console.log(\"Adding incomplete list for \"+predicate);\n                  incomplete.push({ predicate: predicate, list: list });\n               }\n            }\n         } else if (relAtt) {\n            var values = this.tokenize(relAtt.value);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  incomplete.push({ predicate: predicate, forward: true });\n               }\n\n            }\n         }\n         if (revAtt) {\n            var values = this.tokenize(revAtt.value);\n            for (var i=0; i<values.length; i++) {\n               var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n               if (predicate) {\n                  incomplete.push({ predicate: predicate, forward: false });\n               }\n            }\n         }\n      }\n\n      // Step 11: Current property values\n      if (propertyAtt) {\n         // TODO: for HTML+RDFa 1.1, the datatype must be set if the content comes from the datetime attribute\n         //alert(current.baseURI+\" \"+newSubject+\" \"+propertyAtt.value);\n         var datatype = null;\n         var content = null;\n         if (datatypeAtt) {\n            datatype = datatypeAtt.value==\"\" ? this.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(datatypeAtt.value,vocabulary,context.terms,prefixes,base);\n            content = datatype==this.XMLLiteralURI ? null : (contentAtt ? contentAtt.value : current.textContent);\n         } else if (contentAtt) {\n            datatype = this.PlainLiteralURI;\n            content = contentAtt.value;\n         } else if (!relAtt && !revAtt && !contentAtt) {\n            if (resourceAtt) {\n               content = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value,prefixes,base);\n            }\n            if (!content && hrefAtt) {\n               content = this.resolveAndNormalize(base,hrefAtt.value);\n            } else if (!content && srcAtt) {\n               content = this.resolveAndNormalize(base,srcAtt.value);\n            }\n            if (content) {\n               datatype = this.objectURI;\n            }\n         }\n         if (!datatype) {\n            if (typeofAtt && !aboutAtt) {\n               datatype = this.objectURI;\n               content = typedResource;\n            } else {\n               datatype = this.PlainLiteralURI;\n               content = current.textContent;\n            }\n         }\n         var values = this.tokenize(propertyAtt.value);\n         for (var i=0; i<values.length; i++) {\n            var predicate = this.parsePredicate(values[i],vocabulary,context.terms,prefixes,base);\n            if (predicate) {\n               if (inlistAtt) {\n                  var list = listMapping[predicate];\n                  if (!list) {\n                     list = [];\n                     listMapping[predicate] = list;\n                  }\n                  list.push(datatype==this.XMLLiteralURI ? { type: this.XMLLiteralURI, value: current.childNodes} : { type: datatype ? datatype : this.PlainLiteralURI, value: content, language: language});\n               } else {\n                  if (datatype==this.XMLLiteralURI) {\n                     this.addTriple(this.target,current,newSubject,predicate,{ type: this.XMLLiteralURI, value: current.childNodes});\n                  } else {\n                     this.addTriple(this.target,current,newSubject,predicate,{ type: datatype ? datatype : this.PlainLiteralURI, value: content, language: language});\n                     //console.log(newSubject+\" \"+predicate+\"=\"+content);\n                  }\n               }\n            }\n         }\n      }\n\n      // Sequence Step 12: complete incomplete triples with new subject\n      if (newSubject && !skip) {\n         for (var i=0; i<context.incomplete.length; i++) {\n            if (context.incomplete[i].list) {\n               //console.log(\"Adding subject \"+newSubject+\" to list for \"+context.incomplete[i].predicate);\n               // TODO: it is unclear what to do here\n               context.incomplete[i].list.push({ type: this.objectURI, value: newSubject });\n            } else if (context.incomplete[i].forward) {\n               //console.log(current.tagName+\": completing forward triple \"+context.incomplete[i].predicate+\" with object=\"+newSubject);\n               this.addTriple(this.target,current,context.subject,context.incomplete[i].predicate, { type: this.objectURI, value: newSubject});\n            } else {\n               //console.log(current.tagName+\": completing reverse triple with object=\"+context.subject);\n               this.addTriple(this.target,current,newSubject,context.incomplete[i].predicate,{ type: this.objectURI, value: context.subject});\n            }\n         }\n      }\n\n      var childContext = null;\n      var listSubject = newSubject;\n      if (skip) {\n         // TODO: should subject be null?\n         childContext = this.push(context,context.subject);\n         // TODO: should the entObject be passed along?  If not, then intermediary children will keep properties from being associated with incomplete triples.\n         // TODO: Verify: if the current baseURI has changed and the parentObject is the parent's base URI, then the baseURI should change\n         childContext.parentObject = current.parentNode.baseURI==context.parentObject ? current.baseURI : context.parentObject;\n         childContext.incomplete = context.incomplete;\n         childContext.language = language;\n         childContext.prefixes = prefixes;\n         childContext.vocabulary = vocabulary;\n      } else {\n         childContext = this.push(context,newSubject);\n         childContext.parentObject = currentObjectResource ? currentObjectResource : (newSubject ? newSubject : context.subject);\n         childContext.prefixes = prefixes;\n         childContext.incomplete = incomplete;\n         if (currentObjectResource) {\n            //console.log(\"Generating new list mapping for \"+currentObjectResource);\n            listSubject = currentObjectResource;\n            listMapping = {};\n            listMappingDifferent = true;\n         }\n         childContext.listMapping = listMapping;\n         childContext.language = language;\n         childContext.vocabulary = vocabulary;\n      }\n      if (listMappingDifferent) {\n         //console.log(\"Pushing list parent \"+current.localName);\n         queue.unshift({ parent: current, context: context, subject: listSubject, listMapping: listMapping});\n      }\n      for (var child = current.lastChild; child; child = child.previousSibling) {\n         if (child.nodeType==Node.ELEMENT_NODE) {\n            //console.log(\"Pushing child \"+child.localName);\n            queue.unshift({ current: child, context: childContext});\n         }\n      }\n   }\n   for (var subject in this.target.triplesGraph) {\n      var snode = this.target.triplesGraph[subject];\n      if (Object.size(snode.predicates)==0) {\n         delete this.target.triplesGraph[subject];\n      }\n   }\n}\n\n\nRDFaProcessor.prototype.push = function(parent,subject) {\n   return {\n      parent: parent,\n      subject: subject ? subject : (parent ? parent.subject : null),\n      parentObject: null,\n      incomplete: [],\n      listMapping: parent ? parent.listMapping : {},\n      language: parent ? parent.language : this.language,\n      prefixes: parent ? parent.prefixes : this.target.prefixes,\n      terms: parent ? parent.terms : this.target.terms,\n      vocabulary: parent ? parent.voabulary : this.vocabulary\n   };\n};\n\nfunction RDFaEnvironment(owner) {\n   this.query = function(query,template) {\n      if (!query) {\n         return owner.getProjections(template);\n      }\n      var projections = [];\n      for (var subject in owner._data_.triplesGraph) {\n         var snode = owner._data_.triplesGraph[subject];\n         for (var key in query) {\n            var predicate = owner._data_.curieParser.parse(key,true);\n            var pnode = snode.predicates[predicate];\n            if (!pnode) {\n               snode = null;\n               break;\n            }\n            var value = owner._data_.curieParser.parse(query[key],false);\n            var object = null;\n            for (var i=0; !object && i<pnode.objects.length; i++) {\n               if (pnode.objects[i].value==value) {\n                  object = pnode.objects[i];\n               }\n            }\n            if (!object) {\n               snode = null;\n               break;\n            }\n         }\n         if (snode) {\n            projections.push(DocumentData.toProjection(owner,snode,template));\n         }\n      }\n      return projections;\n   }\n}\n\nfunction Projection(owner,subject) {\n   this._data_ = {\n      owner: owner,\n      subject: subject,\n      properties: {}\n   };\n}\n\nProjection.prototype.getProperties = function() {\n   var propertyNames = [];\n   for (var property in this._data_.properties) {\n      propertyNames.push(property);\n   }\n   return propertyNames;\n}\n\nProjection.prototype.getSubject = function() {\n   return this._data_.subject;\n}\n\nProjection.prototype.get = function(uriOrCurie) {\n   var property = this._data_.owner._data_.curieParser.parse(uriOrCurie,true);\n   var objects = this._data_.properties[property];\n   return objects ? objects[0] : null;\n}\n\nProjection.prototype.getAll = function(uriOrCurie) {\n   var property = this._data_.owner._data_.curieParser.parse(uriOrCurie,true);\n   return this._data_.properties[property];\n}\n\nDocumentData.prototype = new URIResolver();\nDocumentData.prototype.constructor = DocumentData;\nfunction DocumentData (uri) {\n   this._data_ = {\n      tripleCount: 0,\n      triplesGraph: {},\n      prefixes: {},\n      terms: {},\n      baseURI: this.parseURI(uri)\n   };\n   var dataContext = this._data_;\n   this._data_.curieParser = {\n      trim: function(str) {\n         return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n      },\n      parse: function(value,resolve) {\n         value = this.trim(value);\n         if (value.charAt(0)=='[' && value.charAt(value.length-1)==']') {\n            value = value.substring(1,value.length-1);\n         }\n         var colon = value.indexOf(\":\");\n         if (colon>=0) {\n            var prefix = value.substring(0,colon);\n            if (prefix==\"\") {\n               // default prefix\n               var uri = dataContext.prefixes[\"\"];\n               return uri ? uri+value.substring(colon+1) : null;\n            } else if (prefix==\"_\") {\n               // blank node\n               return \"_:\"+value.substring(colon+1);\n            } else if (DocumentData.NCNAME.test(prefix)) {\n               var uri = dataContext.prefixes[prefix];\n               if (uri) {\n                  return uri+value.substring(colon+1);\n               }\n            }\n         }\n\n         return resolve ? dataContext.baseURI.resolve(value) : value;\n      }\n   };\n   Object.defineProperty(this,\"rdfa\", {\n      value: new RDFaEnvironment(this),\n      writable: false,\n      configurable: false,\n      enumerable: true\n   });\n}\n\nDocumentData.nameChar = '[-A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u10000-\\uEFFFF\\.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]';\nDocumentData.nameStartChar = '[\\u0041-\\u005A\\u0061-\\u007A\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF\\u0100-\\u0131\\u0134-\\u013E\\u0141-\\u0148\\u014A-\\u017E\\u0180-\\u01C3\\u01CD-\\u01F0\\u01F4-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02BB-\\u02C1\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7-\\u04C8\\u04CB-\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8-\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0586\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0641-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5-\\u06E6\\u0905-\\u0939\\u093D\\u0958-\\u0961\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AE0\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60-\\u0D61\\u0E01-\\u0E2E\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EAE\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0F40-\\u0F47\\u0F49-\\u0F69\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100\\u1102-\\u1103\\u1105-\\u1107\\u1109\\u110B-\\u110C\\u110E-\\u1112\\u113C\\u113E\\u1140\\u114C\\u114E\\u1150\\u1154-\\u1155\\u1159\\u115F-\\u1161\\u1163\\u1165\\u1167\\u1169\\u116D-\\u116E\\u1172-\\u1173\\u1175\\u119E\\u11A8\\u11AB\\u11AE-\\u11AF\\u11B7-\\u11B8\\u11BA\\u11BC-\\u11C2\\u11EB\\u11F0\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A-\\u212B\\u212E\\u2180-\\u2182\\u3041-\\u3094\\u30A1-\\u30FA\\u3105-\\u312C\\uAC00-\\uD7A3\\u4E00-\\u9FA5\\u3007\\u3021-\\u3029_]';\nDocumentData.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar + RDFaProcessor.nameChar + '*$');\n\nDocumentData.toProjection = function(owner,snode,template) {\n\n   var projection = new Projection(owner,snode.subject);\n   for (var predicate in snode.predicates) {\n      var pnode = snode.predicates[predicate];\n      var values = [];\n      projection._data_.properties[predicate] = values;\n      for (var i=0; i<pnode.objects.length; i++) {\n         values.push(pnode.objects[i].value);\n      }\n   }\n   if (template) {\n      for (var key in template) {\n         var predicate = template[key];\n         predicate = owner._data_.curieParser.parse(predicate,true);\n         var values = projection._data_.properties[predicate];\n         if (values) {\n            // TODO: API issue: is this the first value or all values?\n            projection[key] = values.length==1 ? values[0] : values;\n         }\n      }\n   }\n   return projection;\n};\n\n\nDocumentData.prototype.getProperties = function(subject) {\n\n   var properties = [];\n\n   if (subject) {\n      subject = this._data_.curieParser.parse(subject,true);\n      snode = this._data_.triplesGraph[subject];\n      if (snode) {\n         for (var predicate in snode.predicates) {\n            properties.push(predicate);\n         }\n      }\n   } else {\n      var uniqueProperties = {};\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         if (snode) {\n            for (var predicate in snode.predicates) {\n               if (!uniqueProperties[predicate]) {\n                  uniqueProperties[predicate] = true;\n                  properties.push(predicate);\n               }\n            }\n         }\n      }\n   }\n   return properties;\n};\n\nDocumentData.prototype.getSubjects = function(property,value) {\n   var subjects = [];\n   if (property) {\n      property = this._data_.curieParser.parse(property,true);\n   }\n   if (property && value) {\n      var expanded = this._data_.curieParser.parse(value,true);\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         var pnode = snode.predicates[property];\n         if (pnode) {\n            for (var i=0; i<pnode.objects.length; i++) {\n               if (pnode.objects[i].value==value || pnode.objects[i].value==expanded) {\n                  subjects.push(subject);\n                  break;\n               }\n            }\n         }\n      }\n   } else if (property) {\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         var pnode = snode.predicates[property];\n         if (pnode) {\n            subjects.push(subject);\n         }\n      }\n   } else if (value) {\n      var expanded = this._data_.curieParser.parse(value,true);\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         for (var predicate in snode.predicates) {\n            var pnode = subject.predicates[predicate];\n            if (pnode) {\n               var object = null;\n               for (var i=0; !object && i<pnode.objects.length; i++) {\n                  if (pnode.objects[i].value==value || node.objects[i].value==expanded) {\n                     object = pnode.objects[i];\n                  }\n               }\n               if (object) {\n                  subjects.push(subject);\n                  break;\n               }\n            }\n         }\n      }\n   } else {\n      for (var subject in this._data_.triplesGraph) {\n         subjects.push(subject);\n      }\n   }\n   return subjects;\n};\n\nDocumentData.prototype.getValues = function(subject,property) {\n   var values = [];\n   if (property) {\n      property = this._data_.curieParser.parse(property,true);\n   }\n   if (subject) {\n      subject = this._data_.curieParser.parse(subject,true);\n      var snode = this._data_.triplesGraph[subject];\n      if (snode) {\n         if (property) {\n            var pnode = snode.predicates[property];\n            if (pnode) {\n               for (var i=0; i<pnode.objects.length; i++) {\n                  values.push(pnode.objects[i].value);\n               }\n            }\n         } else {\n            for (var predicate in snode.predicates) {\n               var pnode = snode.predicates[predicate];\n               for (var i=0; i<pnode.objects.length; i++) {\n                  values.push(pnode.objects[i].value);\n               }\n            }\n         }\n      }\n   } else if (property) {\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         var pnode = snode.predicates[property];\n         if (pnode) {\n            for (var i=0; i<pnode.objects.length; i++) {\n               values.push(pnode.objects[i].value);\n            }\n         }\n      }\n   } else {\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         for (var predicate in snode.predicates) {\n            var pnode = snode.predicates[predicate];\n            for (var i=0; i<pnode.objects.length; i++) {\n               values.push(pnode.objects[i].value);\n            }\n         }\n      }\n   }\n   return values;\n};\n\nDocumentData.prototype.setMapping = function(prefix,uri) {\n   this._data_.prefixes[prefix] = uri;\n};\n\nDocumentData.prototype.getSubjectTriples = function(subject) {\n   if (!subject) { return null; }\n   subject = this._data_.curieParser.parse(subject,true);\n   var triples = { subject: subject, predicates: {} };\n\n   var snode = this._data_.triplesGraph[subject];\n   if (!snode) {\n      return null;\n   }\n\n   for (var predicate in snode.predicates) {\n      var pnode = snode.predicates[predicate];\n      var objects = [];\n      triples.predicates[predicate] = { predicate: predicate, objects: objects };\n      for (var i=0; i<pnode.objects.length; i++) {\n         var object = pnode.objects[i];\n         if (object.type==this.XMLLiteralURI) {\n            var serializer = new XMLSerializer();\n            var value = \"\";\n            for (var x=0; x<object.value.length; x++) {\n               if (object.value[x].nodeType==Node.ELEMENT_NODE) {\n                  value += serializer.serializeToString(object.value[x]);\n               } else if (object.value[x].nodeType==Node.TEXT_NODE) {\n                  value += object.value[x].nodeValue;\n               }\n            }\n            objects.push({ type: object.type, value: value });\n         } else {\n            objects.push({ type: object.type, value: object.value });\n         }\n      }\n   }\n\n   return triples;\n}\n\nDocumentData.prototype.getProjection = function(subject, template) {\n   if (!subject) { return null }\n\n   subject = this._data_.curieParser.parse(subject,true);\n\n   var snode = this._data_.triplesGraph[subject];\n   if (!snode) {\n      return null;\n   }\n\n   return DocumentData.toProjection(this,snode,template);\n}\n\nDocumentData.prototype.getProjections = function(property, value, template) {\n   if (property) {\n      property = this._data_.curieParser.parse(property,true);\n   }\n   var projections = [];\n   if (typeof value == \"undefined\" && typeof template == \"undefined\") {\n      template = property;\n   }\n   if (property && value) {\n      var expanded = this._data_.curieParser.parse(value,true);\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         var pnode = snode.predicates[property];\n         if (pnode) {\n            for (var i=0; i<pnode.objects.length; i++) {\n               if (pnode.objects[i].value==value || pnode.objects[i].value==expanded) {\n                  projections.push(DocumentData.toProjection(this,snode,template));\n                  break;\n               }\n            }\n         }\n      }\n   } else if (property) {\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         if (snode.predicates[property]) {\n            projections.push(DocumentData.toProjection(this,snode,template));\n         }\n      }\n   } else {\n      for (var subject in this._data_.triplesGraph) {\n         var snode = this._data_.triplesGraph[subject];\n         projections.push(DocumentData.toProjection(this,snode,template));\n      }\n   }\n   return projections;\n};\n\nDocumentData.attach = function(target) {\n\n   Object.defineProperty(target,\"data\", {\n      value: new DocumentData(target.baseURI || target.location.href),\n      writable: false,\n      configurable: false,\n      enumerable: true\n   });\n\n   target.getElementsByType = function(type) {\n   /* TODO: should this return all the subject origins or just that which had the typeof on it?\n      var nodes = [];\n      nodes.item = function(index) {\n         return this[index];\n      };\n      type = this.data._data_.curieParser.parse(type,true);\n      for (var subject in this.data._data_.triplesGraph) {\n         var snode = this.data._data_.triplesGraph[subject];\n         var pnode = snode.predicates[\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"];\n         if (pnode && pnode.objects.length>0 && pnode.objects[0].value==type) {\n            for (var i=0; i<snode.origins.length; i++) {\n               nodes.push(snode.origins[i]);\n            }\n         }\n      }\n      return nodes;\n      */\n      return this.getElementsByProperty(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",type);\n   };\n\n   target.getElementsBySubject = function(subject) {\n      var nodes = [];\n      nodes.item = function(index) {\n         return this[index];\n      };\n      subject = this.data._data_.curieParser.parse(subject,true);\n      var snode = this.data._data_.triplesGraph[subject];\n      if (snode) {\n         for (var i=0; i<snode.origins.length; i++) {\n            nodes.push(snode.origins[i]);\n         }\n      }\n      return nodes;\n   };\n\n   target.getElementsByProperty = function(property,value) {\n      var nodes = [];\n      nodes.item = function(index) {\n         return this[index];\n      };\n      if (value) {\n         value = this.data._data_.curieParser.parse(value,false);\n      }\n      var noValue = typeof value == \"undefined\";\n      property = this.data._data_.curieParser.parse(property,true);\n      for (var subject in this.data._data_.triplesGraph) {\n         var snode = this.data._data_.triplesGraph[subject];\n         var pnode = snode.predicates[property];\n         if (pnode) {\n            for (var i=0; i<pnode.objects.length; i++) {\n               if (noValue || pnode.objects[i].value==value) {\n                  nodes.push(pnode.objects[i].origin);\n               }\n            }\n         }\n      }\n      return nodes;\n   };\n\n   target.getElementSubject = function(e) {\n      for (var subject in this.data._data_.triplesGraph) {\n         var snode = this.data._data_.triplesGraph[subject];\n         for (predicate in snode.predicates) {\n            var pnode = snode.predicates[predicate];\n            for (var i=0; i<pnode.objects.length; i++) {\n               if (pnode.objects[i].origin==e) {\n                  return subject;\n               }\n            }\n         }\n      }\n      return null;\n   };\n}\n\n\nvar hasFeature = document.implementation.hasFeature;\ndocument.implementation.hasFeature = function(feature,version) {\n   if (feature==\"RDFaAPI\" && version==\"1.1\") { return true; }\n   return hasFeature(feature,version);\n}\n\nvar loaded = document.data ? true : false;\nif (document.head && !_nodejs) {\n   var meta = document.createElement(\"meta\");\n   meta.setAttribute(\"name\",\"green-turtle-rdfa-message\");\n   document.head.appendChild(meta);\n   var makeEvent = function() {\n      var event = document.createEvent(\"Event\");\n      event.initEvent(\"green-turtle-rdfa-extension\",true,true);\n      return event;\n   }\n   meta.addEventListener(\"green-turtle-rdfa-document\",function(event) {\n      var message = JSON.parse(meta.getAttribute(\"content\"));\n      if (message.type==\"status\") {\n         var doneEvent = makeEvent();\n         meta.setAttribute(\"content\",'{ \"type\": \"status\", \"loaded\": '+loaded+', \"count\": '+document.data._data_.tripleCount+' }');\n         setTimeout(function() { meta.dispatchEvent(doneEvent); },1);\n      } else if (message.type==\"get-subjects\") {\n         var subjects = document.data.getSubjects();\n         meta.setAttribute(\"content\",'{ \"type\": \"subjects\", \"subjects\": '+JSON.stringify(subjects)+' }');\n         var event = makeEvent();\n         setTimeout(function() { meta.dispatchEvent(event); },1);\n      } else if (message.type==\"get-subject\") {\n         var triples = null;\n         if (document.data.getSubjectTriples) {\n            // Use the Green Turtle triples extension\n            triples = document.data.getSubjectTriples(message.subject);\n         } else {\n            // Do it the hard way!\n            var subjects = {};\n            var subjectList = document.data.getSubjects();\n            for (var i=0; i<subjectList.length; i++) {\n               subjects[subjectList[i]] = true;\n            }\n            triples = { subject: message.subject, predicates: {} };\n            var projection = document.data.getProjection(message.subject);\n            var properties = projection.getProperties();\n            for (var i=0; i<properties.length; i++) {\n               var objects = [];\n               triples.predicates[properties[i]] = { predicate: predicate, objects: objects };\n               var values = projection.getAll(properties[i]);\n               for (var j=0; j<values.length; j++) {\n                  if (subjects[values[j]]) {\n                     objects.push({type: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#object\",value: values[j]});\n                  } else {\n                     objects.push({ type:  \"http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral\", value: values[j]});\n                  }\n               }\n            }\n         }\n         var response = { type: \"subject\", subject: message.subject, triples: triples };\n         meta.setAttribute(\"content\",JSON.stringify(response));\n         var event = makeEvent();\n         setTimeout(function() { meta.dispatchEvent(event); },1);\n      }\n   },false);\n}\n\nif (update || !document.data) {\n   if (!update) {\n      DocumentData.attach(document);\n   }\n\n   var processor = new RDFaProcessor(document.data._data_);\n   processor.process(document.documentElement);\n   loaded = true;\n}\n\n};\n\n// using node.js\nif(_nodejs) {\n  module.exports = RDFa;\n  if(typeof Node === 'undefined') {\n    var Node = {\n      ELEMENT_NODE: 1,\n      TEXT_NODE: 3,\n      DOCUMENT_NODE: 9\n    };\n  }\n}\n// using browser\nelse {\n  if (document.readyState==\"loading\") {\n     window.addEventListener(\"load\",function() {\n        RDFa.attach(document);\n     },false);\n  } else {\n     RDFa.attach(document);\n  }\n}\n","/*\n * pkginfo.js: Top-level include for the pkginfo module\n *\n * (C) 2011, Charlie Robbins\n *\n */\n \nvar fs = require('fs'),\n    path = require('path');\n\n//\n// ### function pkginfo ([options, 'property', 'property' ..])\n// #### @pmodule {Module} Parent module to read from.\n// #### @options {Object|Array|string} **Optional** Options used when exposing properties.\n// #### @arguments {string...} **Optional** Specified properties to expose.\n// Exposes properties from the package.json file for the parent module on \n// it's exports. Valid usage:\n//\n// `require('pkginfo')()`\n//\n// `require('pkginfo')('version', 'author');`\n//\n// `require('pkginfo')(['version', 'author']);`\n//\n// `require('pkginfo')({ include: ['version', 'author'] });`\n//\nvar pkginfo = module.exports = function (pmodule, options) {\n  var args = [].slice.call(arguments, 2).filter(function (arg) {\n    return typeof arg === 'string';\n  });\n  \n  //\n  // **Parse variable arguments**\n  //\n  if (Array.isArray(options)) {\n    //\n    // If the options passed in is an Array assume that\n    // it is the Array of properties to expose from the\n    // on the package.json file on the parent module.\n    //\n    options = { include: options };\n  }\n  else if (typeof options === 'string') {\n    //\n    // Otherwise if the first argument is a string, then\n    // assume that it is the first property to expose from\n    // the package.json file on the parent module.\n    //\n    options = { include: [options] };\n  }\n  \n  //\n  // **Setup default options**\n  //\n  options = options || {};\n  \n  // ensure that includes have been defined\n  options.include = options.include || [];\n  \n  if (args.length > 0) {\n    //\n    // If additional string arguments have been passed in\n    // then add them to the properties to expose on the \n    // parent module. \n    //\n    options.include = options.include.concat(args);\n  }\n  \n  var pkg = pkginfo.read(pmodule, options.dir).package;\n  Object.keys(pkg).forEach(function (key) {\n    if (options.include.length > 0 && !~options.include.indexOf(key)) {\n      return;\n    }\n    \n    if (!pmodule.exports[key]) {\n      pmodule.exports[key] = pkg[key];\n    }\n  });\n  \n  return pkginfo;\n};\n\n//\n// ### function find (dir)\n// #### @pmodule {Module} Parent module to read from.\n// #### @dir {string} **Optional** Directory to start search from.\n// Searches up the directory tree from `dir` until it finds a directory\n// which contains a `package.json` file. \n//\npkginfo.find = function (pmodule, dir) {\n  if (! dir) {\n    dir = path.dirname(pmodule.filename);\n  }\n  \n  var files = fs.readdirSync(dir);\n  \n  if (~files.indexOf('package.json')) {\n    return path.join(dir, 'package.json');\n  }\n  \n  if (dir === '/') {\n    throw new Error('Could not find package.json up from: ' + dir);\n  }\n  else if (!dir || dir === '.') {\n    throw new Error('Cannot find package.json from unspecified directory');\n  }\n  \n  return pkginfo.find(pmodule, path.dirname(dir));\n};\n\n//\n// ### function read (pmodule, dir)\n// #### @pmodule {Module} Parent module to read from.\n// #### @dir {string} **Optional** Directory to start search from.\n// Searches up the directory tree from `dir` until it finds a directory\n// which contains a `package.json` file and returns the package information.\n//\npkginfo.read = function (pmodule, dir) { \n  dir = pkginfo.find(pmodule, dir);\n  \n  var data = fs.readFileSync(dir).toString();\n      \n  return {\n    dir: dir, \n    package: JSON.parse(data)\n  };\n};\n\n//\n// Call `pkginfo` on this module and expose version.\n//\npkginfo(module, {\n  dir: __dirname,\n  include: ['version'],\n  target: pkginfo\n});","// Replace local require by a lazy loader\nvar globalRequire = require;\nrequire = function () {};\n\n// Expose submodules\nvar exports = module.exports = {\n  Lexer:        require('./lib/N3Lexer'),\n  Parser:       require('./lib/N3Parser'),\n  Writer:       require('./lib/N3Writer'),\n  Store:        require('./lib/N3Store'),\n  StreamParser: require('./lib/N3StreamParser'),\n  StreamWriter: require('./lib/N3StreamWriter'),\n  Util:         require('./lib/N3Util'),\n};\n\n// Load submodules on first access\nObject.keys(exports).forEach(function (submodule) {\n  Object.defineProperty(exports, submodule, {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      delete exports[submodule];\n      return exports[submodule] = globalRequire('./lib/N3' + submodule);\n    },\n  });\n});\n","// **N3Lexer** tokenizes N3 documents.\nvar fromCharCode = String.fromCharCode;\nvar immediately = typeof setImmediate === 'function' ? setImmediate :\n                  function setImmediate(func) { setTimeout(func, 0); };\n\n// Regular expression and replacement string to escape N3 strings.\n// Note how we catch invalid unicode sequences separately (they will trigger an error).\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)/g;\nvar escapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                           'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n                           '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n                           '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n                           '/': '/', '?': '?', '#': '#', '@': '@', '%': '%' };\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\n// ## Constructor\nfunction N3Lexer(options) {\n  if (!(this instanceof N3Lexer))\n    return new N3Lexer(options);\n\n  // In line mode (N-Triples or N-Quads), only simple features may be parsed\n  if (options && options.lineMode) {\n    // Don't tokenize special literals\n    this._tripleQuotedString = this._number = this._boolean = /$0^/;\n    // Swap the tokenize method for a restricted version\n    var self = this;\n    this._tokenize = this.tokenize;\n    this.tokenize = function (input, callback) {\n      this._tokenize(input, function (error, token) {\n        if (!error && /IRI|prefixed|literal|langcode|type|\\.|eof/.test(token.type))\n          callback && callback(error, token);\n        else\n          callback && callback(error || self._syntaxError(token.type, callback = null));\n      });\n    };\n  }\n}\n\nN3Lexer.prototype = {\n  // ## Regular expressions\n  // It's slightly faster to have these as properties than as in-scope variables.\n\n  _iri: /^<((?:[^>\\\\]|\\\\[uU])+)>/, // IRI with escape sequences; needs sanity check after unescaping\n  _unescapedIri: /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>/, // IRI without escape sequences; no unescaping\n  _unescapedString: /^\"[^\"\\\\]+\"(?=[^\"\\\\])/, // non-empty string without escape sequences\n  _singleQuotedString: /^\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"(?=[^\"\\\\])|^'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'(?=[^'\\\\])/,\n  _tripleQuotedString: /^\"\"(\"[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\")\"\"|^''('[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*')''/,\n  _langcode: /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i,\n  _prefix: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/,\n  _prefixed: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?=\\.?[,;\\s#()\\[\\]\\{\\}\"'<])/,\n  _blank: /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _number: /^[\\-+]?(?:\\d+\\.?\\d*([eE](?:[\\-\\+])?\\d+)|\\d*\\.?\\d+)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _boolean: /^(?:true|false)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _keyword: /^@[a-z]+(?=[\\s#<:])/,\n  _sparqlKeyword: /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<:])/i,\n  _shortPredicates: /^a(?=\\s+|<)/,\n  _newline: /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/,\n  _whitespace: /^[ \\t]+/,\n  _endOfFile: /^(?:#[^\\n\\r]*)?$/,\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback.\n  _tokenizeToEnd: function (callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually.\n    var input = this._input;\n    while (true) {\n      // Count and skip whitespace lines.\n      var whiteSpaceMatch;\n      while (whiteSpaceMatch = this._newline.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length), this._line++;\n      // Skip whitespace on current line.\n      if (whiteSpaceMatch = this._whitespace.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end.\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF.\n        if (inputFinished)\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character.\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, unescaped, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // Try to match a type.\n        if (input.length === 1) break;\n        else if (input[1] !== '^') return reportSyntaxError(this);\n        this._prevTokenType = '^';\n        // Move to type IRI or prefixed name.\n        input = input.substr(2);\n        if (input[0] !== '<') {\n          inconclusive = true;\n          break;\n        }\n        // Fall through in case the type is an IRI.\n\n      case '<':\n        // Try to find a full IRI without escape sequences.\n        if (match = this._unescapedIri.exec(input)) {\n          type = 'IRI';\n          value = match[1];\n        }\n        // Try to find a full IRI with escape sequences.\n        else if (match = this._iri.exec(input)) {\n          unescaped = this._unescape(match[1]);\n          if (unescaped === null || illegalIriChars.test(unescaped))\n            return reportSyntaxError(this);\n          type = 'IRI';\n          value = unescaped;\n        }\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' '))) {\n          type = 'prefixed';\n          prefix = '_';\n          value = match[1];\n        }\n        break;\n\n      case '\"':\n      case \"'\":\n        // Try to find a non-empty double-quoted literal without escape sequences.\n        if (match = this._unescapedString.exec(input)) {\n          type = 'literal';\n          value = match[0];\n        }\n        // Try to find any other literal wrapped in a pair of single or double quotes.\n        else if (match = this._singleQuotedString.exec(input)) {\n          unescaped = this._unescape(match[0]);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal';\n          value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        // Try to find a literal wrapped in three pairs of single or double quotes.\n        else if (match = this._tripleQuotedString.exec(input)) {\n          unescaped = match[1] || match[2];\n          // Count the newlines and advance line counter.\n          this._line += unescaped.split(/\\r\\n|\\r|\\n/).length - 1;\n          unescaped = this._unescape(unescaped);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal';\n          value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        break;\n\n      case '@':\n        // Try to find a language code.\n        if (this._prevTokenType === 'literal' && (match = this._langcode.exec(input))) {\n          type = 'langcode';\n          value = match[1];\n        }\n        // Try to find a keyword.\n        else if (match = this._keyword.exec(input)) {\n          type = match[0];\n        }\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation.\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot).\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number.\n        if (match = this._number.exec(input)) {\n          type = 'literal';\n          value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#' +\n                  (match[1] ? 'double' : (/^[+\\-]?\\d+$/.test(match[0]) ? 'integer' : 'decimal'));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword.\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean.\n        if (match = this._boolean.exec(input)) {\n          type = 'literal';\n          value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#boolean';\n        }\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate.\n        if (match = this._shortPredicates.exec(input)) {\n          type = 'abbreviation';\n          value = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n        }\n        else\n          inconclusive = true;\n        break;\n\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        // The next token is punctuation\n        matchLength = 1;\n        type = firstChar;\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more.\n      if (inconclusive) {\n        // Try to find a prefix.\n        if ((this._prevTokenType === '@prefix' || this._prevTokenType === 'PREFIX') &&\n            (match = this._prefix.exec(input))) {\n          type = 'prefix';\n          value = match[1] || '';\n        }\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' '))) {\n          type = 'prefixed';\n          prefix = match[1] || '';\n          value = this._unescape(match[2]);\n        }\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read.\n      if (this._prevTokenType === '^')\n        type = (type === 'IRI' || type === 'prefixed') ? 'type' : '';\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token.\n      callback(null, { line: line, type: type, value: value, prefix: prefix });\n      this._prevTokenType = type;\n\n      // Advance to next part to tokenize.\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  },\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters.\n  _unescape: function (item) {\n    try {\n      return item.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode <= 0xFFFF) return fromCharCode(charCode);\n          return fromCharCode(0xD800 + ((charCode -= 0x10000) / 0x400), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = escapeReplacements[escapedChar];\n          if (!replacement)\n            throw new Error();\n          return replacement;\n        }\n      });\n    }\n    catch (error) { return null; }\n  },\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError: function (issue) {\n    this._input = null;\n    return new Error('Syntax error: unexpected \"' + issue + '\" on line ' + this._line + '.');\n  },\n\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize: function (input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end.\n    if (typeof input === 'string') {\n      this._input = input;\n      immediately(function () { self._tokenizeToEnd(callback, true); });\n    }\n    // Otherwise, the input will be streamed.\n    else {\n      this._input = '';\n\n      // If no input was given, it will be streamed through `addChunk` and ended with `end`\n      if (!input || typeof input === 'function') {\n        this.addChunk = addChunk;\n        this.end = end;\n        if (!callback)\n          callback = input;\n      }\n      // Otherwise, the input itself must be a stream\n      else {\n        if (typeof input.setEncoding === 'function')\n          input.setEncoding('utf8');\n        input.on('data', addChunk);\n        input.on('end', end);\n      }\n    }\n\n    // Adds the data chunk to the buffer and parses as far as possible\n    function addChunk(data) {\n      if (self._input !== null) {\n        self._input += data;\n        self._tokenizeToEnd(callback, false);\n      }\n    }\n\n    // Parses until the end\n    function end() {\n      if (self._input !== null) {\n        self._tokenizeToEnd(callback, true);\n      }\n    }\n  },\n};\n\n// ## Exports\n\n// Export the `N3Lexer` class as a whole.\nmodule.exports = N3Lexer;\n","// **N3Parser** parses N3 documents.\nvar N3Lexer = require('./N3Lexer');\n\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_NIL    = RDF_PREFIX + 'nil',\n    RDF_FIRST  = RDF_PREFIX + 'first',\n    RDF_REST   = RDF_PREFIX + 'rest';\n\nvar absoluteIRI = /:/,\n    documentPart = /[^\\/]*$/,\n    rootIRI = /^(?:[^:]+:\\/*)?[^\\/]*/;\n\n// The next ID for new blank nodes\nvar blankNodePrefix = 0, blankNodeCount = 0;\n\n// ## Constructor\nfunction N3Parser(options) {\n  if (!(this instanceof N3Parser))\n    return new N3Parser(options);\n  this._tripleStack = [];\n  this._graph = null;\n\n  // Set the document IRI.\n  options = options || {};\n  if (!options.documentIRI) {\n    this._baseIRI = null;\n    this._baseIRIPath = null;\n  }\n  else {\n    if (options.documentIRI.indexOf('#') > 0)\n      throw new Error('Invalid document IRI');\n    this._baseIRI = options.documentIRI;\n    this._baseIRIPath = this._baseIRI.replace(documentPart, '');\n    this._baseIRIRoot = this._baseIRI.match(rootIRI)[0];\n  }\n\n  // Set supported features depending on the format.\n  var format = (typeof options.format === 'string') && options.format.match(/\\w*$/)[0].toLowerCase(),\n      isTurtle = format === 'turtle', isTriG = format === 'trig',\n      isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n      isLineMode = isNTriples || isNQuads;\n  if (!(this._supportsNamedGraphs = !isTurtle))\n    this._readPredicateOrNamedGraph = this._readPredicate;\n  this._supportsQuads = !(isTurtle || isTriG || isNTriples);\n  // Disable relative IRIs in N-Triples or N-Quads mode\n  if (isLineMode) {\n    this._baseIRI = '';\n    this._resolveIRI = function (token) {\n      this._error('Disallowed relative IRI', token);\n      return this._callback = noop, this._subject = null;\n    };\n  }\n  this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode });\n}\n\n// ## Private class methods\n\n// ### `_resetBlankNodeIds` restarts blank node identification.\nN3Parser._resetBlankNodeIds = function () {\n  blankNodePrefix = blankNodeCount = 0;\n};\n\nN3Parser.prototype = {\n  // ## Private methods\n\n  // ### `_readInTopContext` reads a token when in the top context.\n  _readInTopContext: function (token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done.\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration.\n    case '@prefix':\n      this._sparqlStyle = false;\n      return this._readPrefix;\n    case 'PREFIX':\n      this._sparqlStyle = true;\n      return this._readPrefix;\n    // It could be a base declaration.\n    case '@base':\n      this._sparqlStyle = false;\n      return this._readBaseIRI;\n    case 'BASE':\n      this._sparqlStyle = true;\n      return this._readBaseIRI;\n    // It could be a graph.\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs) {\n        return this._readNamedGraphLabel;\n      }\n    // Otherwise, the next token must be a subject.\n    default:\n      return this._readSubject(token);\n    }\n  },\n\n  // ### `_readSubject` reads a triple's subject.\n  _readSubject: function (token) {\n    this._predicate = null;\n    switch (token.type) {\n    case 'IRI':\n      if (this._baseIRI === null || absoluteIRI.test(token.value))\n        this._subject = token.value;\n      else\n        this._subject = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._subject = prefix + token.value;\n      break;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      this._subject = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: null, object: null, type: 'blank' });\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: RDF_NIL, predicate: null, object: null, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    case '}':\n      return this._readPunctuation(token);\n    default:\n      return this._error('Expected subject but got ' + token.type, token);\n    }\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph.\n    return this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readPredicate` reads a triple's predicate.\n  _readPredicate: function (token) {\n    var type = token.type;\n    switch (type) {\n    case 'IRI':\n    case 'abbreviation':\n      if (this._baseIRI === null || absoluteIRI.test(token.value))\n        this._predicate = token.value;\n      else\n        this._predicate = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      if (token.prefix === '_') {\n        return this._error('Disallowed blank node as predicate', token);\n      }\n      else {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        this._predicate = prefix + token.value;\n      }\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon.\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Extra semicolons can be safely ignored\n      return this._readPredicate;\n    default:\n      return this._error('Expected predicate to follow \"' + this._subject + '\"', token);\n    }\n    // The next token must be an object.\n    return this._readObject;\n  },\n\n  // ### `_readObject` reads a triple's object.\n  _readObject: function (token) {\n    switch (token.type) {\n    case 'IRI':\n      if (this._baseIRI === null || absoluteIRI.test(token.value))\n        this._object = token.value;\n      else\n        this._object = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._object = prefix + token.value;\n      break;\n    case 'literal':\n      this._object = token.value;\n      return this._readDataTypeOrLang;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      var blank = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: blank, type: 'blank' });\n      this._subject = blank;\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    default:\n      return this._error('Expected object to follow \"' + this._predicate + '\"', token);\n    }\n    return this._getTripleEndReader();\n  },\n\n  // ### `_readPredicateOrNamedGraph` reads a triple's predicate, or a named graph.\n  _readPredicateOrNamedGraph: function (token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  },\n\n  // ### `_readGraph` reads a graph.\n  _readGraph: function (token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  },\n\n  // ### `_readBlankNodeHead` reads the head of a blank node.\n  _readBlankNodeHead: function (token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    this._predicate = null;\n    return this._readPredicate(token);\n  },\n\n  // ### `_readBlankNodeTail` reads the end of a blank node.\n  _readBlankNodeTail: function (token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node triple.\n    if (this._subject !== null)\n      this._callback(null, { subject:   this._subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     this._graph || '' });\n\n    // Restore parent triple that contains the blank node.\n    var triple = this._tripleStack.pop();\n    this._subject = triple.subject;\n    // Was the blank node the object?\n    if (triple.object !== null) {\n      // Restore predicate and object as well, and continue by reading punctuation.\n      this._predicate = triple.predicate;\n      this._object = triple.object;\n      return this._getTripleEndReader();\n    }\n    // The blank node was the subject, so continue reading the predicate.\n    // If the blank node didn't contain any predicates, it could also be the label of a named graph.\n    return this._predicate !== null ? this._readPredicate : this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readDataTypeOrLang` reads an _optional_ data type or language.\n  _readDataTypeOrLang: function (token) {\n    switch (token.type) {\n    case 'type':\n      var value;\n      if (token.prefix === '') {\n        if (this._baseIRI === null || absoluteIRI.test(token.value))\n          value = token.value;\n        else\n          value = this._resolveIRI(token);\n      }\n      else {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        value = prefix + token.value;\n      }\n      this._object += '^^' + value;\n      return this._getTripleEndReader();\n    case 'langcode':\n      this._object += '@' + token.value.toLowerCase();\n      return this._getTripleEndReader();\n    default:\n      return this._getTripleEndReader().call(this, token);\n    }\n  },\n\n  // ### `_readListItem` reads items from a list.\n  _readListItem: function (token) {\n    var item = null,                  // The actual list item.\n        itemHead = null,              // The head of the rdf:first predicate.\n        prevItemHead = this._subject, // The head of the previous rdf:first predicate.\n        stack = this._tripleStack,    // The stack of triples part of recursion (lists, blanks, etc.).\n        parentTriple = stack[stack.length - 1], // The triple containing the current list.\n        next = this._readListItem;    // The next function to execute.\n\n    switch (token.type) {\n    case 'IRI':\n      item = token.value;\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      item = prefix + token.value;\n      break;\n    case 'literal':\n      item = token.value;\n      next = this._readDataTypeOrLang;\n      break;\n    case '[':\n      // Stack the current list triple and start a new triple with a blank node as subject.\n      itemHead = '_:b' + blankNodeCount++;\n      item     = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: item, type: 'blank' });\n      this._subject = item;\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list triple and start a new list\n      itemHead = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      next = this._readListItem;\n      break;\n    case ')':\n      // Restore the parent triple.\n      stack.pop();\n      // If this list is contained within a parent list, return the membership triple here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._callback(null, { subject:   parentTriple.subject,\n                               predicate: parentTriple.predicate,\n                               object:    parentTriple.object,\n                               graph:     this._graph || '' });\n      // Restore the parent triple's subject.\n      this._subject = parentTriple.subject;\n      // Was this list in the parent triple's subject?\n      if (parentTriple.predicate === null) {\n        // The next token is the predicate.\n        next = this._readPredicate;\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.subject === RDF_NIL)\n          return next;\n      }\n      // The list was in the parent triple's object.\n      else {\n        // Restore the parent triple's predicate and object as well.\n        this._predicate = parentTriple.predicate;\n        this._object = parentTriple.object;\n        next = this._getTripleEndReader();\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.object === RDF_NIL)\n          return next;\n      }\n      // Close the list by making the item head nil.\n      itemHead = RDF_NIL;\n      break;\n    default:\n      return this._error('Expected list item instead of \"' + token.type + '\"', token);\n    }\n\n     // Create a new blank node if no item head was assigned yet.\n    if (itemHead === null)\n      this._subject = itemHead = '_:b' + blankNodeCount++;\n\n    // Is this the first element of the list?\n    if (prevItemHead === null) {\n      // This list is either the object or the subject.\n      if (parentTriple.object === RDF_NIL)\n        parentTriple.object = itemHead;\n      else\n        parentTriple.subject = itemHead;\n    }\n    else {\n      // The rest of the list is in the current head.\n      this._callback(null, { subject:   prevItemHead,\n                             predicate: RDF_REST,\n                             object:    itemHead,\n                             graph:     this._graph || '' });\n    }\n    // Add the item's value.\n    if (item !== null)\n      this._callback(null, { subject:   itemHead,\n                             predicate: RDF_FIRST,\n                             object:    item,\n                             graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readPunctuation` reads punctuation between triples or triple parts.\n  _readPunctuation: function (token) {\n    var next, subject = this._subject, graph = this._graph;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next.\n    case '.':\n      this._subject = null;\n      next = this._readInTopContext;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    // An IRI means this is a quad (only allowed if not already inside a graph).\n    case 'IRI':\n      if (this._supportsQuads && this._graph === null) {\n        if (this._baseIRI === null || absoluteIRI.test(token.value))\n          graph = token.value;\n        else\n          graph = this._resolveIRI(token);\n        subject = this._subject;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    // An prefixed name means this is a quad (only allowed if not already inside a graph).\n    case 'prefixed':\n      if (this._supportsQuads && this._graph === null) {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        graph = prefix + token.value;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    if (subject !== null)\n      this._callback(null, { subject:   subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     graph || '' });\n    return next;\n  },\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation: function (token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    this._callback(null, { subject:   this._subject,\n                           predicate: this._predicate,\n                           object:    this._object,\n                           graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad.\n  _readQuadPunctuation: function (token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration.\n  _readPrefix: function (token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  },\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration.\n  _readPrefixIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixIRI;\n    if (this._baseIRI === null || absoluteIRI.test(token.value))\n      prefixIRI = token.value;\n    else\n      prefixIRI = this._resolveIRI(token);\n    this._prefixes[this._prefix] = prefixIRI;\n    this._prefixCallback(this._prefix, prefixIRI);\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration.\n  _readBaseIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow base declaration', token);\n    if (token.value.indexOf('#') > 0)\n      return this._error('Invalid base IRI', token);\n    if (this._baseIRI === null || absoluteIRI.test(token.value))\n      this._baseIRI = token.value;\n    else\n      this._baseIRI = this._resolveIRI(token);\n    this._baseIRIPath = this._baseIRI.replace(documentPart, '');\n    this._baseIRIRoot = this._baseIRI.match(rootIRI)[0];\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph.\n  _readNamedGraphLabel: function (token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  },\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph.\n  _readNamedGraphBlankLabel: function (token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = '_:b' + blankNodeCount++;\n    return this._readGraph;\n  },\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration.\n  _readDeclarationPunctuation: function (token) {\n    // SPARQL-style declarations don't have punctuation.\n    if (this._sparqlStyle)\n      return this._readInTopContext(token);\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_getTripleEndReader` gets the next reader function at the end of a triple.\n  _getTripleEndReader: function () {\n    var stack = this._tripleStack;\n    if (stack.length === 0)\n      return this._readPunctuation;\n\n    switch (stack[stack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    }\n  },\n\n  // ### `_error` emits an error message through the callback.\n  _error: function (message, token) {\n    this._callback(new Error(message + ' at line ' + token.line + '.'));\n  },\n\n  // ### `_resolveIRI` resolves an IRI token against the base path\n  _resolveIRI: function (token) {\n    var iri = token.value;\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined:\n      return this._baseIRI;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#':\n      return this._baseIRI     + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?':\n      return this._baseIRI.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root relative IRIs at the root of the base IRI\n    case '/':\n      return this._baseIRIRoot + iri;\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      return this._baseIRIPath + iri;\n    }\n  },\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed triple through the callback.\n  parse: function (input, tripleCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = '_:b' + blankNodePrefix++ + '_';\n\n    // If the input argument is not given, shift parameters\n    if (typeof input === 'function')\n      prefixCallback = tripleCallback, tripleCallback = input, input = null;\n\n    // Set the triple and prefix callbacks.\n    this._callback = tripleCallback || noop;\n    this._prefixCallback = prefixCallback || noop;\n\n    // Execute the read callback when a token arrives.\n    var self = this;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback !== undefined)\n        self._readCallback = self._readCallback(token);\n    });\n\n    // If no input was given, it can be added with `addChunk` and ended with `end`\n    if (!input) {\n      this.addChunk = this._lexer.addChunk;\n      this.end = this._lexer.end;\n    }\n  }\n};\n\n// The empty function\nfunction noop() {}\n\n// ## Exports\n\n// Export the `N3Parser` class as a whole.\nmodule.exports = N3Parser;\n","// **N3Store** objects store N3 triples by graph in memory.\n\nvar expandPrefixedName = require('./N3Util').expandPrefixedName;\n\n// ## Constructor\nfunction N3Store(triples, options) {\n  if (!(this instanceof N3Store))\n    return new N3Store(triples, options);\n\n  // The number of triples is initially zero.\n  this._size = 0;\n  // `_graphs` contains subject, predicate, and object indexes per graph.\n  this._graphs = Object.create(null);\n  // `_entities` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers.\n  // This saves memory, since only the numbers have to be stored in `_graphs`.\n  this._entities = Object.create(null);\n  this._entities['><'] = 0; // Dummy entry, so the first actual key is non-zero\n  this._entityCount = 0;\n  // `_blankNodeIndex` is the index of the last created blank node that was automatically named\n  this._blankNodeIndex = 0;\n\n  // Shift parameters if `triples` is not given\n  if (!options && triples && !triples[0])\n    options = triples, triples = null;\n\n  // Add triples and prefixes if passed\n  this._prefixes = Object.create(null);\n  if (options && options.prefixes)\n    this.addPrefixes(options.prefixes);\n  if (triples)\n    this.addTriples(triples);\n}\n\nN3Store.prototype = {\n  // ## Public properties\n\n  // ### `size` returns the number of triples in the store.\n  get size() {\n    // Return the triple count if if was cached.\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of triples by counting to the deepest level.\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  },\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a triple to a three-layered index.\n  _addToIndex: function (index0, key0, key1, key2) {\n    // Create layers as necessary.\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signalizes the presence of the triple.\n    index2[key2] = null;\n  },\n\n  // ### `_removeFromIndex` removes a triple from a three-layered index.\n  _removeFromIndex: function (index0, key0, key1, key2) {\n    // Remove the triple from the index.\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty.\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  },\n\n  // ### `_findInIndex` finds a set of triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting triple\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created triples.\n  _findInIndex: function (index0, key0, key1, key2, name0, name1, name2, graph) {\n    var results = [], entityKeys = Object.keys(this._entities), tmp, index1, index2;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create triples for all items found in index 2.\n            for (var l = values.length - 1; l >= 0; l--) {\n              var result = { subject: '', predicate: '', object: '', graph: graph };\n              result[name0] = entity0;\n              result[name1] = entity1;\n              result[name2] = entityKeys[values[l]];\n              results.push(result);\n            }\n          }\n        }\n      }\n    }\n    return results;\n  },\n\n  // ### `_countInIndex` counts matching triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  _countInIndex: function (index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n\n        // If a key is specified, count only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the triple if it exists.\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all triples.\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  },\n\n  // ## Public methods\n\n  // ### `addTriple` adds a new N3 triple to the store.\n  addTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Find the graph that will contain the triple.\n    graph = graph || '';\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet.\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = {\n        subjects: {},\n        predicates: {},\n        objects: {}\n      };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway.\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var entities = this._entities;\n    subject   = entities[subject]   || (entities[subject]   = ++this._entityCount);\n    predicate = entities[predicate] || (entities[predicate] = ++this._entityCount);\n    object    = entities[object]    || (entities[object]    = ++this._entityCount);\n\n    this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached triple count is now invalid.\n    this._size = null;\n  },\n\n  // ### `addTriples` adds multiple N3 triples to the store.\n  addTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds support for querying with the given prefix\n  addPrefix: function (prefix, iri) {\n    this._prefixes[prefix] = iri;\n  },\n\n  // ### `addPrefixex` adds support for querying with the given prefixes\n  addPrefixes: function (prefixes) {\n    for (var prefix in prefixes)\n      this.addPrefix(prefix, prefixes[prefix]);\n  },\n\n  // ### `removeTriple` removes an N3 triple from the store if it exists.\n  removeTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components.\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n    graph = graph || '';\n\n    // Find internal identifiers for all components.\n    var graphItem, entities = this._entities, graphs = this._graphs;\n    if (!(subject     = entities[subject]))   return;\n    if (!(predicate   = entities[predicate])) return;\n    if (!(object      = entities[object]))    return;\n    if (!(graphItem = graphs[graph]))   return;\n\n    // Verify that the triple exists.\n    var subjects, predicates;\n    if (!(subjects   = graphItem.subjects[subject])) return;\n    if (!(predicates = subjects[predicate])) return;\n    if (!(object in predicates)) return;\n\n    // Remove it from all indexes.\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty.\n    for (subject in graphItem.subjects) return;\n    delete graphs[graph];\n  },\n\n  // ### `removeTriples` removes multiple N3 triples from the store.\n  removeTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.removeTriple(triples[i]);\n  },\n\n  // ### `find` finds a set of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  find: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.findByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `findByIRI` finds a set of triples matching a pattern.\n  // Setting `subject`, `predicate`, or `object` to a falsy value means an _anything_ wildcard.\n  // Setting `graph` to a falsy value means the default graph.\n  findByIRI: function (subject, predicate, object, graph) {\n    graph = graph || '';\n    var graphItem = this._graphs[graph], entities = this._entities;\n\n    // If the specified graph contain no triples, there are no results.\n    if (!graphItem) return [];\n\n    // Translate IRIs to internal index keys.\n    // Optimization: if the entity doesn't exist, no triples with it exist.\n    if (subject   && !(subject   = entities[subject]))   return [];\n    if (predicate && !(predicate = entities[predicate])) return [];\n    if (object    && !(object    = entities[object]))    return [];\n\n    // Choose the optimal index, based on what fields are present\n    if (subject) {\n      if (object)\n        // If subject and object are given, the object index will be the fastest.\n        return this._findInIndex(graphItem.objects, object, subject, predicate,\n                                 'object', 'subject', 'predicate', graph);\n      else\n        // If only subject and possibly predicate are given, the subject index will be the fastest.\n        return this._findInIndex(graphItem.subjects, subject, predicate, null,\n                                 'subject', 'predicate', 'object', graph);\n    }\n    else if (predicate)\n      // If only predicate and possibly object are given, the predicate index will be the fastest.\n      return this._findInIndex(graphItem.predicates, predicate, object, null,\n                               'predicate', 'object', 'subject', graph);\n    else if (object)\n      // If only object is given, the object index will be the fastest.\n      return this._findInIndex(graphItem.objects, object, null, null,\n                               'object', 'subject', 'predicate', graph);\n    else\n      // If nothing is given, iterate subjects and predicates first\n      return this._findInIndex(graphItem.subjects, null, null, null,\n                               'subject', 'predicate', 'object', graph);\n  },\n\n  // ### `count` returns the number of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  count: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.countByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `countByIRI` returns the number of triples matching a pattern.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  countByIRI: function (subject, predicate, object, graph) {\n    graph = graph || '';\n    var graphItem = this._graphs[graph], entities = this._entities;\n\n    // If the specified graph contain no triples, there are no results.\n    if (!graphItem) return 0;\n\n    // Translate IRIs to internal index keys.\n    // Optimization: if the entity doesn't exist, no triples with it exist.\n    if (subject   && !(subject   = entities[subject]))   return 0;\n    if (predicate && !(predicate = entities[predicate])) return 0;\n    if (object    && !(object    = entities[object]))    return 0;\n\n    // Choose the optimal index, based on what fields are present\n    if (subject) {\n      if (object)\n        // If subject and object are given, the object index will be the fastest.\n        return this._countInIndex(graphItem.objects, object, subject, predicate);\n      else\n        // If only subject and possibly predicate are given, the subject index will be the fastest.\n        return this._countInIndex(graphItem.subjects, subject, predicate, object);\n    }\n    else if (predicate) {\n      // If only predicate and possibly object are given, the predicate index will be the fastest.\n      return this._countInIndex(graphItem.predicates, predicate, object, subject);\n    }\n    else {\n      // If only object is possibly given, the object index will be the fastest.\n      return this._countInIndex(graphItem.objects, object, subject, predicate);\n    }\n  },\n\n  // ### `createBlankNode` creates a new blank node, returning its name.\n  createBlankNode: function (suggestedName) {\n    var name;\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName;\n      var index = 1;\n      while (this._entities[name])\n        name = suggestedName + index++;\n    }\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._entities[name]);\n    }\n    this._entities[name] = this._entityCount++;\n    return name;\n  },\n};\n\n// ## Exports\n\n// Export the `N3Store` class as a whole.\nmodule.exports = N3Store;\n","// **N3StreamParser** parses an N3 stream into a triple stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Parser = require('./N3Parser.js');\n\n// ## Constructor\nfunction N3StreamParser(options) {\n  if (!(this instanceof N3StreamParser))\n    return new N3StreamParser(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { decodeStrings: true });\n  this._readableState.objectMode = true;\n\n  // Set up parser\n  var self = this, parser = new N3Parser(options);\n  parser.parse(\n    // Handle triples by pushing them down the pipeline\n    function (error, triple) {\n      triple && self.push(triple) ||\n      error  && self.emit('error', error);\n    },\n    // Emit prefixes through the `prefix` event\n    this.emit.bind(this, 'prefix'));\n\n  // Implement Transform methods on top of parser\n  this._transform = function (chunk, encoding, done) { parser.addChunk(chunk); done(); };\n  this._flush = function (done) { parser.end(); done(); };\n}\nutil.inherits(N3StreamParser, Transform);\n\n// ## Exports\n// Export the `N3StreamParser` class as a whole.\nmodule.exports = N3StreamParser;\n","// **N3StreamWriter** serializes a triple stream into an N3 stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Writer = require('./N3Writer.js');\n\n// ## Constructor\nfunction N3StreamWriter(options) {\n  if (!(this instanceof N3StreamWriter))\n    return new N3StreamWriter(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { encoding: 'utf8' });\n  this._writableState.objectMode = true;\n\n  // Set up writer with a dummy stream object\n  var self = this;\n  var writer = new N3Writer({\n    write: function (chunk, encoding, callback) { self.push(chunk); callback && callback(); },\n    end: function (callback) { self.push(null); callback && callback(); },\n  }, options);\n\n  // Implement Transform methods on top of writer\n  this._transform = function (triple, encoding, done) { writer.addTriple(triple, done); };\n  this._flush = function (done) { writer.end(done); };\n}\nutil.inherits(N3StreamWriter, Transform);\n\n// ## Exports\n// Export the `N3StreamWriter` class as a whole.\nmodule.exports = N3StreamWriter;\n","// **N3Util** provides N3 utility functions\n\nvar Xsd = 'http://www.w3.org/2001/XMLSchema#';\nvar XsdString  = Xsd + 'string';\nvar XsdInteger = Xsd + 'integer';\nvar XsdDecimal = Xsd + 'decimal';\nvar XsdBoolean = Xsd + 'boolean';\nvar RdfLangString = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString';\n\nvar N3Util = {\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  isIRI: function (entity) {\n    if (!entity)\n      return entity;\n    var firstChar = entity[0];\n    return firstChar !== '\"' && firstChar !== '_';\n  },\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  isLiteral: function (entity) {\n    return entity && entity[0] === '\"';\n  },\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  isBlank: function (entity) {\n    return entity && entity.substr(0, 2) === '_:';\n  },\n\n  // Gets the string value of a literal in the N3 library\n  getLiteralValue: function (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  },\n\n  // Gets the type of a literal in the N3 library\n  getLiteralType: function (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  },\n\n  // Gets the language of a literal in the N3 library\n  getLiteralLanguage: function (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  },\n\n  // Tests whether the given entity (triple object) represents a prefixed name\n  isPrefixedName: function (entity) {\n    return entity && /^[^:\\/\"']*:[^:\\/\"']+$/.test(entity);\n  },\n\n  // Expands the prefixed name to a full IRI (also when it occurs as a literal's type)\n  expandPrefixedName: function (prefixedName, prefixes) {\n    var match = /(?:^|\"\\^\\^)([^:\\/#\"'\\^_]*):[^\\/]*$/.exec(prefixedName), prefix, base, index;\n    if (match)\n      prefix = match[1], base = prefixes[prefix], index = match.index;\n    if (base === undefined)\n      return prefixedName;\n\n    // The match index is non-zero when expanding a literal's type.\n    return index === 0 ? base + prefixedName.substr(prefix.length + 1)\n                       : prefixedName.substr(0, index + 3) +\n                         base + prefixedName.substr(index + prefix.length + 4);\n  },\n\n  // Creates an IRI in N3.js representation\n  createIRI: function (iri) {\n    return iri && iri[0] === '\"' ? N3Util.getLiteralValue(iri) : iri;\n  },\n\n  // Creates a literal in N3.js representation\n  createLiteral: function (value, modifier) {\n    if (!modifier) {\n      switch (typeof value) {\n      case 'boolean':\n        modifier = XsdBoolean;\n        break;\n      case 'number':\n        if (isFinite(value)) {\n          modifier = value % 1 === 0 ? XsdInteger : XsdDecimal;\n          break;\n        }\n      default:\n        return '\"' + value + '\"';\n      }\n    }\n    return '\"' + value +\n           (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '\"@'  + modifier.toLowerCase()\n                                                    : '\"^^' + modifier);\n  },\n};\n\n// Add the N3Util functions to the given object or its prototype\nfunction AddN3Util(parent, toPrototype) {\n  for (var name in N3Util)\n    if (!toPrototype)\n      parent[name] = N3Util[name];\n    else\n      parent.prototype[name] = ApplyToThis(N3Util[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\n// Expose N3Util, attaching all functions to it\nmodule.exports = AddN3Util(AddN3Util);\n","// **N3Writer** writes N3 documents.\n\n// Matches a literal as represented in memory by the N3 library\nvar N3LiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n                           '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\n// ## Constructor\nfunction N3Writer(outputStream, options) {\n  if (!(this instanceof N3Writer))\n    return new N3Writer(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    outputStream = this;\n    this._output = '';\n    this.write = function (chunk, encoding, callback) {\n      this._output += chunk;\n      callback && callback();\n    };\n  }\n  this._outputStream = outputStream;\n\n  // Initialize writer, depending on the format\n  this._subject = null;\n  options = options || {};\n  if (!(/triple|quad/i).test(options.format)) {\n    this._graph = '';\n    this._prefixIRIs = Object.create(null);\n    options.prefixes && this.addPrefixes(options.prefixes);\n  }\n  else {\n    this._writeTriple = this._writeTripleLine;\n  }\n}\n\nN3Writer.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n    // ### `_writeTriple` writes the triple to the output stream\n  _writeTriple: function (subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (this._graph !== graph) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._graph ? '\\n}\\n' : '.\\n')) +\n                    (graph ? this._encodeIriOrBlankNode(graph) + ' {\\n' : ''));\n        this._graph = graph, this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (this._subject === subject) {\n        // Don't repeat the predicate if it's the same\n        if (this._predicate === predicate)\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole triple\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeTripleLine` writes the triple or quad to the output stream as a single line\n  _writeTripleLine: function (subject, predicate, object, graph, done) {\n    // Don't use prefixes\n    delete this._prefixMatch;\n    // Write the triple\n    try {\n      this._write(this._encodeIriOrBlankNode(subject) + ' ' +\n                  this._encodeIriOrBlankNode(predicate) + ' ' +\n                  this._encodeObject(object) +\n                  (graph ? ' ' + this._encodeIriOrBlankNode(graph) + '.\\n' : '.\\n'), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri) {\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject: function (subject) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeObject` represents an object\n  _encodeObject: function (object) {\n    // Represent an IRI or blank node\n    if (object[0] !== '\"')\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    var match = N3LiteralMatcher.exec(object);\n    if (!match) throw new Error('Invalid literal: ' + object);\n    return this._encodeLiteral(match[1], match[2], match[3]);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  // ### `addTriple` adds the triple to the output stream\n  addTriple: function (subject, predicate, object, graph, done) {\n    // The triple was given as a triple object, so shift parameters\n    if (typeof object !== 'string')\n      this._writeTriple(subject.subject, subject.predicate, subject.object,\n                        subject.graph || '', predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph !== 'string')\n      this._writeTriple(subject, predicate, object, '', graph);\n    // The `graph` parameter was provided\n    else\n      this._writeTriple(subject, predicate, object, graph, done);\n  },\n\n  // ### `addTriples` adds the triples to the output stream\n  addTriples: function (triples) {\n    for (var i = 0; i < triples.length; i++)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (/[#\\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Finish a possible pending triple\n        if (this._subject !== null) {\n          this._write(this._graph ? '\\n}\\n' : '.\\n');\n          this._subject = null, this._graph = '';\n        }\n        // Write prefix\n        this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Finish a possible pending triple\n    if (this._subject !== null) {\n      this._write(this._graph ? '\\n}\\n' : '.\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // If writing to a string instead of an actual stream, send the string\n    if (this === this._outputStream)\n      return done && done(null, this._output);\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function () { singleDone = null, done(); };\n    // Ending a stream can error\n    try { this._outputStream.end(singleDone); }\n    // Execute the callback if it hasn't been executed\n    catch (error) { singleDone && singleDone(); }\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapeReplacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\n// ## Exports\n\n// Export the `N3Writer` class as a whole.\nmodule.exports = N3Writer;\n","/**\n * ECMAScript-262 V5 Implementation of the Core RDF Interfaces\n * \n *  - <http://www.w3.org/2010/02/rdfa/sources/rdf-interfaces/>\n *  - <http://github.org/webr3/rdf-interfaces/>\n *  \n * This is free and unencumbered software released into the public domain.\n * For more information, please refer to <http://unlicense.org/>\n */\nrdf = (function() {\n  var rdf = {};\n  rdf.encodeString = function(s) {\n    var out = \"\", skip = false, _g1 = 0, _g = s.length;\n    while(_g1 < _g) {\n      var i = _g1++;\n      if(!skip) {\n        var code = s.charCodeAt(i);\n        if(55296 <= code && code <= 56319) {\n          var low = s.charCodeAt(i + 1);\n          code = (code - 55296) * 1024 + (low - 56320) + 65536;\n          skip = true\n        }\n        if(code > 1114111) { throw new Error(\"Char out of range\"); }\n        var hex = \"00000000\".concat((new Number(code)).toString(16).toUpperCase());\n        if(code >= 65536) {\n          out += \"\\\\U\" + hex.slice(-8)\n        } else {\n          if(code >= 127 || code <= 31) {\n            switch(code) {\n              case 9:  out += \"\\\\t\"; break;\n              case 10: out += \"\\\\n\"; break;\n              case 13: out += \"\\\\r\"; break;\n              default: out += \"\\\\u\" + hex.slice(-4); break\n            }\n          } else {\n            switch(code) {\n              case 34: out += '\\\\\"'; break;\n              case 92: out += \"\\\\\\\\\"; break;\n              default: out += s.charAt(i); break\n            }\n          }\n        }\n      } else {\n        skip = !skip\n      }\n    }\n    return out\n  };\n  \n  rdf.BlankNode = function() {\n    return Object.defineProperties( {}, {\n      interfaceName: { writable: false, configurable : false, enumerable: true, value: 'BlankNode' },\n      nominalValue: { writable: false, configurable : false, enumerable: true, value: 'b'.concat(++rdf.BlankNode.NEXTID) },\n      valueOf: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this.nominalValue;\n      }},\n      equals: { writable: true, configurable : false, enumerable: true, value: function(o) {\n        if(!o.hasOwnProperty('interfaceName')) {\n          if(typeof o == 'function' && o.constructor.name == 'RegExp')\n            return o.test(this.valueOf().toString());\n          return this.valueOf() == o;\n        }\n        return (o.interfaceName == this.interfaceName) ? this.nominalValue == o.nominalValue : false;\n      }},\n      toString: { writable: false, configurable : false, enumerable: true, value: function() {\n        return '_:'.concat(this.nominalValue);\n      }},\n      toNT: { writable: false, configurable : false, enumerable: true, value: function() {\n        return rdf.encodeString(this.toString());\n      }},\n      h: { configurable : false, enumerable: false, get: function(){return this.nominalValue} },\n    })\n  };\n  rdf.BlankNode.NEXTID = 0;\n  \n  rdf.NamedNode = function(iri) {\n    return Object.defineProperties( {}, {\n      interfaceName: { writable: false, configurable : false, enumerable: true, value: 'NamedNode' },\n      nominalValue: { writable: false, configurable : false, enumerable: true, value: iri },\n      valueOf: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this.nominalValue;\n      }},\n      equals: { writable: true, configurable : false, enumerable: true, value: function(o) {\n        if(!o.hasOwnProperty('interfaceName')) {\n          if(typeof o == 'function' && o.constructor.name == 'RegExp')\n            return o.test(this.valueOf().toString());\n          return this.valueOf() == o;\n        }\n        return (o.interfaceName == this.interfaceName) ? this.nominalValue == o.nominalValue : false;\n      }},\n      toString: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this.nominalValue.toString();\n      }},\n      toNT: { writable: false, configurable : false, enumerable: true, value: function() {\n        return '<' + rdf.encodeString(this.toString()) + '>';\n      }},\n      h: { configurable : false, enumerable: false, get: function(){return this.nominalValue} }\n    })\n  };\n  \n  rdf.Literal = function(value, language, datatype, nativ) {\n    if(typeof language == \"string\" && language[0] == \"@\") language = language.slice(1);\n    return Object.defineProperties( {}, {\n      interfaceName: { writable: false, configurable : false, enumerable: true, value: 'Literal' },\n      nominalValue: { writable: false, configurable : false, enumerable: true, value: value },\n      valueOf: { writable: false, configurable : false, enumerable: true, value: function() {\n        return nativ === null ? this.nominalValue : nativ;\n      }},\n      language: { writable: false, configurable : false, enumerable: true, value: language },\n      datatype: { writable: false, configurable : false, enumerable: true, value: datatype },\n      equals: { writable: true, configurable : false, enumerable: true, value: function(o) {\n        if(!o.hasOwnProperty('interfaceName')) {\n          if(typeof o == 'function' && o.constructor.name == 'RegExp')\n            return o.test(this.valueOf().toString());\n          return this.valueOf() == o;\n        }\n        if(o.interfaceName != this.interfaceName) return false;\n        return this.h == o.h;\n      }},\n      toString: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this.nominalValue.toString();\n      }},\n      toNT: { writable: false, configurable : false, enumerable: true, value: function() {\n        var s = '\"' + rdf.encodeString(this.nominalValue) + '\"';\n        if( Boolean(this.language).valueOf() ) return s.concat('@' + this.language);\n        if( Boolean(this.datatype).valueOf() ) return s.concat('^^' + this.datatype.toNT());\n        return s;\n      }},\n      h: { writable: false, configurable : false, enumerable: false, value: language + '|' + (datatype ? datatype.toString() : '') + '|' + value.toString() }\n    })\n  };\n  \n  rdf.Triple = function(s,p,o) {\n    return Object.defineProperties( {}, {\n      subject: { writable: false, configurable : false, enumerable: true, value: s },\n      predicate: { writable: false, configurable : false, enumerable: true, value: p },\n      object: { writable: false, configurable : false, enumerable: true, value: o },\n      equals: { writable: true, configurable : false, enumerable: true, value: function(t) {\n        return this.s.equals(t.s) && this.p.equals(t.p) && this.o.equals(t.o);\n      }},\n      toString: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this.s.toNT() + \" \" + this.p.toNT() + \" \" + this.o.toNT() + \" .\";\n      }},\n      s: { configurable : false, enumerable: false, get: function() { return this.subject } },\n      p: { configurable : false, enumerable: false, get: function() { return this.predicate } },\n      o: { configurable : false, enumerable: false, get: function() { return this.object } }\n    })\n  };\n  \n  rdf.Graph = function(a) {\n    return Object.defineProperties( {}, {\n      _graph: { writable: true, configurable : false, enumerable: false, value: [] },\n      _spo: { writable: true, configurable : false, enumerable: false, value: {} },\n      length: { configurable : false, enumerable: true, get: function() {\n        return this._graph.length;\n      }},\n      add: { writable: false, configurable : false, enumerable: true, value: function(t) {\n        this._spo[t.s.h] || (this._spo[t.s.h] = {});\n        this._spo[t.s.h][t.p.h] || (this._spo[t.s.h][t.p.h] = {});\n        if(!this._spo[t.s.h][t.p.h][t.o.h]) {\n          this._spo[t.s.h][t.p.h][t.o.h] = t;\n          this._graph.push(t);\n          this.actions.forEach(function(a){a.run(t)});\n        }\n        return this;\n      }},\n      addArray: { writable: false, configurable : false, enumerable: false, value: function(a) {\n        if(Array.isArray(a)) var g = this, b = a.forEach( function(t) { g.add(t) });\n        return this;\n      }},\n      remove: { writable: false, configurable : false, enumerable: true, value: function(t) {\n        this._spo[t.s.h] && this._spo[t.s.h][t.p.h] && this._spo[t.s.h][t.p.h][t.o.h] && (\n          delete this._spo[t.s.h][t.p.h][t.o.h] &&\n          this._graph.splice(this._graph.indexOf(t),1)  \n        );\n        return this;\n      }},\n      removeMatches: { writable: false, configurable : false, enumerable: true, value: function(s,p,o) {\n        s = arguments[0] === undefined ? null : s;\n        p = arguments[1] === undefined ? null : p;\n        o = arguments[2] === undefined ? null : o;\n        var r = [];\n        this.forEach(function(t,g) {\n          (s===null||t.s.equals(s)) && (p===null||t.p.equals(p)) && (o===null||t.o.equals(o)) && r.push(t);\n        });\n        for(i in r) this.remove(r[i]);\n        return this;\n      }},\n      toArray: { writable: false, configurable : false, enumerable: true, value: function() {\n        return this._graph.slice(0);\n      }},\n      some: { writable: false, configurable : false, enumerable: true, value: function(cb) {\n        return this._graph.some(cb);\n      }},\n      every: { writable: false, configurable : false, enumerable: true, value: function(cb) {\n        return this._graph.every(cb);\n      }},\n      filter: { writable: false, configurable : false, enumerable: true, value: function(cb) {\n        return new rdf.Graph(this._graph.filter(cb));\n      }},\n      forEach: { writable: false, configurable : false, enumerable: true, value: function(cb) {\n        var g = this; this._graph.forEach(function(t) { cb(t,g) });\n      }},\n      match: { writable: false, configurable : false, enumerable: true, value: function(s,p,o,l) {\n        s = arguments[0] === undefined ? null : s;\n        p = arguments[1] === undefined ? null : p;\n        o = arguments[2] === undefined ? null : o;\n        l = arguments[3] === undefined ? null : l;\n        var c = 0;\n        if(l<1) l=-1;\n        return new rdf.Graph(this._graph.filter(function(t) {\n          if(c == l) return false;\n          return (s===null||t.s.equals(s)) && (p===null||t.p.equals(p)) && (o===null||t.o.equals(o)) && ++c;\n        }));\n      }},\n      merge: { writable: false, configurable : false, enumerable: true, value: function(g) {\n        return new rdf.Graph().addAll(this).addAll(g);\n      }},\n      addAll: { writable: false, configurable : false, enumerable: true, value: function(g) {\n        return this.addArray(g.toArray());\n      }},\n      actions: { writable: false, configurable : false, enumerable: true, value: [] },\n      addAction: { writable: false, configurable : false, enumerable: true, value: function(a,r) {\n        if(r) this.forEach(function(t,g){a.run(t,g)});\n        this.actions.push(a);\n        return this;\n      }}\n    }).addArray(a);\n  };\n  \n  rdf.TripleAction = function(test,action) {\n    return Object.defineProperties( {}, {\n      action: { writable: true, configurable : false, enumerable: true, value: action },\n      test: { writable: true, configurable : false, enumerable: true, value: test },\n      run: { writable: false, configurable : false, enumerable: true, value: function(t,g) {\n        if(this.test(t)) this.action(t,g);\n      }}    \n    })\n  };\n  \n  rdf.PrefixMap = function(i) {\n    return Object.defineProperties( {} , {\n      resolve: { writable: false, configurable : false, enumerable: true, value: function(curie) {\n        var index = curie.indexOf(\":\");\n        if(index < 0 || curie.indexOf(\"//\") >= 0)  return null;\n        var prefix = curie.slice(0, index).toLowerCase();\n        if(!this[prefix]) return null;\n        return this[prefix].concat( curie.slice(++index) );\n      }},\n      shrink: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        for(pref in this)\n          if(iri.substr(0,this[pref].length) == this[pref])\n            return pref + ':' + iri.slice(this[pref].length);\n        return iri;\n      }},\n      setDefault: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        this[''] = iri;\n      }},\n      addAll: { writable: false, configurable : false, enumerable: true, value: function(prefixes, override) {\n        for(p in prefixes)\n          if(!this[p] || override)\n            this[p] = prefixes[p];\n        return this;\n      }}\n    }).addAll(i);\n  };\n  \n  rdf.TermMap = function(i) {\n    return Object.defineProperties( {} , {\n      resolve: { writable: false, configurable : false, enumerable: true, value: function(term) {\n        if(this[term]) return this[term]\n        if(this[\"\"]) return this[\"\"].concat(term)\n        return null;\n      }},\n      shrink: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        for(t in this)\n          if(this[t] == iri) return t;\n        return iri;\n      }},\n      setDefault: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        this[''] = iri;\n      }},\n      addAll: { writable: false, configurable : false, enumerable: true, value: function(terms, override) {\n        for(t in terms)\n          if(!this[t] || override)\n            this[t] = terms[t];\n        return this;\n      }}\n    }).addAll(i);\n  }\n  \n  rdf.Profile = function(i) {\n    return Object.defineProperties( {} , {\n      prefixes: { writable: false, configurable : false, enumerable: true, value: new rdf.PrefixMap },\n      terms: { writable: false, configurable : false, enumerable: true, value: new rdf.TermMap },\n      resolve: { writable: false, configurable : false, enumerable: true, value: function(tp) {\n        return tp.indexOf(\":\") >= 0 ? this.prefixes.resolve(tp) : this.terms.resolve(tp);\n      }},\n      setDefaultVocabulary: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        this.terms.setDefault(iri);\n      }},\n      setDefaultPrefix: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        this.prefixes.setDefault(iri);\n      }},\n      setTerm: { writable: false, configurable : false, enumerable: true, value: function(term, iri) {\n        this.terms[term] = iri;\n      }},\n      setPrefix: { writable: false, configurable : false, enumerable: true, value: function(prefix, iri) {\n        this.prefixes[prefix] = iri;\n      }},\n      importProfile: { writable: false, configurable : false, enumerable: true, value: function(profile, override) {\n        if(!profile) return this;\n        this.prefixes.addAll(profile.prefixes, override);\n        this.terms.addAll(profile.terms, override);\n        return this;\n      }}\n    }).importProfile(i);\n  };\n  \n  rdf.RDFEnvironment = function() {\n    var rp = {terms:{},prefixes:{\n      owl: \"http://www.w3.org/2002/07/owl#\",\n      rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n      rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n      rdfa: \"http://www.w3.org/ns/rdfa#\",\n      xhv: \"http://www.w3.org/1999/xhtml/vocab#\",\n      xml: \"http://www.w3.org/XML/1998/namespace\",\n      xsd: \"http://www.w3.org/2001/XMLSchema#\",\n    }};\n    var xsd = {};\n    for(v in x=['string','boolean','dateTime','date','time','int','double','float','decimal','integer',\n              'nonPositiveInteger','negativeInteger','long','int','short','byte','nonNegativeInteger',\n              'unsignedLong','unsignedInt','unsignedShort','unsignedByte','positiveInteger'])\n      xsd[x[v]] = rp.prefixes.xsd.concat(x[v]);\n    return Object.defineProperties( new rdf.Profile(rp), {\n      createBlankNode: { writable: false, configurable : false, enumerable: true, value: function() {\n        return new rdf.BlankNode;\n      }},\n      createNamedNode: { writable: false, configurable : false, enumerable: true, value: function(iri) {\n        return new rdf.NamedNode(iri);\n      }},\n      createLiteral: { writable: false, configurable : false, enumerable: true, value: function(value) {\n        var l = null, dt = arguments[2], v = value;\n        if(arguments[1]) {\n          if(arguments[1].hasOwnProperty('interfaceName')) dt = arguments[1];\n          else l = arguments[1];\n        }\n        if(dt) {\n          switch(dt.valueOf()) {\n            case xsd.string:\n              v = new String(v); break;\n            case xsd['boolean']:\n              v = (new Boolean(v == \"false\" ? false : v)).valueOf(); break;\n            case xsd['float']:\n            case xsd.integer:\n            case xsd['long']:\n            case xsd['double']:\n            case xsd.decimal:\n            case xsd.nonPositiveInteger:\n            case xsd.nonNegativeInteger:\n            case xsd.negativeInteger:\n            case xsd['int']:\n            case xsd.unsignedLong:\n            case xsd.positiveInteger:\n            case xsd['short']:\n            case xsd.unsignedInt:\n            case xsd['byte']:\n            case xsd.unsignedShort:\n            case xsd.unsignedByte:\n              v = (new Number(v)).valueOf(); break;\n            case xsd['date']:\n            case xsd.time:\n            case xsd.dateTime:\n              v = new Date(v); break;\n          }\n        }\n        return new rdf.Literal(value,l,dt,v);\n      }},\n      createTriple: { writable: false, configurable : false, enumerable: true, value: function(s,p,o) {\n        return new rdf.Triple(s,p,o);\n      }},\n      createGraph: { writable: false, configurable : true, enumerable: true, value: function(a) {\n        return new rdf.Graph(a);\n      }},\n      createAction: { writable: false, configurable : false, enumerable: true, value: function(t,a) {\n        return new rdf.TripleAction(t,a);\n      }},\n      createProfile: { writable: false, configurable : false, enumerable: true, value: function(empty) {\n        return new rdf.Profile(!empty ? this : null);\n      }},\n      createTermMap: { writable: false, configurable : false, enumerable: true, value: function(empty) {\n        return new rdf.TermMap(!empty ? this.terms : null);\n      }},\n      createPrefixMap: { writable: false, configurable : false, enumerable: true, value: function(empty) {\n        return new rdf.PrefixMap(!empty ? this.prefixes : null);\n      }},\n    });\n  };\n  var _ = new rdf.RDFEnvironment;\n  Object.keys(rdf).forEach(function(k) {\n    _[k] = rdf[k];\n  });\n  return rdf = _;\n})();\n\nif(typeof module != \"undefined\") module.exports = rdf; \n\n","/* global rdf:true */\n'use strict';\n\n\nvar\n  rdf = require('rdf-interfaces');\n\n\nrdf.isNode = (typeof process !== 'undefined' && process.versions && process.versions.node);\n\n\nvar mixin = function (options) {\n  if (options == null) {\n\t\toptions = {};\n  }\n\n  if (typeof window !== 'undefined') {\n    window.rdf = rdf;\n  }\n\n  if (typeof Promise !== 'undefined') {\n    rdf.Promise = Promise;\n  } else {\n    rdf.Promise = null;\n  }\n\n  rdf.defaultRequest = null;\n  rdf.corsProxyRequest = null;\n  rdf.ns = {\n    type: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'\n  };\n\n  if (rdf.isNode) {\n    require('./lib/utils-node')(rdf);\n  } else {\n    require('./lib/utils-browser')(rdf);\n  }\n\n  if (typeof rdf.Graph === 'undefined') {\n    rdf.Graph = {};\n  }\n\n  rdf.Graph.difference = function (a, b) {\n    var d = rdf.createGraph();\n\n    a.forEach(function (at) {\n      if (!b.some(function (bt) { return at.equals(bt); })) {\n        d.add(at);\n      }\n    });\n\n    return d;\n  };\n\n  rdf.Graph.intersection = function (a, b) {\n    var i = rdf.createGraph();\n\n    a.forEach(function (at) {\n      if (b.some(function (bt) { return at.equals(bt); })) {\n        i.add(at);\n      }\n    });\n\n    return i;\n  };\n\n  rdf.Graph.map = function (graph, callback) {\n    var result = [];\n\n    graph.forEach(function (triple) {\n      result.push(callback(triple));\n    });\n\n    return result;\n  };\n\n  rdf.Graph.merge = function (a, b) {\n    var m = rdf.createGraph();\n\n    m.addAll(a);\n    m.addAll(b);\n\n    return m;\n  };\n\n  rdf.Graph.toString = function (a) {\n    var s = '';\n\n    a.forEach(function (t) {\n      s += t.toString() + '\\n';\n    });\n\n    return s;\n  };\n\n  var wrappedCreateGraph = rdf.createGraph.bind(rdf);\n\n  rdf.createGraphExt = function (triples) {\n    var graph = wrappedCreateGraph(triples);\n\n    graph.difference = rdf.Graph.difference.bind(graph, graph);\n\n    graph.intersection = rdf.Graph.intersection.bind(graph, graph);\n\n    graph.map = rdf.Graph.map.bind(graph, graph);\n\n    graph.toString = rdf.Graph.toString.bind(graph, graph);\n\n    if ('replaceMerge' in options && options.replaceMerge) {\n      graph.merge = rdf.Graph.merge.bind(graph, graph);\n    }\n\n    return graph;\n  };\n\n  Object.defineProperty(rdf, 'createGraph', { value: rdf.createGraphExt });\n\n  require('./lib/clownface.js')(rdf);\n  require('./lib/inmemory-store.js')(rdf);\n  require('./lib/jsonld-parser.js')(rdf);\n  require('./lib/jsonld-serializer.js')(rdf);\n  require('./lib/ldp-store.js')(rdf);\n  require('./lib/microdata-parser.js')(rdf);\n  require('./lib/ntriples-serializer.js')(rdf);\n  require('./lib/promise.js')(rdf);\n  require('./lib/rdfstore-store.js')(rdf);\n  require('./lib/rdfxml-parser.js')(rdf);\n  require('./lib/sparql-store.js')(rdf);\n  require('./lib/turtle-parser.js')(rdf);\n  require('./lib/turtle-serializer.js')(rdf);\n\n  return rdf;\n};\n\n\nif (!rdf.isNode) {\n  mixin();\n}\n\n\nmodule.exports = mixin;\n"]}